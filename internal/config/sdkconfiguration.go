// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package config

import (
	"context"
	"github.com/gr4vy/gr4vy-go/internal/globals"
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/retry"
	"net/http"
	"time"
)

type HTTPClient interface {
	Do(req *http.Request) (*http.Response, error)
}

type SDKConfiguration struct {
	Client          HTTPClient
	Security        func(context.Context) (interface{}, error)
	ServerURL       string
	Server          string
	ServerList      map[string]string
	ServerVariables map[string]map[string]string
	UserAgent       string
	Globals         globals.Globals
	RetryConfig     *retry.Config
	Timeout         *time.Duration
}

func (c *SDKConfiguration) GetServerDetails() (string, map[string]string) {
	if c.ServerURL != "" {
		return c.ServerURL, nil
	}

	if c.Server == "" {
		c.Server = "production"
	}

	return c.ServerList[c.Server], c.ServerVariables[c.Server]
}

func (c *SDKConfiguration) FillGlobalsFromEnv() {
	if c.Globals.MerchantAccountID == nil {
		if val := utils.ValueFromEnvVar("GR4VY_MERCHANT_ACCOUNT_ID", c.Globals.MerchantAccountID); val != nil {
			if typedVal, ok := val.(string); ok {
				c.Globals.MerchantAccountID = &typedVal
			}
		}
	}
}
