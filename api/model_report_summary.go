/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ReportSummary A report record summary.
type ReportSummary struct {
	// The type of this resource. Is always `report`.
	Type *string `json:"type,omitempty"`
	// The unique identifier for this report.
	Id *string `json:"id,omitempty"`
	// The unique ID for a merchant account.
	MerchantAccountId *string `json:"merchant_account_id,omitempty"`
	// The name of this report.
	Name *string `json:"name,omitempty"`
	// The unique identifier for the creator of this report.
	CreatorId NullableString `json:"creator_id,omitempty"`
	// The name of the creator of this report.
	CreatorDisplayName NullableString `json:"creator_display_name,omitempty"`
	// The type of the creator of this report.
	CreatorType NullableString `json:"creator_type,omitempty"`
}

// NewReportSummary instantiates a new ReportSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportSummary() *ReportSummary {
	this := ReportSummary{}
	return &this
}

// NewReportSummaryWithDefaults instantiates a new ReportSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportSummaryWithDefaults() *ReportSummary {
	this := ReportSummary{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ReportSummary) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportSummary) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ReportSummary) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ReportSummary) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ReportSummary) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportSummary) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ReportSummary) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ReportSummary) SetId(v string) {
	o.Id = &v
}

// GetMerchantAccountId returns the MerchantAccountId field value if set, zero value otherwise.
func (o *ReportSummary) GetMerchantAccountId() string {
	if o == nil || o.MerchantAccountId == nil {
		var ret string
		return ret
	}
	return *o.MerchantAccountId
}

// GetMerchantAccountIdOk returns a tuple with the MerchantAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportSummary) GetMerchantAccountIdOk() (*string, bool) {
	if o == nil || o.MerchantAccountId == nil {
		return nil, false
	}
	return o.MerchantAccountId, true
}

// HasMerchantAccountId returns a boolean if a field has been set.
func (o *ReportSummary) HasMerchantAccountId() bool {
	if o != nil && o.MerchantAccountId != nil {
		return true
	}

	return false
}

// SetMerchantAccountId gets a reference to the given string and assigns it to the MerchantAccountId field.
func (o *ReportSummary) SetMerchantAccountId(v string) {
	o.MerchantAccountId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ReportSummary) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportSummary) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ReportSummary) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ReportSummary) SetName(v string) {
	o.Name = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportSummary) GetCreatorId() string {
	if o == nil || o.CreatorId.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatorId.Get()
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportSummary) GetCreatorIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatorId.Get(), o.CreatorId.IsSet()
}

// HasCreatorId returns a boolean if a field has been set.
func (o *ReportSummary) HasCreatorId() bool {
	if o != nil && o.CreatorId.IsSet() {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given NullableString and assigns it to the CreatorId field.
func (o *ReportSummary) SetCreatorId(v string) {
	o.CreatorId.Set(&v)
}
// SetCreatorIdNil sets the value for CreatorId to be an explicit nil
func (o *ReportSummary) SetCreatorIdNil() {
	o.CreatorId.Set(nil)
}

// UnsetCreatorId ensures that no value is present for CreatorId, not even an explicit nil
func (o *ReportSummary) UnsetCreatorId() {
	o.CreatorId.Unset()
}

// GetCreatorDisplayName returns the CreatorDisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportSummary) GetCreatorDisplayName() string {
	if o == nil || o.CreatorDisplayName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatorDisplayName.Get()
}

// GetCreatorDisplayNameOk returns a tuple with the CreatorDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportSummary) GetCreatorDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatorDisplayName.Get(), o.CreatorDisplayName.IsSet()
}

// HasCreatorDisplayName returns a boolean if a field has been set.
func (o *ReportSummary) HasCreatorDisplayName() bool {
	if o != nil && o.CreatorDisplayName.IsSet() {
		return true
	}

	return false
}

// SetCreatorDisplayName gets a reference to the given NullableString and assigns it to the CreatorDisplayName field.
func (o *ReportSummary) SetCreatorDisplayName(v string) {
	o.CreatorDisplayName.Set(&v)
}
// SetCreatorDisplayNameNil sets the value for CreatorDisplayName to be an explicit nil
func (o *ReportSummary) SetCreatorDisplayNameNil() {
	o.CreatorDisplayName.Set(nil)
}

// UnsetCreatorDisplayName ensures that no value is present for CreatorDisplayName, not even an explicit nil
func (o *ReportSummary) UnsetCreatorDisplayName() {
	o.CreatorDisplayName.Unset()
}

// GetCreatorType returns the CreatorType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReportSummary) GetCreatorType() string {
	if o == nil || o.CreatorType.Get() == nil {
		var ret string
		return ret
	}
	return *o.CreatorType.Get()
}

// GetCreatorTypeOk returns a tuple with the CreatorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReportSummary) GetCreatorTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CreatorType.Get(), o.CreatorType.IsSet()
}

// HasCreatorType returns a boolean if a field has been set.
func (o *ReportSummary) HasCreatorType() bool {
	if o != nil && o.CreatorType.IsSet() {
		return true
	}

	return false
}

// SetCreatorType gets a reference to the given NullableString and assigns it to the CreatorType field.
func (o *ReportSummary) SetCreatorType(v string) {
	o.CreatorType.Set(&v)
}
// SetCreatorTypeNil sets the value for CreatorType to be an explicit nil
func (o *ReportSummary) SetCreatorTypeNil() {
	o.CreatorType.Set(nil)
}

// UnsetCreatorType ensures that no value is present for CreatorType, not even an explicit nil
func (o *ReportSummary) UnsetCreatorType() {
	o.CreatorType.Unset()
}

func (o ReportSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MerchantAccountId != nil {
		toSerialize["merchant_account_id"] = o.MerchantAccountId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.CreatorId.IsSet() {
		toSerialize["creator_id"] = o.CreatorId.Get()
	}
	if o.CreatorDisplayName.IsSet() {
		toSerialize["creator_display_name"] = o.CreatorDisplayName.Get()
	}
	if o.CreatorType.IsSet() {
		toSerialize["creator_type"] = o.CreatorType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableReportSummary struct {
	value *ReportSummary
	isSet bool
}

func (v NullableReportSummary) Get() *ReportSummary {
	return v.value
}

func (v *NullableReportSummary) Set(val *ReportSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableReportSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableReportSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportSummary(val *ReportSummary) *NullableReportSummary {
	return &NullableReportSummary{value: val, isSet: true}
}

func (v NullableReportSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


