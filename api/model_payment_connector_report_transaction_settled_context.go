/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
	"time"
)

// PaymentConnectorReportTransactionSettledContext Additional context for this event.
type PaymentConnectorReportTransactionSettledContext struct {
	// The unique ID of this transaction's settlement.
	SettlementId *string `json:"settlement_id,omitempty"`
	// The date and time when this transaction was settled.
	PostedAt *time.Time `json:"posted_at,omitempty"`
	// The date and time when information about this transaction's settlement was ingested into our system.
	IngestedAt *time.Time `json:"ingested_at,omitempty"`
	// The currency of this transaction's settlement in ISO 4217 three-letter code format.
	Currency *string `json:"currency,omitempty"`
	// The net amount settled for this transaction.
	Amount *int32 `json:"amount,omitempty"`
	// The exchange rate used to convert amounts from the processing currency to the settlement currency.
	ExchangeRate NullableFloat32 `json:"exchange_rate,omitempty"`
	// The total commission paid on this transaction, expressed in `currency`.
	Commission *int32 `json:"commission,omitempty"`
	// The interchange fee for this transaction, expressed in `currency`.
	Interchange NullableInt32 `json:"interchange,omitempty"`
	// The markup applied to this transaction by the acquirer, expressed in `currency`.
	Markup NullableInt32 `json:"markup,omitempty"`
	// The scheme fee for this transaction, expressed in `currency`.
	SchemeFee NullableInt32 `json:"scheme_fee,omitempty"`
	// The unique ID of the payment service used.
	PaymentServiceId *string `json:"payment_service_id,omitempty"`
	// The payment service definition used.
	PaymentServiceDefinitionId *string `json:"payment_service_definition_id,omitempty"`
	// The display name of the payment service used.
	PaymentServiceDisplayName *string `json:"payment_service_display_name,omitempty"`
	// The ID of the payment service report containing this transaction's settlement.
	PaymentServiceReportId *string `json:"payment_service_report_id,omitempty"`
	// The list of payment service report file IDs that make up the payment service report containing this transaction's settlement.
	PaymentServiceReportFileIds *[]string `json:"payment_service_report_file_ids,omitempty"`
	// The external ID of the transaction as set by the payment service.
	PaymentServiceTransactionId *string `json:"payment_service_transaction_id,omitempty"`
}

// NewPaymentConnectorReportTransactionSettledContext instantiates a new PaymentConnectorReportTransactionSettledContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentConnectorReportTransactionSettledContext() *PaymentConnectorReportTransactionSettledContext {
	this := PaymentConnectorReportTransactionSettledContext{}
	return &this
}

// NewPaymentConnectorReportTransactionSettledContextWithDefaults instantiates a new PaymentConnectorReportTransactionSettledContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentConnectorReportTransactionSettledContextWithDefaults() *PaymentConnectorReportTransactionSettledContext {
	this := PaymentConnectorReportTransactionSettledContext{}
	return &this
}

// GetSettlementId returns the SettlementId field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetSettlementId() string {
	if o == nil || o.SettlementId == nil {
		var ret string
		return ret
	}
	return *o.SettlementId
}

// GetSettlementIdOk returns a tuple with the SettlementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetSettlementIdOk() (*string, bool) {
	if o == nil || o.SettlementId == nil {
		return nil, false
	}
	return o.SettlementId, true
}

// HasSettlementId returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasSettlementId() bool {
	if o != nil && o.SettlementId != nil {
		return true
	}

	return false
}

// SetSettlementId gets a reference to the given string and assigns it to the SettlementId field.
func (o *PaymentConnectorReportTransactionSettledContext) SetSettlementId(v string) {
	o.SettlementId = &v
}

// GetPostedAt returns the PostedAt field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetPostedAt() time.Time {
	if o == nil || o.PostedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.PostedAt
}

// GetPostedAtOk returns a tuple with the PostedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetPostedAtOk() (*time.Time, bool) {
	if o == nil || o.PostedAt == nil {
		return nil, false
	}
	return o.PostedAt, true
}

// HasPostedAt returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasPostedAt() bool {
	if o != nil && o.PostedAt != nil {
		return true
	}

	return false
}

// SetPostedAt gets a reference to the given time.Time and assigns it to the PostedAt field.
func (o *PaymentConnectorReportTransactionSettledContext) SetPostedAt(v time.Time) {
	o.PostedAt = &v
}

// GetIngestedAt returns the IngestedAt field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetIngestedAt() time.Time {
	if o == nil || o.IngestedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.IngestedAt
}

// GetIngestedAtOk returns a tuple with the IngestedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetIngestedAtOk() (*time.Time, bool) {
	if o == nil || o.IngestedAt == nil {
		return nil, false
	}
	return o.IngestedAt, true
}

// HasIngestedAt returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasIngestedAt() bool {
	if o != nil && o.IngestedAt != nil {
		return true
	}

	return false
}

// SetIngestedAt gets a reference to the given time.Time and assigns it to the IngestedAt field.
func (o *PaymentConnectorReportTransactionSettledContext) SetIngestedAt(v time.Time) {
	o.IngestedAt = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PaymentConnectorReportTransactionSettledContext) SetCurrency(v string) {
	o.Currency = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetAmount() int32 {
	if o == nil || o.Amount == nil {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetAmountOk() (*int32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *PaymentConnectorReportTransactionSettledContext) SetAmount(v int32) {
	o.Amount = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorReportTransactionSettledContext) GetExchangeRate() float32 {
	if o == nil || o.ExchangeRate.Get() == nil {
		var ret float32
		return ret
	}
	return *o.ExchangeRate.Get()
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorReportTransactionSettledContext) GetExchangeRateOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExchangeRate.Get(), o.ExchangeRate.IsSet()
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasExchangeRate() bool {
	if o != nil && o.ExchangeRate.IsSet() {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given NullableFloat32 and assigns it to the ExchangeRate field.
func (o *PaymentConnectorReportTransactionSettledContext) SetExchangeRate(v float32) {
	o.ExchangeRate.Set(&v)
}
// SetExchangeRateNil sets the value for ExchangeRate to be an explicit nil
func (o *PaymentConnectorReportTransactionSettledContext) SetExchangeRateNil() {
	o.ExchangeRate.Set(nil)
}

// UnsetExchangeRate ensures that no value is present for ExchangeRate, not even an explicit nil
func (o *PaymentConnectorReportTransactionSettledContext) UnsetExchangeRate() {
	o.ExchangeRate.Unset()
}

// GetCommission returns the Commission field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetCommission() int32 {
	if o == nil || o.Commission == nil {
		var ret int32
		return ret
	}
	return *o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetCommissionOk() (*int32, bool) {
	if o == nil || o.Commission == nil {
		return nil, false
	}
	return o.Commission, true
}

// HasCommission returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasCommission() bool {
	if o != nil && o.Commission != nil {
		return true
	}

	return false
}

// SetCommission gets a reference to the given int32 and assigns it to the Commission field.
func (o *PaymentConnectorReportTransactionSettledContext) SetCommission(v int32) {
	o.Commission = &v
}

// GetInterchange returns the Interchange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorReportTransactionSettledContext) GetInterchange() int32 {
	if o == nil || o.Interchange.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Interchange.Get()
}

// GetInterchangeOk returns a tuple with the Interchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorReportTransactionSettledContext) GetInterchangeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Interchange.Get(), o.Interchange.IsSet()
}

// HasInterchange returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasInterchange() bool {
	if o != nil && o.Interchange.IsSet() {
		return true
	}

	return false
}

// SetInterchange gets a reference to the given NullableInt32 and assigns it to the Interchange field.
func (o *PaymentConnectorReportTransactionSettledContext) SetInterchange(v int32) {
	o.Interchange.Set(&v)
}
// SetInterchangeNil sets the value for Interchange to be an explicit nil
func (o *PaymentConnectorReportTransactionSettledContext) SetInterchangeNil() {
	o.Interchange.Set(nil)
}

// UnsetInterchange ensures that no value is present for Interchange, not even an explicit nil
func (o *PaymentConnectorReportTransactionSettledContext) UnsetInterchange() {
	o.Interchange.Unset()
}

// GetMarkup returns the Markup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorReportTransactionSettledContext) GetMarkup() int32 {
	if o == nil || o.Markup.Get() == nil {
		var ret int32
		return ret
	}
	return *o.Markup.Get()
}

// GetMarkupOk returns a tuple with the Markup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorReportTransactionSettledContext) GetMarkupOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Markup.Get(), o.Markup.IsSet()
}

// HasMarkup returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasMarkup() bool {
	if o != nil && o.Markup.IsSet() {
		return true
	}

	return false
}

// SetMarkup gets a reference to the given NullableInt32 and assigns it to the Markup field.
func (o *PaymentConnectorReportTransactionSettledContext) SetMarkup(v int32) {
	o.Markup.Set(&v)
}
// SetMarkupNil sets the value for Markup to be an explicit nil
func (o *PaymentConnectorReportTransactionSettledContext) SetMarkupNil() {
	o.Markup.Set(nil)
}

// UnsetMarkup ensures that no value is present for Markup, not even an explicit nil
func (o *PaymentConnectorReportTransactionSettledContext) UnsetMarkup() {
	o.Markup.Unset()
}

// GetSchemeFee returns the SchemeFee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorReportTransactionSettledContext) GetSchemeFee() int32 {
	if o == nil || o.SchemeFee.Get() == nil {
		var ret int32
		return ret
	}
	return *o.SchemeFee.Get()
}

// GetSchemeFeeOk returns a tuple with the SchemeFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorReportTransactionSettledContext) GetSchemeFeeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SchemeFee.Get(), o.SchemeFee.IsSet()
}

// HasSchemeFee returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasSchemeFee() bool {
	if o != nil && o.SchemeFee.IsSet() {
		return true
	}

	return false
}

// SetSchemeFee gets a reference to the given NullableInt32 and assigns it to the SchemeFee field.
func (o *PaymentConnectorReportTransactionSettledContext) SetSchemeFee(v int32) {
	o.SchemeFee.Set(&v)
}
// SetSchemeFeeNil sets the value for SchemeFee to be an explicit nil
func (o *PaymentConnectorReportTransactionSettledContext) SetSchemeFeeNil() {
	o.SchemeFee.Set(nil)
}

// UnsetSchemeFee ensures that no value is present for SchemeFee, not even an explicit nil
func (o *PaymentConnectorReportTransactionSettledContext) UnsetSchemeFee() {
	o.SchemeFee.Unset()
}

// GetPaymentServiceId returns the PaymentServiceId field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceId() string {
	if o == nil || o.PaymentServiceId == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceId
}

// GetPaymentServiceIdOk returns a tuple with the PaymentServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceIdOk() (*string, bool) {
	if o == nil || o.PaymentServiceId == nil {
		return nil, false
	}
	return o.PaymentServiceId, true
}

// HasPaymentServiceId returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasPaymentServiceId() bool {
	if o != nil && o.PaymentServiceId != nil {
		return true
	}

	return false
}

// SetPaymentServiceId gets a reference to the given string and assigns it to the PaymentServiceId field.
func (o *PaymentConnectorReportTransactionSettledContext) SetPaymentServiceId(v string) {
	o.PaymentServiceId = &v
}

// GetPaymentServiceDefinitionId returns the PaymentServiceDefinitionId field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceDefinitionId() string {
	if o == nil || o.PaymentServiceDefinitionId == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceDefinitionId
}

// GetPaymentServiceDefinitionIdOk returns a tuple with the PaymentServiceDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceDefinitionIdOk() (*string, bool) {
	if o == nil || o.PaymentServiceDefinitionId == nil {
		return nil, false
	}
	return o.PaymentServiceDefinitionId, true
}

// HasPaymentServiceDefinitionId returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasPaymentServiceDefinitionId() bool {
	if o != nil && o.PaymentServiceDefinitionId != nil {
		return true
	}

	return false
}

// SetPaymentServiceDefinitionId gets a reference to the given string and assigns it to the PaymentServiceDefinitionId field.
func (o *PaymentConnectorReportTransactionSettledContext) SetPaymentServiceDefinitionId(v string) {
	o.PaymentServiceDefinitionId = &v
}

// GetPaymentServiceDisplayName returns the PaymentServiceDisplayName field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceDisplayName() string {
	if o == nil || o.PaymentServiceDisplayName == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceDisplayName
}

// GetPaymentServiceDisplayNameOk returns a tuple with the PaymentServiceDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceDisplayNameOk() (*string, bool) {
	if o == nil || o.PaymentServiceDisplayName == nil {
		return nil, false
	}
	return o.PaymentServiceDisplayName, true
}

// HasPaymentServiceDisplayName returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasPaymentServiceDisplayName() bool {
	if o != nil && o.PaymentServiceDisplayName != nil {
		return true
	}

	return false
}

// SetPaymentServiceDisplayName gets a reference to the given string and assigns it to the PaymentServiceDisplayName field.
func (o *PaymentConnectorReportTransactionSettledContext) SetPaymentServiceDisplayName(v string) {
	o.PaymentServiceDisplayName = &v
}

// GetPaymentServiceReportId returns the PaymentServiceReportId field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceReportId() string {
	if o == nil || o.PaymentServiceReportId == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceReportId
}

// GetPaymentServiceReportIdOk returns a tuple with the PaymentServiceReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceReportIdOk() (*string, bool) {
	if o == nil || o.PaymentServiceReportId == nil {
		return nil, false
	}
	return o.PaymentServiceReportId, true
}

// HasPaymentServiceReportId returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasPaymentServiceReportId() bool {
	if o != nil && o.PaymentServiceReportId != nil {
		return true
	}

	return false
}

// SetPaymentServiceReportId gets a reference to the given string and assigns it to the PaymentServiceReportId field.
func (o *PaymentConnectorReportTransactionSettledContext) SetPaymentServiceReportId(v string) {
	o.PaymentServiceReportId = &v
}

// GetPaymentServiceReportFileIds returns the PaymentServiceReportFileIds field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceReportFileIds() []string {
	if o == nil || o.PaymentServiceReportFileIds == nil {
		var ret []string
		return ret
	}
	return *o.PaymentServiceReportFileIds
}

// GetPaymentServiceReportFileIdsOk returns a tuple with the PaymentServiceReportFileIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceReportFileIdsOk() (*[]string, bool) {
	if o == nil || o.PaymentServiceReportFileIds == nil {
		return nil, false
	}
	return o.PaymentServiceReportFileIds, true
}

// HasPaymentServiceReportFileIds returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasPaymentServiceReportFileIds() bool {
	if o != nil && o.PaymentServiceReportFileIds != nil {
		return true
	}

	return false
}

// SetPaymentServiceReportFileIds gets a reference to the given []string and assigns it to the PaymentServiceReportFileIds field.
func (o *PaymentConnectorReportTransactionSettledContext) SetPaymentServiceReportFileIds(v []string) {
	o.PaymentServiceReportFileIds = &v
}

// GetPaymentServiceTransactionId returns the PaymentServiceTransactionId field value if set, zero value otherwise.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceTransactionId() string {
	if o == nil || o.PaymentServiceTransactionId == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceTransactionId
}

// GetPaymentServiceTransactionIdOk returns a tuple with the PaymentServiceTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorReportTransactionSettledContext) GetPaymentServiceTransactionIdOk() (*string, bool) {
	if o == nil || o.PaymentServiceTransactionId == nil {
		return nil, false
	}
	return o.PaymentServiceTransactionId, true
}

// HasPaymentServiceTransactionId returns a boolean if a field has been set.
func (o *PaymentConnectorReportTransactionSettledContext) HasPaymentServiceTransactionId() bool {
	if o != nil && o.PaymentServiceTransactionId != nil {
		return true
	}

	return false
}

// SetPaymentServiceTransactionId gets a reference to the given string and assigns it to the PaymentServiceTransactionId field.
func (o *PaymentConnectorReportTransactionSettledContext) SetPaymentServiceTransactionId(v string) {
	o.PaymentServiceTransactionId = &v
}

func (o PaymentConnectorReportTransactionSettledContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SettlementId != nil {
		toSerialize["settlement_id"] = o.SettlementId
	}
	if o.PostedAt != nil {
		toSerialize["posted_at"] = o.PostedAt
	}
	if o.IngestedAt != nil {
		toSerialize["ingested_at"] = o.IngestedAt
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.ExchangeRate.IsSet() {
		toSerialize["exchange_rate"] = o.ExchangeRate.Get()
	}
	if o.Commission != nil {
		toSerialize["commission"] = o.Commission
	}
	if o.Interchange.IsSet() {
		toSerialize["interchange"] = o.Interchange.Get()
	}
	if o.Markup.IsSet() {
		toSerialize["markup"] = o.Markup.Get()
	}
	if o.SchemeFee.IsSet() {
		toSerialize["scheme_fee"] = o.SchemeFee.Get()
	}
	if o.PaymentServiceId != nil {
		toSerialize["payment_service_id"] = o.PaymentServiceId
	}
	if o.PaymentServiceDefinitionId != nil {
		toSerialize["payment_service_definition_id"] = o.PaymentServiceDefinitionId
	}
	if o.PaymentServiceDisplayName != nil {
		toSerialize["payment_service_display_name"] = o.PaymentServiceDisplayName
	}
	if o.PaymentServiceReportId != nil {
		toSerialize["payment_service_report_id"] = o.PaymentServiceReportId
	}
	if o.PaymentServiceReportFileIds != nil {
		toSerialize["payment_service_report_file_ids"] = o.PaymentServiceReportFileIds
	}
	if o.PaymentServiceTransactionId != nil {
		toSerialize["payment_service_transaction_id"] = o.PaymentServiceTransactionId
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentConnectorReportTransactionSettledContext struct {
	value *PaymentConnectorReportTransactionSettledContext
	isSet bool
}

func (v NullablePaymentConnectorReportTransactionSettledContext) Get() *PaymentConnectorReportTransactionSettledContext {
	return v.value
}

func (v *NullablePaymentConnectorReportTransactionSettledContext) Set(val *PaymentConnectorReportTransactionSettledContext) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentConnectorReportTransactionSettledContext) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentConnectorReportTransactionSettledContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentConnectorReportTransactionSettledContext(val *PaymentConnectorReportTransactionSettledContext) *NullablePaymentConnectorReportTransactionSettledContext {
	return &NullablePaymentConnectorReportTransactionSettledContext{value: val, isSet: true}
}

func (v NullablePaymentConnectorReportTransactionSettledContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentConnectorReportTransactionSettledContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


