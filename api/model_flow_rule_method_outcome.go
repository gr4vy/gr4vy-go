/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// FlowRuleMethodOutcome Defines the outcome of a rule in a flow where the result is a list of payment types.
type FlowRuleMethodOutcome struct {
	// The type of action outcome for the given rule.
	Type string `json:"type"`
	// Results for a given flow action.
	Result []string `json:"result"`
}

// NewFlowRuleMethodOutcome instantiates a new FlowRuleMethodOutcome object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlowRuleMethodOutcome(type_ string, result []string) *FlowRuleMethodOutcome {
	this := FlowRuleMethodOutcome{}
	this.Type = type_
	this.Result = result
	return &this
}

// NewFlowRuleMethodOutcomeWithDefaults instantiates a new FlowRuleMethodOutcome object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlowRuleMethodOutcomeWithDefaults() *FlowRuleMethodOutcome {
	this := FlowRuleMethodOutcome{}
	return &this
}

// GetType returns the Type field value
func (o *FlowRuleMethodOutcome) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FlowRuleMethodOutcome) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FlowRuleMethodOutcome) SetType(v string) {
	o.Type = v
}

// GetResult returns the Result field value
func (o *FlowRuleMethodOutcome) GetResult() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *FlowRuleMethodOutcome) GetResultOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *FlowRuleMethodOutcome) SetResult(v []string) {
	o.Result = v
}

func (o FlowRuleMethodOutcome) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullableFlowRuleMethodOutcome struct {
	value *FlowRuleMethodOutcome
	isSet bool
}

func (v NullableFlowRuleMethodOutcome) Get() *FlowRuleMethodOutcome {
	return v.value
}

func (v *NullableFlowRuleMethodOutcome) Set(val *FlowRuleMethodOutcome) {
	v.value = val
	v.isSet = true
}

func (v NullableFlowRuleMethodOutcome) IsSet() bool {
	return v.isSet
}

func (v *NullableFlowRuleMethodOutcome) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlowRuleMethodOutcome(val *FlowRuleMethodOutcome) *NullableFlowRuleMethodOutcome {
	return &NullableFlowRuleMethodOutcome{value: val, isSet: true}
}

func (v NullableFlowRuleMethodOutcome) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlowRuleMethodOutcome) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


