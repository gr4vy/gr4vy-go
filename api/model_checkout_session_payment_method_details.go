/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// CheckoutSessionPaymentMethodDetails struct for CheckoutSessionPaymentMethodDetails
type CheckoutSessionPaymentMethodDetails struct {
	// First six digits of PAN.
	Bin NullableString `json:"bin,omitempty"`
	CardType NullableString `json:"card_type,omitempty"`
	// ISO 3166 two letter country code.
	CardCountry NullableString `json:"card_country,omitempty"`
	// The name of the card issuer.
	CardIssuerName NullableString `json:"card_issuer_name,omitempty"`
}

// NewCheckoutSessionPaymentMethodDetails instantiates a new CheckoutSessionPaymentMethodDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckoutSessionPaymentMethodDetails() *CheckoutSessionPaymentMethodDetails {
	this := CheckoutSessionPaymentMethodDetails{}
	return &this
}

// NewCheckoutSessionPaymentMethodDetailsWithDefaults instantiates a new CheckoutSessionPaymentMethodDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckoutSessionPaymentMethodDetailsWithDefaults() *CheckoutSessionPaymentMethodDetails {
	this := CheckoutSessionPaymentMethodDetails{}
	return &this
}

// GetBin returns the Bin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutSessionPaymentMethodDetails) GetBin() string {
	if o == nil || o.Bin.Get() == nil {
		var ret string
		return ret
	}
	return *o.Bin.Get()
}

// GetBinOk returns a tuple with the Bin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionPaymentMethodDetails) GetBinOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Bin.Get(), o.Bin.IsSet()
}

// HasBin returns a boolean if a field has been set.
func (o *CheckoutSessionPaymentMethodDetails) HasBin() bool {
	if o != nil && o.Bin.IsSet() {
		return true
	}

	return false
}

// SetBin gets a reference to the given NullableString and assigns it to the Bin field.
func (o *CheckoutSessionPaymentMethodDetails) SetBin(v string) {
	o.Bin.Set(&v)
}
// SetBinNil sets the value for Bin to be an explicit nil
func (o *CheckoutSessionPaymentMethodDetails) SetBinNil() {
	o.Bin.Set(nil)
}

// UnsetBin ensures that no value is present for Bin, not even an explicit nil
func (o *CheckoutSessionPaymentMethodDetails) UnsetBin() {
	o.Bin.Unset()
}

// GetCardType returns the CardType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutSessionPaymentMethodDetails) GetCardType() string {
	if o == nil || o.CardType.Get() == nil {
		var ret string
		return ret
	}
	return *o.CardType.Get()
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionPaymentMethodDetails) GetCardTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CardType.Get(), o.CardType.IsSet()
}

// HasCardType returns a boolean if a field has been set.
func (o *CheckoutSessionPaymentMethodDetails) HasCardType() bool {
	if o != nil && o.CardType.IsSet() {
		return true
	}

	return false
}

// SetCardType gets a reference to the given NullableString and assigns it to the CardType field.
func (o *CheckoutSessionPaymentMethodDetails) SetCardType(v string) {
	o.CardType.Set(&v)
}
// SetCardTypeNil sets the value for CardType to be an explicit nil
func (o *CheckoutSessionPaymentMethodDetails) SetCardTypeNil() {
	o.CardType.Set(nil)
}

// UnsetCardType ensures that no value is present for CardType, not even an explicit nil
func (o *CheckoutSessionPaymentMethodDetails) UnsetCardType() {
	o.CardType.Unset()
}

// GetCardCountry returns the CardCountry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutSessionPaymentMethodDetails) GetCardCountry() string {
	if o == nil || o.CardCountry.Get() == nil {
		var ret string
		return ret
	}
	return *o.CardCountry.Get()
}

// GetCardCountryOk returns a tuple with the CardCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionPaymentMethodDetails) GetCardCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CardCountry.Get(), o.CardCountry.IsSet()
}

// HasCardCountry returns a boolean if a field has been set.
func (o *CheckoutSessionPaymentMethodDetails) HasCardCountry() bool {
	if o != nil && o.CardCountry.IsSet() {
		return true
	}

	return false
}

// SetCardCountry gets a reference to the given NullableString and assigns it to the CardCountry field.
func (o *CheckoutSessionPaymentMethodDetails) SetCardCountry(v string) {
	o.CardCountry.Set(&v)
}
// SetCardCountryNil sets the value for CardCountry to be an explicit nil
func (o *CheckoutSessionPaymentMethodDetails) SetCardCountryNil() {
	o.CardCountry.Set(nil)
}

// UnsetCardCountry ensures that no value is present for CardCountry, not even an explicit nil
func (o *CheckoutSessionPaymentMethodDetails) UnsetCardCountry() {
	o.CardCountry.Unset()
}

// GetCardIssuerName returns the CardIssuerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CheckoutSessionPaymentMethodDetails) GetCardIssuerName() string {
	if o == nil || o.CardIssuerName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CardIssuerName.Get()
}

// GetCardIssuerNameOk returns a tuple with the CardIssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckoutSessionPaymentMethodDetails) GetCardIssuerNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CardIssuerName.Get(), o.CardIssuerName.IsSet()
}

// HasCardIssuerName returns a boolean if a field has been set.
func (o *CheckoutSessionPaymentMethodDetails) HasCardIssuerName() bool {
	if o != nil && o.CardIssuerName.IsSet() {
		return true
	}

	return false
}

// SetCardIssuerName gets a reference to the given NullableString and assigns it to the CardIssuerName field.
func (o *CheckoutSessionPaymentMethodDetails) SetCardIssuerName(v string) {
	o.CardIssuerName.Set(&v)
}
// SetCardIssuerNameNil sets the value for CardIssuerName to be an explicit nil
func (o *CheckoutSessionPaymentMethodDetails) SetCardIssuerNameNil() {
	o.CardIssuerName.Set(nil)
}

// UnsetCardIssuerName ensures that no value is present for CardIssuerName, not even an explicit nil
func (o *CheckoutSessionPaymentMethodDetails) UnsetCardIssuerName() {
	o.CardIssuerName.Unset()
}

func (o CheckoutSessionPaymentMethodDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bin.IsSet() {
		toSerialize["bin"] = o.Bin.Get()
	}
	if o.CardType.IsSet() {
		toSerialize["card_type"] = o.CardType.Get()
	}
	if o.CardCountry.IsSet() {
		toSerialize["card_country"] = o.CardCountry.Get()
	}
	if o.CardIssuerName.IsSet() {
		toSerialize["card_issuer_name"] = o.CardIssuerName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCheckoutSessionPaymentMethodDetails struct {
	value *CheckoutSessionPaymentMethodDetails
	isSet bool
}

func (v NullableCheckoutSessionPaymentMethodDetails) Get() *CheckoutSessionPaymentMethodDetails {
	return v.value
}

func (v *NullableCheckoutSessionPaymentMethodDetails) Set(val *CheckoutSessionPaymentMethodDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckoutSessionPaymentMethodDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckoutSessionPaymentMethodDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckoutSessionPaymentMethodDetails(val *CheckoutSessionPaymentMethodDetails) *NullableCheckoutSessionPaymentMethodDetails {
	return &NullableCheckoutSessionPaymentMethodDetails{value: val, isSet: true}
}

func (v NullableCheckoutSessionPaymentMethodDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckoutSessionPaymentMethodDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


