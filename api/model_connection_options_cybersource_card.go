/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptionsCybersourceCard Additional options for Cybersource payment gateway.
type ConnectionOptionsCybersourceCard struct {
	// An override for the merchant ID configured for the connector, used in combination with meta keys.
	MetaKeyMerchantId NullableString `json:"meta_key_merchant_id,omitempty"`
}

// NewConnectionOptionsCybersourceCard instantiates a new ConnectionOptionsCybersourceCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptionsCybersourceCard() *ConnectionOptionsCybersourceCard {
	this := ConnectionOptionsCybersourceCard{}
	return &this
}

// NewConnectionOptionsCybersourceCardWithDefaults instantiates a new ConnectionOptionsCybersourceCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsCybersourceCardWithDefaults() *ConnectionOptionsCybersourceCard {
	this := ConnectionOptionsCybersourceCard{}
	return &this
}

// GetMetaKeyMerchantId returns the MetaKeyMerchantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsCybersourceCard) GetMetaKeyMerchantId() string {
	if o == nil || o.MetaKeyMerchantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.MetaKeyMerchantId.Get()
}

// GetMetaKeyMerchantIdOk returns a tuple with the MetaKeyMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsCybersourceCard) GetMetaKeyMerchantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MetaKeyMerchantId.Get(), o.MetaKeyMerchantId.IsSet()
}

// HasMetaKeyMerchantId returns a boolean if a field has been set.
func (o *ConnectionOptionsCybersourceCard) HasMetaKeyMerchantId() bool {
	if o != nil && o.MetaKeyMerchantId.IsSet() {
		return true
	}

	return false
}

// SetMetaKeyMerchantId gets a reference to the given NullableString and assigns it to the MetaKeyMerchantId field.
func (o *ConnectionOptionsCybersourceCard) SetMetaKeyMerchantId(v string) {
	o.MetaKeyMerchantId.Set(&v)
}
// SetMetaKeyMerchantIdNil sets the value for MetaKeyMerchantId to be an explicit nil
func (o *ConnectionOptionsCybersourceCard) SetMetaKeyMerchantIdNil() {
	o.MetaKeyMerchantId.Set(nil)
}

// UnsetMetaKeyMerchantId ensures that no value is present for MetaKeyMerchantId, not even an explicit nil
func (o *ConnectionOptionsCybersourceCard) UnsetMetaKeyMerchantId() {
	o.MetaKeyMerchantId.Unset()
}

func (o ConnectionOptionsCybersourceCard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MetaKeyMerchantId.IsSet() {
		toSerialize["meta_key_merchant_id"] = o.MetaKeyMerchantId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptionsCybersourceCard struct {
	value *ConnectionOptionsCybersourceCard
	isSet bool
}

func (v NullableConnectionOptionsCybersourceCard) Get() *ConnectionOptionsCybersourceCard {
	return v.value
}

func (v *NullableConnectionOptionsCybersourceCard) Set(val *ConnectionOptionsCybersourceCard) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptionsCybersourceCard) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptionsCybersourceCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptionsCybersourceCard(val *ConnectionOptionsCybersourceCard) *NullableConnectionOptionsCybersourceCard {
	return &NullableConnectionOptionsCybersourceCard{value: val, isSet: true}
}

func (v NullableConnectionOptionsCybersourceCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptionsCybersourceCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


