/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// AntiFraudDecisionUpdateErrorEventContext Additional context for this event.
type AntiFraudDecisionUpdateErrorEventContext struct {
	// The unique ID of the anti-fraud service used.
	AntiFraudServiceId *string `json:"anti_fraud_service_id,omitempty"`
	// The name of the anti-fraud service used.
	AntiFraudServiceName *string `json:"anti_fraud_service_name,omitempty"`
	// The anti-fraud service definition used.
	AntiFraudServiceDefinitionId *string `json:"anti_fraud_service_definition_id,omitempty"`
	// The external ID of the decision.
	AntiFraudServiceCheckId *string `json:"anti_fraud_service_check_id,omitempty"`
	// The updated decision sent to the anti-fraud provider.
	Decision *string `json:"decision,omitempty"`
	// The reason we could not update the anti-fraud decision.
	Reason *string `json:"reason,omitempty"`
}

// NewAntiFraudDecisionUpdateErrorEventContext instantiates a new AntiFraudDecisionUpdateErrorEventContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntiFraudDecisionUpdateErrorEventContext() *AntiFraudDecisionUpdateErrorEventContext {
	this := AntiFraudDecisionUpdateErrorEventContext{}
	return &this
}

// NewAntiFraudDecisionUpdateErrorEventContextWithDefaults instantiates a new AntiFraudDecisionUpdateErrorEventContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntiFraudDecisionUpdateErrorEventContextWithDefaults() *AntiFraudDecisionUpdateErrorEventContext {
	this := AntiFraudDecisionUpdateErrorEventContext{}
	return &this
}

// GetAntiFraudServiceId returns the AntiFraudServiceId field value if set, zero value otherwise.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetAntiFraudServiceId() string {
	if o == nil || o.AntiFraudServiceId == nil {
		var ret string
		return ret
	}
	return *o.AntiFraudServiceId
}

// GetAntiFraudServiceIdOk returns a tuple with the AntiFraudServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetAntiFraudServiceIdOk() (*string, bool) {
	if o == nil || o.AntiFraudServiceId == nil {
		return nil, false
	}
	return o.AntiFraudServiceId, true
}

// HasAntiFraudServiceId returns a boolean if a field has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) HasAntiFraudServiceId() bool {
	if o != nil && o.AntiFraudServiceId != nil {
		return true
	}

	return false
}

// SetAntiFraudServiceId gets a reference to the given string and assigns it to the AntiFraudServiceId field.
func (o *AntiFraudDecisionUpdateErrorEventContext) SetAntiFraudServiceId(v string) {
	o.AntiFraudServiceId = &v
}

// GetAntiFraudServiceName returns the AntiFraudServiceName field value if set, zero value otherwise.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetAntiFraudServiceName() string {
	if o == nil || o.AntiFraudServiceName == nil {
		var ret string
		return ret
	}
	return *o.AntiFraudServiceName
}

// GetAntiFraudServiceNameOk returns a tuple with the AntiFraudServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetAntiFraudServiceNameOk() (*string, bool) {
	if o == nil || o.AntiFraudServiceName == nil {
		return nil, false
	}
	return o.AntiFraudServiceName, true
}

// HasAntiFraudServiceName returns a boolean if a field has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) HasAntiFraudServiceName() bool {
	if o != nil && o.AntiFraudServiceName != nil {
		return true
	}

	return false
}

// SetAntiFraudServiceName gets a reference to the given string and assigns it to the AntiFraudServiceName field.
func (o *AntiFraudDecisionUpdateErrorEventContext) SetAntiFraudServiceName(v string) {
	o.AntiFraudServiceName = &v
}

// GetAntiFraudServiceDefinitionId returns the AntiFraudServiceDefinitionId field value if set, zero value otherwise.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetAntiFraudServiceDefinitionId() string {
	if o == nil || o.AntiFraudServiceDefinitionId == nil {
		var ret string
		return ret
	}
	return *o.AntiFraudServiceDefinitionId
}

// GetAntiFraudServiceDefinitionIdOk returns a tuple with the AntiFraudServiceDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetAntiFraudServiceDefinitionIdOk() (*string, bool) {
	if o == nil || o.AntiFraudServiceDefinitionId == nil {
		return nil, false
	}
	return o.AntiFraudServiceDefinitionId, true
}

// HasAntiFraudServiceDefinitionId returns a boolean if a field has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) HasAntiFraudServiceDefinitionId() bool {
	if o != nil && o.AntiFraudServiceDefinitionId != nil {
		return true
	}

	return false
}

// SetAntiFraudServiceDefinitionId gets a reference to the given string and assigns it to the AntiFraudServiceDefinitionId field.
func (o *AntiFraudDecisionUpdateErrorEventContext) SetAntiFraudServiceDefinitionId(v string) {
	o.AntiFraudServiceDefinitionId = &v
}

// GetAntiFraudServiceCheckId returns the AntiFraudServiceCheckId field value if set, zero value otherwise.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetAntiFraudServiceCheckId() string {
	if o == nil || o.AntiFraudServiceCheckId == nil {
		var ret string
		return ret
	}
	return *o.AntiFraudServiceCheckId
}

// GetAntiFraudServiceCheckIdOk returns a tuple with the AntiFraudServiceCheckId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetAntiFraudServiceCheckIdOk() (*string, bool) {
	if o == nil || o.AntiFraudServiceCheckId == nil {
		return nil, false
	}
	return o.AntiFraudServiceCheckId, true
}

// HasAntiFraudServiceCheckId returns a boolean if a field has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) HasAntiFraudServiceCheckId() bool {
	if o != nil && o.AntiFraudServiceCheckId != nil {
		return true
	}

	return false
}

// SetAntiFraudServiceCheckId gets a reference to the given string and assigns it to the AntiFraudServiceCheckId field.
func (o *AntiFraudDecisionUpdateErrorEventContext) SetAntiFraudServiceCheckId(v string) {
	o.AntiFraudServiceCheckId = &v
}

// GetDecision returns the Decision field value if set, zero value otherwise.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetDecision() string {
	if o == nil || o.Decision == nil {
		var ret string
		return ret
	}
	return *o.Decision
}

// GetDecisionOk returns a tuple with the Decision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetDecisionOk() (*string, bool) {
	if o == nil || o.Decision == nil {
		return nil, false
	}
	return o.Decision, true
}

// HasDecision returns a boolean if a field has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) HasDecision() bool {
	if o != nil && o.Decision != nil {
		return true
	}

	return false
}

// SetDecision gets a reference to the given string and assigns it to the Decision field.
func (o *AntiFraudDecisionUpdateErrorEventContext) SetDecision(v string) {
	o.Decision = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *AntiFraudDecisionUpdateErrorEventContext) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *AntiFraudDecisionUpdateErrorEventContext) SetReason(v string) {
	o.Reason = &v
}

func (o AntiFraudDecisionUpdateErrorEventContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AntiFraudServiceId != nil {
		toSerialize["anti_fraud_service_id"] = o.AntiFraudServiceId
	}
	if o.AntiFraudServiceName != nil {
		toSerialize["anti_fraud_service_name"] = o.AntiFraudServiceName
	}
	if o.AntiFraudServiceDefinitionId != nil {
		toSerialize["anti_fraud_service_definition_id"] = o.AntiFraudServiceDefinitionId
	}
	if o.AntiFraudServiceCheckId != nil {
		toSerialize["anti_fraud_service_check_id"] = o.AntiFraudServiceCheckId
	}
	if o.Decision != nil {
		toSerialize["decision"] = o.Decision
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableAntiFraudDecisionUpdateErrorEventContext struct {
	value *AntiFraudDecisionUpdateErrorEventContext
	isSet bool
}

func (v NullableAntiFraudDecisionUpdateErrorEventContext) Get() *AntiFraudDecisionUpdateErrorEventContext {
	return v.value
}

func (v *NullableAntiFraudDecisionUpdateErrorEventContext) Set(val *AntiFraudDecisionUpdateErrorEventContext) {
	v.value = val
	v.isSet = true
}

func (v NullableAntiFraudDecisionUpdateErrorEventContext) IsSet() bool {
	return v.isSet
}

func (v *NullableAntiFraudDecisionUpdateErrorEventContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntiFraudDecisionUpdateErrorEventContext(val *AntiFraudDecisionUpdateErrorEventContext) *NullableAntiFraudDecisionUpdateErrorEventContext {
	return &NullableAntiFraudDecisionUpdateErrorEventContext{value: val, isSet: true}
}

func (v NullableAntiFraudDecisionUpdateErrorEventContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntiFraudDecisionUpdateErrorEventContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


