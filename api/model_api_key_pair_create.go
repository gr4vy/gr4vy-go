/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// APIKeyPairCreate A request to create an API key-pair.
type APIKeyPairCreate struct {
	// A name for this key-pair which is used in the Gr4vy admin panel to give the key-pair a human readable name.
	DisplayName *string `json:"display_name,omitempty"`
	// The algorithm to use for the API Key Pair. The recommended value is `ECDSA`. You should only use the `RSA` algorithm in environments that do not support `ECDSA`.
	Algorithm *string `json:"algorithm,omitempty"`
	// A list of role IDs that will be assigned to the API Key Pair being created. Only the \"Administrator\" and \"Integration\" roles are supported.
	RoleIds *[]string `json:"role_ids,omitempty"`
	// The optional ID of the merchant account this API Key Pair should be assigned to. Leave this unset to create an API key that works across all merchant accounts.
	MerchantAccountId NullableString `json:"merchant_account_id,omitempty"`
}

// NewAPIKeyPairCreate instantiates a new APIKeyPairCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIKeyPairCreate() *APIKeyPairCreate {
	this := APIKeyPairCreate{}
	var algorithm string = "ECDSA"
	this.Algorithm = &algorithm
	return &this
}

// NewAPIKeyPairCreateWithDefaults instantiates a new APIKeyPairCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIKeyPairCreateWithDefaults() *APIKeyPairCreate {
	this := APIKeyPairCreate{}
	var algorithm string = "ECDSA"
	this.Algorithm = &algorithm
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *APIKeyPairCreate) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyPairCreate) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *APIKeyPairCreate) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *APIKeyPairCreate) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *APIKeyPairCreate) GetAlgorithm() string {
	if o == nil || o.Algorithm == nil {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyPairCreate) GetAlgorithmOk() (*string, bool) {
	if o == nil || o.Algorithm == nil {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *APIKeyPairCreate) HasAlgorithm() bool {
	if o != nil && o.Algorithm != nil {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *APIKeyPairCreate) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetRoleIds returns the RoleIds field value if set, zero value otherwise.
func (o *APIKeyPairCreate) GetRoleIds() []string {
	if o == nil || o.RoleIds == nil {
		var ret []string
		return ret
	}
	return *o.RoleIds
}

// GetRoleIdsOk returns a tuple with the RoleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyPairCreate) GetRoleIdsOk() (*[]string, bool) {
	if o == nil || o.RoleIds == nil {
		return nil, false
	}
	return o.RoleIds, true
}

// HasRoleIds returns a boolean if a field has been set.
func (o *APIKeyPairCreate) HasRoleIds() bool {
	if o != nil && o.RoleIds != nil {
		return true
	}

	return false
}

// SetRoleIds gets a reference to the given []string and assigns it to the RoleIds field.
func (o *APIKeyPairCreate) SetRoleIds(v []string) {
	o.RoleIds = &v
}

// GetMerchantAccountId returns the MerchantAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *APIKeyPairCreate) GetMerchantAccountId() string {
	if o == nil || o.MerchantAccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantAccountId.Get()
}

// GetMerchantAccountIdOk returns a tuple with the MerchantAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *APIKeyPairCreate) GetMerchantAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantAccountId.Get(), o.MerchantAccountId.IsSet()
}

// HasMerchantAccountId returns a boolean if a field has been set.
func (o *APIKeyPairCreate) HasMerchantAccountId() bool {
	if o != nil && o.MerchantAccountId.IsSet() {
		return true
	}

	return false
}

// SetMerchantAccountId gets a reference to the given NullableString and assigns it to the MerchantAccountId field.
func (o *APIKeyPairCreate) SetMerchantAccountId(v string) {
	o.MerchantAccountId.Set(&v)
}
// SetMerchantAccountIdNil sets the value for MerchantAccountId to be an explicit nil
func (o *APIKeyPairCreate) SetMerchantAccountIdNil() {
	o.MerchantAccountId.Set(nil)
}

// UnsetMerchantAccountId ensures that no value is present for MerchantAccountId, not even an explicit nil
func (o *APIKeyPairCreate) UnsetMerchantAccountId() {
	o.MerchantAccountId.Unset()
}

func (o APIKeyPairCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Algorithm != nil {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.RoleIds != nil {
		toSerialize["role_ids"] = o.RoleIds
	}
	if o.MerchantAccountId.IsSet() {
		toSerialize["merchant_account_id"] = o.MerchantAccountId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAPIKeyPairCreate struct {
	value *APIKeyPairCreate
	isSet bool
}

func (v NullableAPIKeyPairCreate) Get() *APIKeyPairCreate {
	return v.value
}

func (v *NullableAPIKeyPairCreate) Set(val *APIKeyPairCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIKeyPairCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIKeyPairCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIKeyPairCreate(val *APIKeyPairCreate) *NullableAPIKeyPairCreate {
	return &NullableAPIKeyPairCreate{value: val, isSet: true}
}

func (v NullableAPIKeyPairCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIKeyPairCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


