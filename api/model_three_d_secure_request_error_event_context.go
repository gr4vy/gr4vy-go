/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ThreeDSecureRequestErrorEventContext 3DS post-authentication context.
type ThreeDSecureRequestErrorEventContext struct {
	// The URL that was called for this request.
	Url *string `json:"url,omitempty"`
	// The reason for the error.
	Reason *string `json:"reason,omitempty"`
}

// NewThreeDSecureRequestErrorEventContext instantiates a new ThreeDSecureRequestErrorEventContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreeDSecureRequestErrorEventContext() *ThreeDSecureRequestErrorEventContext {
	this := ThreeDSecureRequestErrorEventContext{}
	return &this
}

// NewThreeDSecureRequestErrorEventContextWithDefaults instantiates a new ThreeDSecureRequestErrorEventContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreeDSecureRequestErrorEventContextWithDefaults() *ThreeDSecureRequestErrorEventContext {
	this := ThreeDSecureRequestErrorEventContext{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ThreeDSecureRequestErrorEventContext) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSecureRequestErrorEventContext) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ThreeDSecureRequestErrorEventContext) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ThreeDSecureRequestErrorEventContext) SetUrl(v string) {
	o.Url = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ThreeDSecureRequestErrorEventContext) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSecureRequestErrorEventContext) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ThreeDSecureRequestErrorEventContext) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ThreeDSecureRequestErrorEventContext) SetReason(v string) {
	o.Reason = &v
}

func (o ThreeDSecureRequestErrorEventContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableThreeDSecureRequestErrorEventContext struct {
	value *ThreeDSecureRequestErrorEventContext
	isSet bool
}

func (v NullableThreeDSecureRequestErrorEventContext) Get() *ThreeDSecureRequestErrorEventContext {
	return v.value
}

func (v *NullableThreeDSecureRequestErrorEventContext) Set(val *ThreeDSecureRequestErrorEventContext) {
	v.value = val
	v.isSet = true
}

func (v NullableThreeDSecureRequestErrorEventContext) IsSet() bool {
	return v.isSet
}

func (v *NullableThreeDSecureRequestErrorEventContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreeDSecureRequestErrorEventContext(val *ThreeDSecureRequestErrorEventContext) *NullableThreeDSecureRequestErrorEventContext {
	return &NullableThreeDSecureRequestErrorEventContext{value: val, isSet: true}
}

func (v NullableThreeDSecureRequestErrorEventContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreeDSecureRequestErrorEventContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


