/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// PaymentServiceDefinitionSupportedFeatures Features supported by the payment definition.
type PaymentServiceDefinitionSupportedFeatures struct {
	// Supports [capturing](#operation/capture-transaction) authorized transactions.
	DelayedCapture *bool `json:"delayed_capture,omitempty"`
	// Supports passing decrypted digital wallet (e.g. Apple Pay) tokens to the underlying processor.
	NetworkTokens *bool `json:"network_tokens,omitempty"`
	// Supports processing network tokens by default.
	NetworkTokensDefault *bool `json:"network_tokens_default,omitempty"`
	// Supports toggling processing of network tokens on or off.
	NetworkTokensToggle *bool `json:"network_tokens_toggle,omitempty"`
	// Supports processing transactions with either raw PAN details or network tokens.
	OpenLoop *bool `json:"open_loop,omitempty"`
	// Supports toggling processing as open-loop on or off.
	OpenLoopToggle *bool `json:"open_loop_toggle,omitempty"`
	// Supports [partially refunding](#operation/refund-transaction) captured transactions.
	PartialRefunds *bool `json:"partial_refunds,omitempty"`
	// Supports storing a payment method via tokenization.
	PaymentMethodTokenization *bool `json:"payment_method_tokenization,omitempty"`
	// Supports toggling tokenization for a payment method on or off from the dashboard.
	PaymentMethodTokenizationToggle *bool `json:"payment_method_tokenization_toggle,omitempty"`
	// Supports [refunding](#operation/refund-transaction) captured transactions.
	Refunds *bool `json:"refunds,omitempty"`
	// Requires merchant to set up `webhook_url` manually with provider.
	RequiresWebhookSetup *bool `json:"requires_webhook_setup,omitempty"`
	// Supports hosted 3-D Secure with a redirect.
	ThreeDSecureHosted *bool `json:"three_d_secure_hosted,omitempty"`
	// Supports passing 3-D Secure data to the underlying processor.
	ThreeDSecurePassThrough *bool `json:"three_d_secure_pass_through,omitempty"`
	// Supports verifying the credentials entered while setting up the underlying processor. This is for internal use only.
	VerifyCredentials *bool `json:"verify_credentials,omitempty"`
	// Supports [voiding](#operation/void-transaction) authorized transactions.
	Void *bool `json:"void,omitempty"`
}

// NewPaymentServiceDefinitionSupportedFeatures instantiates a new PaymentServiceDefinitionSupportedFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServiceDefinitionSupportedFeatures() *PaymentServiceDefinitionSupportedFeatures {
	this := PaymentServiceDefinitionSupportedFeatures{}
	return &this
}

// NewPaymentServiceDefinitionSupportedFeaturesWithDefaults instantiates a new PaymentServiceDefinitionSupportedFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServiceDefinitionSupportedFeaturesWithDefaults() *PaymentServiceDefinitionSupportedFeatures {
	this := PaymentServiceDefinitionSupportedFeatures{}
	return &this
}

// GetDelayedCapture returns the DelayedCapture field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetDelayedCapture() bool {
	if o == nil || o.DelayedCapture == nil {
		var ret bool
		return ret
	}
	return *o.DelayedCapture
}

// GetDelayedCaptureOk returns a tuple with the DelayedCapture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetDelayedCaptureOk() (*bool, bool) {
	if o == nil || o.DelayedCapture == nil {
		return nil, false
	}
	return o.DelayedCapture, true
}

// HasDelayedCapture returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasDelayedCapture() bool {
	if o != nil && o.DelayedCapture != nil {
		return true
	}

	return false
}

// SetDelayedCapture gets a reference to the given bool and assigns it to the DelayedCapture field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetDelayedCapture(v bool) {
	o.DelayedCapture = &v
}

// GetNetworkTokens returns the NetworkTokens field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetNetworkTokens() bool {
	if o == nil || o.NetworkTokens == nil {
		var ret bool
		return ret
	}
	return *o.NetworkTokens
}

// GetNetworkTokensOk returns a tuple with the NetworkTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetNetworkTokensOk() (*bool, bool) {
	if o == nil || o.NetworkTokens == nil {
		return nil, false
	}
	return o.NetworkTokens, true
}

// HasNetworkTokens returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasNetworkTokens() bool {
	if o != nil && o.NetworkTokens != nil {
		return true
	}

	return false
}

// SetNetworkTokens gets a reference to the given bool and assigns it to the NetworkTokens field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetNetworkTokens(v bool) {
	o.NetworkTokens = &v
}

// GetNetworkTokensDefault returns the NetworkTokensDefault field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetNetworkTokensDefault() bool {
	if o == nil || o.NetworkTokensDefault == nil {
		var ret bool
		return ret
	}
	return *o.NetworkTokensDefault
}

// GetNetworkTokensDefaultOk returns a tuple with the NetworkTokensDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetNetworkTokensDefaultOk() (*bool, bool) {
	if o == nil || o.NetworkTokensDefault == nil {
		return nil, false
	}
	return o.NetworkTokensDefault, true
}

// HasNetworkTokensDefault returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasNetworkTokensDefault() bool {
	if o != nil && o.NetworkTokensDefault != nil {
		return true
	}

	return false
}

// SetNetworkTokensDefault gets a reference to the given bool and assigns it to the NetworkTokensDefault field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetNetworkTokensDefault(v bool) {
	o.NetworkTokensDefault = &v
}

// GetNetworkTokensToggle returns the NetworkTokensToggle field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetNetworkTokensToggle() bool {
	if o == nil || o.NetworkTokensToggle == nil {
		var ret bool
		return ret
	}
	return *o.NetworkTokensToggle
}

// GetNetworkTokensToggleOk returns a tuple with the NetworkTokensToggle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetNetworkTokensToggleOk() (*bool, bool) {
	if o == nil || o.NetworkTokensToggle == nil {
		return nil, false
	}
	return o.NetworkTokensToggle, true
}

// HasNetworkTokensToggle returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasNetworkTokensToggle() bool {
	if o != nil && o.NetworkTokensToggle != nil {
		return true
	}

	return false
}

// SetNetworkTokensToggle gets a reference to the given bool and assigns it to the NetworkTokensToggle field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetNetworkTokensToggle(v bool) {
	o.NetworkTokensToggle = &v
}

// GetOpenLoop returns the OpenLoop field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetOpenLoop() bool {
	if o == nil || o.OpenLoop == nil {
		var ret bool
		return ret
	}
	return *o.OpenLoop
}

// GetOpenLoopOk returns a tuple with the OpenLoop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetOpenLoopOk() (*bool, bool) {
	if o == nil || o.OpenLoop == nil {
		return nil, false
	}
	return o.OpenLoop, true
}

// HasOpenLoop returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasOpenLoop() bool {
	if o != nil && o.OpenLoop != nil {
		return true
	}

	return false
}

// SetOpenLoop gets a reference to the given bool and assigns it to the OpenLoop field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetOpenLoop(v bool) {
	o.OpenLoop = &v
}

// GetOpenLoopToggle returns the OpenLoopToggle field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetOpenLoopToggle() bool {
	if o == nil || o.OpenLoopToggle == nil {
		var ret bool
		return ret
	}
	return *o.OpenLoopToggle
}

// GetOpenLoopToggleOk returns a tuple with the OpenLoopToggle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetOpenLoopToggleOk() (*bool, bool) {
	if o == nil || o.OpenLoopToggle == nil {
		return nil, false
	}
	return o.OpenLoopToggle, true
}

// HasOpenLoopToggle returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasOpenLoopToggle() bool {
	if o != nil && o.OpenLoopToggle != nil {
		return true
	}

	return false
}

// SetOpenLoopToggle gets a reference to the given bool and assigns it to the OpenLoopToggle field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetOpenLoopToggle(v bool) {
	o.OpenLoopToggle = &v
}

// GetPartialRefunds returns the PartialRefunds field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPartialRefunds() bool {
	if o == nil || o.PartialRefunds == nil {
		var ret bool
		return ret
	}
	return *o.PartialRefunds
}

// GetPartialRefundsOk returns a tuple with the PartialRefunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPartialRefundsOk() (*bool, bool) {
	if o == nil || o.PartialRefunds == nil {
		return nil, false
	}
	return o.PartialRefunds, true
}

// HasPartialRefunds returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasPartialRefunds() bool {
	if o != nil && o.PartialRefunds != nil {
		return true
	}

	return false
}

// SetPartialRefunds gets a reference to the given bool and assigns it to the PartialRefunds field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetPartialRefunds(v bool) {
	o.PartialRefunds = &v
}

// GetPaymentMethodTokenization returns the PaymentMethodTokenization field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPaymentMethodTokenization() bool {
	if o == nil || o.PaymentMethodTokenization == nil {
		var ret bool
		return ret
	}
	return *o.PaymentMethodTokenization
}

// GetPaymentMethodTokenizationOk returns a tuple with the PaymentMethodTokenization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPaymentMethodTokenizationOk() (*bool, bool) {
	if o == nil || o.PaymentMethodTokenization == nil {
		return nil, false
	}
	return o.PaymentMethodTokenization, true
}

// HasPaymentMethodTokenization returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasPaymentMethodTokenization() bool {
	if o != nil && o.PaymentMethodTokenization != nil {
		return true
	}

	return false
}

// SetPaymentMethodTokenization gets a reference to the given bool and assigns it to the PaymentMethodTokenization field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetPaymentMethodTokenization(v bool) {
	o.PaymentMethodTokenization = &v
}

// GetPaymentMethodTokenizationToggle returns the PaymentMethodTokenizationToggle field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPaymentMethodTokenizationToggle() bool {
	if o == nil || o.PaymentMethodTokenizationToggle == nil {
		var ret bool
		return ret
	}
	return *o.PaymentMethodTokenizationToggle
}

// GetPaymentMethodTokenizationToggleOk returns a tuple with the PaymentMethodTokenizationToggle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPaymentMethodTokenizationToggleOk() (*bool, bool) {
	if o == nil || o.PaymentMethodTokenizationToggle == nil {
		return nil, false
	}
	return o.PaymentMethodTokenizationToggle, true
}

// HasPaymentMethodTokenizationToggle returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasPaymentMethodTokenizationToggle() bool {
	if o != nil && o.PaymentMethodTokenizationToggle != nil {
		return true
	}

	return false
}

// SetPaymentMethodTokenizationToggle gets a reference to the given bool and assigns it to the PaymentMethodTokenizationToggle field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetPaymentMethodTokenizationToggle(v bool) {
	o.PaymentMethodTokenizationToggle = &v
}

// GetRefunds returns the Refunds field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetRefunds() bool {
	if o == nil || o.Refunds == nil {
		var ret bool
		return ret
	}
	return *o.Refunds
}

// GetRefundsOk returns a tuple with the Refunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetRefundsOk() (*bool, bool) {
	if o == nil || o.Refunds == nil {
		return nil, false
	}
	return o.Refunds, true
}

// HasRefunds returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasRefunds() bool {
	if o != nil && o.Refunds != nil {
		return true
	}

	return false
}

// SetRefunds gets a reference to the given bool and assigns it to the Refunds field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetRefunds(v bool) {
	o.Refunds = &v
}

// GetRequiresWebhookSetup returns the RequiresWebhookSetup field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetRequiresWebhookSetup() bool {
	if o == nil || o.RequiresWebhookSetup == nil {
		var ret bool
		return ret
	}
	return *o.RequiresWebhookSetup
}

// GetRequiresWebhookSetupOk returns a tuple with the RequiresWebhookSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetRequiresWebhookSetupOk() (*bool, bool) {
	if o == nil || o.RequiresWebhookSetup == nil {
		return nil, false
	}
	return o.RequiresWebhookSetup, true
}

// HasRequiresWebhookSetup returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasRequiresWebhookSetup() bool {
	if o != nil && o.RequiresWebhookSetup != nil {
		return true
	}

	return false
}

// SetRequiresWebhookSetup gets a reference to the given bool and assigns it to the RequiresWebhookSetup field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetRequiresWebhookSetup(v bool) {
	o.RequiresWebhookSetup = &v
}

// GetThreeDSecureHosted returns the ThreeDSecureHosted field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetThreeDSecureHosted() bool {
	if o == nil || o.ThreeDSecureHosted == nil {
		var ret bool
		return ret
	}
	return *o.ThreeDSecureHosted
}

// GetThreeDSecureHostedOk returns a tuple with the ThreeDSecureHosted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetThreeDSecureHostedOk() (*bool, bool) {
	if o == nil || o.ThreeDSecureHosted == nil {
		return nil, false
	}
	return o.ThreeDSecureHosted, true
}

// HasThreeDSecureHosted returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasThreeDSecureHosted() bool {
	if o != nil && o.ThreeDSecureHosted != nil {
		return true
	}

	return false
}

// SetThreeDSecureHosted gets a reference to the given bool and assigns it to the ThreeDSecureHosted field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetThreeDSecureHosted(v bool) {
	o.ThreeDSecureHosted = &v
}

// GetThreeDSecurePassThrough returns the ThreeDSecurePassThrough field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetThreeDSecurePassThrough() bool {
	if o == nil || o.ThreeDSecurePassThrough == nil {
		var ret bool
		return ret
	}
	return *o.ThreeDSecurePassThrough
}

// GetThreeDSecurePassThroughOk returns a tuple with the ThreeDSecurePassThrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetThreeDSecurePassThroughOk() (*bool, bool) {
	if o == nil || o.ThreeDSecurePassThrough == nil {
		return nil, false
	}
	return o.ThreeDSecurePassThrough, true
}

// HasThreeDSecurePassThrough returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasThreeDSecurePassThrough() bool {
	if o != nil && o.ThreeDSecurePassThrough != nil {
		return true
	}

	return false
}

// SetThreeDSecurePassThrough gets a reference to the given bool and assigns it to the ThreeDSecurePassThrough field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetThreeDSecurePassThrough(v bool) {
	o.ThreeDSecurePassThrough = &v
}

// GetVerifyCredentials returns the VerifyCredentials field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetVerifyCredentials() bool {
	if o == nil || o.VerifyCredentials == nil {
		var ret bool
		return ret
	}
	return *o.VerifyCredentials
}

// GetVerifyCredentialsOk returns a tuple with the VerifyCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetVerifyCredentialsOk() (*bool, bool) {
	if o == nil || o.VerifyCredentials == nil {
		return nil, false
	}
	return o.VerifyCredentials, true
}

// HasVerifyCredentials returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasVerifyCredentials() bool {
	if o != nil && o.VerifyCredentials != nil {
		return true
	}

	return false
}

// SetVerifyCredentials gets a reference to the given bool and assigns it to the VerifyCredentials field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetVerifyCredentials(v bool) {
	o.VerifyCredentials = &v
}

// GetVoid returns the Void field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetVoid() bool {
	if o == nil || o.Void == nil {
		var ret bool
		return ret
	}
	return *o.Void
}

// GetVoidOk returns a tuple with the Void field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetVoidOk() (*bool, bool) {
	if o == nil || o.Void == nil {
		return nil, false
	}
	return o.Void, true
}

// HasVoid returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasVoid() bool {
	if o != nil && o.Void != nil {
		return true
	}

	return false
}

// SetVoid gets a reference to the given bool and assigns it to the Void field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetVoid(v bool) {
	o.Void = &v
}

func (o PaymentServiceDefinitionSupportedFeatures) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DelayedCapture != nil {
		toSerialize["delayed_capture"] = o.DelayedCapture
	}
	if o.NetworkTokens != nil {
		toSerialize["network_tokens"] = o.NetworkTokens
	}
	if o.NetworkTokensDefault != nil {
		toSerialize["network_tokens_default"] = o.NetworkTokensDefault
	}
	if o.NetworkTokensToggle != nil {
		toSerialize["network_tokens_toggle"] = o.NetworkTokensToggle
	}
	if o.OpenLoop != nil {
		toSerialize["open_loop"] = o.OpenLoop
	}
	if o.OpenLoopToggle != nil {
		toSerialize["open_loop_toggle"] = o.OpenLoopToggle
	}
	if o.PartialRefunds != nil {
		toSerialize["partial_refunds"] = o.PartialRefunds
	}
	if o.PaymentMethodTokenization != nil {
		toSerialize["payment_method_tokenization"] = o.PaymentMethodTokenization
	}
	if o.PaymentMethodTokenizationToggle != nil {
		toSerialize["payment_method_tokenization_toggle"] = o.PaymentMethodTokenizationToggle
	}
	if o.Refunds != nil {
		toSerialize["refunds"] = o.Refunds
	}
	if o.RequiresWebhookSetup != nil {
		toSerialize["requires_webhook_setup"] = o.RequiresWebhookSetup
	}
	if o.ThreeDSecureHosted != nil {
		toSerialize["three_d_secure_hosted"] = o.ThreeDSecureHosted
	}
	if o.ThreeDSecurePassThrough != nil {
		toSerialize["three_d_secure_pass_through"] = o.ThreeDSecurePassThrough
	}
	if o.VerifyCredentials != nil {
		toSerialize["verify_credentials"] = o.VerifyCredentials
	}
	if o.Void != nil {
		toSerialize["void"] = o.Void
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentServiceDefinitionSupportedFeatures struct {
	value *PaymentServiceDefinitionSupportedFeatures
	isSet bool
}

func (v NullablePaymentServiceDefinitionSupportedFeatures) Get() *PaymentServiceDefinitionSupportedFeatures {
	return v.value
}

func (v *NullablePaymentServiceDefinitionSupportedFeatures) Set(val *PaymentServiceDefinitionSupportedFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServiceDefinitionSupportedFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServiceDefinitionSupportedFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServiceDefinitionSupportedFeatures(val *PaymentServiceDefinitionSupportedFeatures) *NullablePaymentServiceDefinitionSupportedFeatures {
	return &NullablePaymentServiceDefinitionSupportedFeatures{value: val, isSet: true}
}

func (v NullablePaymentServiceDefinitionSupportedFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServiceDefinitionSupportedFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


