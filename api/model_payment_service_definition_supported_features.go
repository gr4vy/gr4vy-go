/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// PaymentServiceDefinitionSupportedFeatures Features supported by the payment definition.
type PaymentServiceDefinitionSupportedFeatures struct {
	// Supports storing a payment method via tokenization.
	PaymentMethodTokenization *bool `json:"payment_method_tokenization,omitempty"`
	// Supports hosted 3-D Secure with a redirect.
	ThreeDSecureHosted *bool `json:"three_d_secure_hosted,omitempty"`
	// Supports passing 3-D Secure data to the underlying processor.
	ThreeDSecurePassThrough *bool `json:"three_d_secure_pass_through,omitempty"`
	// Supports passing decrypted digital wallet (e.g. Apple Pay) tokens to the underlying processor.
	NetworkTokens *bool `json:"network_tokens,omitempty"`
	// Supports verifying the credentials entered while setting up the underlying processor. This is for internal use only.
	VerifyCredentials *bool `json:"verify_credentials,omitempty"`
	// Supports [voiding](#operation/void-transaction) authorized transactions.
	Void *bool `json:"void,omitempty"`
	// Supports [refunding](#operation/refund-transaction) captured transactions.
	Refunds *bool `json:"refunds,omitempty"`
	// Supports [partially refunding](#operation/refund-transaction) captured transactions.
	PartialRefunds *bool `json:"partial_refunds,omitempty"`
}

// NewPaymentServiceDefinitionSupportedFeatures instantiates a new PaymentServiceDefinitionSupportedFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServiceDefinitionSupportedFeatures() *PaymentServiceDefinitionSupportedFeatures {
	this := PaymentServiceDefinitionSupportedFeatures{}
	return &this
}

// NewPaymentServiceDefinitionSupportedFeaturesWithDefaults instantiates a new PaymentServiceDefinitionSupportedFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServiceDefinitionSupportedFeaturesWithDefaults() *PaymentServiceDefinitionSupportedFeatures {
	this := PaymentServiceDefinitionSupportedFeatures{}
	return &this
}

// GetPaymentMethodTokenization returns the PaymentMethodTokenization field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPaymentMethodTokenization() bool {
	if o == nil || o.PaymentMethodTokenization == nil {
		var ret bool
		return ret
	}
	return *o.PaymentMethodTokenization
}

// GetPaymentMethodTokenizationOk returns a tuple with the PaymentMethodTokenization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPaymentMethodTokenizationOk() (*bool, bool) {
	if o == nil || o.PaymentMethodTokenization == nil {
		return nil, false
	}
	return o.PaymentMethodTokenization, true
}

// HasPaymentMethodTokenization returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasPaymentMethodTokenization() bool {
	if o != nil && o.PaymentMethodTokenization != nil {
		return true
	}

	return false
}

// SetPaymentMethodTokenization gets a reference to the given bool and assigns it to the PaymentMethodTokenization field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetPaymentMethodTokenization(v bool) {
	o.PaymentMethodTokenization = &v
}

// GetThreeDSecureHosted returns the ThreeDSecureHosted field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetThreeDSecureHosted() bool {
	if o == nil || o.ThreeDSecureHosted == nil {
		var ret bool
		return ret
	}
	return *o.ThreeDSecureHosted
}

// GetThreeDSecureHostedOk returns a tuple with the ThreeDSecureHosted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetThreeDSecureHostedOk() (*bool, bool) {
	if o == nil || o.ThreeDSecureHosted == nil {
		return nil, false
	}
	return o.ThreeDSecureHosted, true
}

// HasThreeDSecureHosted returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasThreeDSecureHosted() bool {
	if o != nil && o.ThreeDSecureHosted != nil {
		return true
	}

	return false
}

// SetThreeDSecureHosted gets a reference to the given bool and assigns it to the ThreeDSecureHosted field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetThreeDSecureHosted(v bool) {
	o.ThreeDSecureHosted = &v
}

// GetThreeDSecurePassThrough returns the ThreeDSecurePassThrough field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetThreeDSecurePassThrough() bool {
	if o == nil || o.ThreeDSecurePassThrough == nil {
		var ret bool
		return ret
	}
	return *o.ThreeDSecurePassThrough
}

// GetThreeDSecurePassThroughOk returns a tuple with the ThreeDSecurePassThrough field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetThreeDSecurePassThroughOk() (*bool, bool) {
	if o == nil || o.ThreeDSecurePassThrough == nil {
		return nil, false
	}
	return o.ThreeDSecurePassThrough, true
}

// HasThreeDSecurePassThrough returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasThreeDSecurePassThrough() bool {
	if o != nil && o.ThreeDSecurePassThrough != nil {
		return true
	}

	return false
}

// SetThreeDSecurePassThrough gets a reference to the given bool and assigns it to the ThreeDSecurePassThrough field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetThreeDSecurePassThrough(v bool) {
	o.ThreeDSecurePassThrough = &v
}

// GetNetworkTokens returns the NetworkTokens field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetNetworkTokens() bool {
	if o == nil || o.NetworkTokens == nil {
		var ret bool
		return ret
	}
	return *o.NetworkTokens
}

// GetNetworkTokensOk returns a tuple with the NetworkTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetNetworkTokensOk() (*bool, bool) {
	if o == nil || o.NetworkTokens == nil {
		return nil, false
	}
	return o.NetworkTokens, true
}

// HasNetworkTokens returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasNetworkTokens() bool {
	if o != nil && o.NetworkTokens != nil {
		return true
	}

	return false
}

// SetNetworkTokens gets a reference to the given bool and assigns it to the NetworkTokens field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetNetworkTokens(v bool) {
	o.NetworkTokens = &v
}

// GetVerifyCredentials returns the VerifyCredentials field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetVerifyCredentials() bool {
	if o == nil || o.VerifyCredentials == nil {
		var ret bool
		return ret
	}
	return *o.VerifyCredentials
}

// GetVerifyCredentialsOk returns a tuple with the VerifyCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetVerifyCredentialsOk() (*bool, bool) {
	if o == nil || o.VerifyCredentials == nil {
		return nil, false
	}
	return o.VerifyCredentials, true
}

// HasVerifyCredentials returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasVerifyCredentials() bool {
	if o != nil && o.VerifyCredentials != nil {
		return true
	}

	return false
}

// SetVerifyCredentials gets a reference to the given bool and assigns it to the VerifyCredentials field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetVerifyCredentials(v bool) {
	o.VerifyCredentials = &v
}

// GetVoid returns the Void field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetVoid() bool {
	if o == nil || o.Void == nil {
		var ret bool
		return ret
	}
	return *o.Void
}

// GetVoidOk returns a tuple with the Void field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetVoidOk() (*bool, bool) {
	if o == nil || o.Void == nil {
		return nil, false
	}
	return o.Void, true
}

// HasVoid returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasVoid() bool {
	if o != nil && o.Void != nil {
		return true
	}

	return false
}

// SetVoid gets a reference to the given bool and assigns it to the Void field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetVoid(v bool) {
	o.Void = &v
}

// GetRefunds returns the Refunds field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetRefunds() bool {
	if o == nil || o.Refunds == nil {
		var ret bool
		return ret
	}
	return *o.Refunds
}

// GetRefundsOk returns a tuple with the Refunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetRefundsOk() (*bool, bool) {
	if o == nil || o.Refunds == nil {
		return nil, false
	}
	return o.Refunds, true
}

// HasRefunds returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasRefunds() bool {
	if o != nil && o.Refunds != nil {
		return true
	}

	return false
}

// SetRefunds gets a reference to the given bool and assigns it to the Refunds field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetRefunds(v bool) {
	o.Refunds = &v
}

// GetPartialRefunds returns the PartialRefunds field value if set, zero value otherwise.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPartialRefunds() bool {
	if o == nil || o.PartialRefunds == nil {
		var ret bool
		return ret
	}
	return *o.PartialRefunds
}

// GetPartialRefundsOk returns a tuple with the PartialRefunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) GetPartialRefundsOk() (*bool, bool) {
	if o == nil || o.PartialRefunds == nil {
		return nil, false
	}
	return o.PartialRefunds, true
}

// HasPartialRefunds returns a boolean if a field has been set.
func (o *PaymentServiceDefinitionSupportedFeatures) HasPartialRefunds() bool {
	if o != nil && o.PartialRefunds != nil {
		return true
	}

	return false
}

// SetPartialRefunds gets a reference to the given bool and assigns it to the PartialRefunds field.
func (o *PaymentServiceDefinitionSupportedFeatures) SetPartialRefunds(v bool) {
	o.PartialRefunds = &v
}

func (o PaymentServiceDefinitionSupportedFeatures) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PaymentMethodTokenization != nil {
		toSerialize["payment_method_tokenization"] = o.PaymentMethodTokenization
	}
	if o.ThreeDSecureHosted != nil {
		toSerialize["three_d_secure_hosted"] = o.ThreeDSecureHosted
	}
	if o.ThreeDSecurePassThrough != nil {
		toSerialize["three_d_secure_pass_through"] = o.ThreeDSecurePassThrough
	}
	if o.NetworkTokens != nil {
		toSerialize["network_tokens"] = o.NetworkTokens
	}
	if o.VerifyCredentials != nil {
		toSerialize["verify_credentials"] = o.VerifyCredentials
	}
	if o.Void != nil {
		toSerialize["void"] = o.Void
	}
	if o.Refunds != nil {
		toSerialize["refunds"] = o.Refunds
	}
	if o.PartialRefunds != nil {
		toSerialize["partial_refunds"] = o.PartialRefunds
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentServiceDefinitionSupportedFeatures struct {
	value *PaymentServiceDefinitionSupportedFeatures
	isSet bool
}

func (v NullablePaymentServiceDefinitionSupportedFeatures) Get() *PaymentServiceDefinitionSupportedFeatures {
	return v.value
}

func (v *NullablePaymentServiceDefinitionSupportedFeatures) Set(val *PaymentServiceDefinitionSupportedFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServiceDefinitionSupportedFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServiceDefinitionSupportedFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServiceDefinitionSupportedFeatures(val *PaymentServiceDefinitionSupportedFeatures) *NullablePaymentServiceDefinitionSupportedFeatures {
	return &NullablePaymentServiceDefinitionSupportedFeatures{value: val, isSet: true}
}

func (v NullablePaymentServiceDefinitionSupportedFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServiceDefinitionSupportedFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


