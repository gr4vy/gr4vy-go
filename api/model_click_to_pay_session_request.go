/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ClickToPaySessionRequest Return digital payment application details for Click to Pay.
type ClickToPaySessionRequest struct {
	// The identifier for the current checkout session.
	CheckoutSessionId string `json:"checkout_session_id"`
}

// NewClickToPaySessionRequest instantiates a new ClickToPaySessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClickToPaySessionRequest(checkoutSessionId string) *ClickToPaySessionRequest {
	this := ClickToPaySessionRequest{}
	this.CheckoutSessionId = checkoutSessionId
	return &this
}

// NewClickToPaySessionRequestWithDefaults instantiates a new ClickToPaySessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClickToPaySessionRequestWithDefaults() *ClickToPaySessionRequest {
	this := ClickToPaySessionRequest{}
	return &this
}

// GetCheckoutSessionId returns the CheckoutSessionId field value
func (o *ClickToPaySessionRequest) GetCheckoutSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CheckoutSessionId
}

// GetCheckoutSessionIdOk returns a tuple with the CheckoutSessionId field value
// and a boolean to check if the value has been set.
func (o *ClickToPaySessionRequest) GetCheckoutSessionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CheckoutSessionId, true
}

// SetCheckoutSessionId sets field value
func (o *ClickToPaySessionRequest) SetCheckoutSessionId(v string) {
	o.CheckoutSessionId = v
}

func (o ClickToPaySessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["checkout_session_id"] = o.CheckoutSessionId
	}
	return json.Marshal(toSerialize)
}

type NullableClickToPaySessionRequest struct {
	value *ClickToPaySessionRequest
	isSet bool
}

func (v NullableClickToPaySessionRequest) Get() *ClickToPaySessionRequest {
	return v.value
}

func (v *NullableClickToPaySessionRequest) Set(val *ClickToPaySessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClickToPaySessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClickToPaySessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClickToPaySessionRequest(val *ClickToPaySessionRequest) *NullableClickToPaySessionRequest {
	return &NullableClickToPaySessionRequest{value: val, isSet: true}
}

func (v NullableClickToPaySessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClickToPaySessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


