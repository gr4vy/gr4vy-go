/*
 * Gr4vy API (Beta)
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.0
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// PaymentServiceRequest Request body for activating a payment service.
type PaymentServiceRequest struct {
	// A custom name for the payment service. This will be shown in the Admin UI.
	DisplayName string `json:"display_name"`
	// A list of fields, each containing a key-value pair for each field defined by the definition for this payment service e.g. for stripe-card `secret_key` is required and so must be sent with in this field.
	Fields []PaymentServiceUpdateFields `json:"fields"`
	// A list of countries that this payment service needs to support in ISO two-letter code format.
	AcceptedCountries []string `json:"accepted_countries"`
	// A list of currencies that this payment service needs to support in ISO 4217 three-letter code format.
	AcceptedCurrencies []string `json:"accepted_currencies"`
	// Defines if the credentials are intended for the service's live API or sandbox/test API.
	CredentialsMode *string `json:"credentials_mode,omitempty"`
	// Defines if this service is currently active or not.
	Active *bool `json:"active,omitempty"`
	// Determines the Gr4vy environments in which this service should be available. This can be used in combination with the `environment` parameters in the payment method and transaction APIs to route transactions through this service.
	Environments *[]string `json:"environments,omitempty"`
	// The numeric rank of a payment service. Payment services with a lower position value are processed first. When a payment services is inserted at a position, any payment services with the the same value or higher are shifted down a position accordingly. When left out, the payment service is inserted at the end of the list.
	Position *float32 `json:"position,omitempty"`
	// The ID of the payment service to use.
	PaymentServiceDefinitionId string `json:"payment_service_definition_id"`
}

// NewPaymentServiceRequest instantiates a new PaymentServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentServiceRequest(displayName string, fields []PaymentServiceUpdateFields, acceptedCountries []string, acceptedCurrencies []string, paymentServiceDefinitionId string) *PaymentServiceRequest {
	this := PaymentServiceRequest{}
	this.DisplayName = displayName
	this.Fields = fields
	this.AcceptedCountries = acceptedCountries
	this.AcceptedCurrencies = acceptedCurrencies
	var credentialsMode string = "live"
	this.CredentialsMode = &credentialsMode
	var active bool = true
	this.Active = &active
	this.PaymentServiceDefinitionId = paymentServiceDefinitionId
	return &this
}

// NewPaymentServiceRequestWithDefaults instantiates a new PaymentServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServiceRequestWithDefaults() *PaymentServiceRequest {
	this := PaymentServiceRequest{}
	var credentialsMode string = "live"
	this.CredentialsMode = &credentialsMode
	var active bool = true
	this.Active = &active
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *PaymentServiceRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *PaymentServiceRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *PaymentServiceRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetFields returns the Fields field value
func (o *PaymentServiceRequest) GetFields() []PaymentServiceUpdateFields {
	if o == nil {
		var ret []PaymentServiceUpdateFields
		return ret
	}

	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value
// and a boolean to check if the value has been set.
func (o *PaymentServiceRequest) GetFieldsOk() (*[]PaymentServiceUpdateFields, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Fields, true
}

// SetFields sets field value
func (o *PaymentServiceRequest) SetFields(v []PaymentServiceUpdateFields) {
	o.Fields = v
}

// GetAcceptedCountries returns the AcceptedCountries field value
func (o *PaymentServiceRequest) GetAcceptedCountries() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AcceptedCountries
}

// GetAcceptedCountriesOk returns a tuple with the AcceptedCountries field value
// and a boolean to check if the value has been set.
func (o *PaymentServiceRequest) GetAcceptedCountriesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AcceptedCountries, true
}

// SetAcceptedCountries sets field value
func (o *PaymentServiceRequest) SetAcceptedCountries(v []string) {
	o.AcceptedCountries = v
}

// GetAcceptedCurrencies returns the AcceptedCurrencies field value
func (o *PaymentServiceRequest) GetAcceptedCurrencies() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AcceptedCurrencies
}

// GetAcceptedCurrenciesOk returns a tuple with the AcceptedCurrencies field value
// and a boolean to check if the value has been set.
func (o *PaymentServiceRequest) GetAcceptedCurrenciesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AcceptedCurrencies, true
}

// SetAcceptedCurrencies sets field value
func (o *PaymentServiceRequest) SetAcceptedCurrencies(v []string) {
	o.AcceptedCurrencies = v
}

// GetCredentialsMode returns the CredentialsMode field value if set, zero value otherwise.
func (o *PaymentServiceRequest) GetCredentialsMode() string {
	if o == nil || o.CredentialsMode == nil {
		var ret string
		return ret
	}
	return *o.CredentialsMode
}

// GetCredentialsModeOk returns a tuple with the CredentialsMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceRequest) GetCredentialsModeOk() (*string, bool) {
	if o == nil || o.CredentialsMode == nil {
		return nil, false
	}
	return o.CredentialsMode, true
}

// HasCredentialsMode returns a boolean if a field has been set.
func (o *PaymentServiceRequest) HasCredentialsMode() bool {
	if o != nil && o.CredentialsMode != nil {
		return true
	}

	return false
}

// SetCredentialsMode gets a reference to the given string and assigns it to the CredentialsMode field.
func (o *PaymentServiceRequest) SetCredentialsMode(v string) {
	o.CredentialsMode = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PaymentServiceRequest) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceRequest) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PaymentServiceRequest) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PaymentServiceRequest) SetActive(v bool) {
	o.Active = &v
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *PaymentServiceRequest) GetEnvironments() []string {
	if o == nil || o.Environments == nil {
		var ret []string
		return ret
	}
	return *o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceRequest) GetEnvironmentsOk() (*[]string, bool) {
	if o == nil || o.Environments == nil {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *PaymentServiceRequest) HasEnvironments() bool {
	if o != nil && o.Environments != nil {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given []string and assigns it to the Environments field.
func (o *PaymentServiceRequest) SetEnvironments(v []string) {
	o.Environments = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *PaymentServiceRequest) GetPosition() float32 {
	if o == nil || o.Position == nil {
		var ret float32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentServiceRequest) GetPositionOk() (*float32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *PaymentServiceRequest) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given float32 and assigns it to the Position field.
func (o *PaymentServiceRequest) SetPosition(v float32) {
	o.Position = &v
}

// GetPaymentServiceDefinitionId returns the PaymentServiceDefinitionId field value
func (o *PaymentServiceRequest) GetPaymentServiceDefinitionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentServiceDefinitionId
}

// GetPaymentServiceDefinitionIdOk returns a tuple with the PaymentServiceDefinitionId field value
// and a boolean to check if the value has been set.
func (o *PaymentServiceRequest) GetPaymentServiceDefinitionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PaymentServiceDefinitionId, true
}

// SetPaymentServiceDefinitionId sets field value
func (o *PaymentServiceRequest) SetPaymentServiceDefinitionId(v string) {
	o.PaymentServiceDefinitionId = v
}

func (o PaymentServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["fields"] = o.Fields
	}
	if true {
		toSerialize["accepted_countries"] = o.AcceptedCountries
	}
	if true {
		toSerialize["accepted_currencies"] = o.AcceptedCurrencies
	}
	if o.CredentialsMode != nil {
		toSerialize["credentials_mode"] = o.CredentialsMode
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Environments != nil {
		toSerialize["environments"] = o.Environments
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if true {
		toSerialize["payment_service_definition_id"] = o.PaymentServiceDefinitionId
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentServiceRequest struct {
	value *PaymentServiceRequest
	isSet bool
}

func (v NullablePaymentServiceRequest) Get() *PaymentServiceRequest {
	return v.value
}

func (v *NullablePaymentServiceRequest) Set(val *PaymentServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentServiceRequest(val *PaymentServiceRequest) *NullablePaymentServiceRequest {
	return &NullablePaymentServiceRequest{value: val, isSet: true}
}

func (v NullablePaymentServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


