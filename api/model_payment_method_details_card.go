/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// PaymentMethodDetailsCard A credit or debit card payment method.
type PaymentMethodDetailsCard struct {
	// The first 6 digits of the full card number (the BIN).
	Bin *string `json:"bin,omitempty"`
	// The type of card, one of `credit`, `debit` or `prepaid`.
	CardType *string `json:"card_type,omitempty"`
	// The name of the card issuer.
	CardIssuerName *string `json:"card_issuer_name,omitempty"`
}

// NewPaymentMethodDetailsCard instantiates a new PaymentMethodDetailsCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodDetailsCard() *PaymentMethodDetailsCard {
	this := PaymentMethodDetailsCard{}
	return &this
}

// NewPaymentMethodDetailsCardWithDefaults instantiates a new PaymentMethodDetailsCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodDetailsCardWithDefaults() *PaymentMethodDetailsCard {
	this := PaymentMethodDetailsCard{}
	return &this
}

// GetBin returns the Bin field value if set, zero value otherwise.
func (o *PaymentMethodDetailsCard) GetBin() string {
	if o == nil || o.Bin == nil {
		var ret string
		return ret
	}
	return *o.Bin
}

// GetBinOk returns a tuple with the Bin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodDetailsCard) GetBinOk() (*string, bool) {
	if o == nil || o.Bin == nil {
		return nil, false
	}
	return o.Bin, true
}

// HasBin returns a boolean if a field has been set.
func (o *PaymentMethodDetailsCard) HasBin() bool {
	if o != nil && o.Bin != nil {
		return true
	}

	return false
}

// SetBin gets a reference to the given string and assigns it to the Bin field.
func (o *PaymentMethodDetailsCard) SetBin(v string) {
	o.Bin = &v
}

// GetCardType returns the CardType field value if set, zero value otherwise.
func (o *PaymentMethodDetailsCard) GetCardType() string {
	if o == nil || o.CardType == nil {
		var ret string
		return ret
	}
	return *o.CardType
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodDetailsCard) GetCardTypeOk() (*string, bool) {
	if o == nil || o.CardType == nil {
		return nil, false
	}
	return o.CardType, true
}

// HasCardType returns a boolean if a field has been set.
func (o *PaymentMethodDetailsCard) HasCardType() bool {
	if o != nil && o.CardType != nil {
		return true
	}

	return false
}

// SetCardType gets a reference to the given string and assigns it to the CardType field.
func (o *PaymentMethodDetailsCard) SetCardType(v string) {
	o.CardType = &v
}

// GetCardIssuerName returns the CardIssuerName field value if set, zero value otherwise.
func (o *PaymentMethodDetailsCard) GetCardIssuerName() string {
	if o == nil || o.CardIssuerName == nil {
		var ret string
		return ret
	}
	return *o.CardIssuerName
}

// GetCardIssuerNameOk returns a tuple with the CardIssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodDetailsCard) GetCardIssuerNameOk() (*string, bool) {
	if o == nil || o.CardIssuerName == nil {
		return nil, false
	}
	return o.CardIssuerName, true
}

// HasCardIssuerName returns a boolean if a field has been set.
func (o *PaymentMethodDetailsCard) HasCardIssuerName() bool {
	if o != nil && o.CardIssuerName != nil {
		return true
	}

	return false
}

// SetCardIssuerName gets a reference to the given string and assigns it to the CardIssuerName field.
func (o *PaymentMethodDetailsCard) SetCardIssuerName(v string) {
	o.CardIssuerName = &v
}

func (o PaymentMethodDetailsCard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bin != nil {
		toSerialize["bin"] = o.Bin
	}
	if o.CardType != nil {
		toSerialize["card_type"] = o.CardType
	}
	if o.CardIssuerName != nil {
		toSerialize["card_issuer_name"] = o.CardIssuerName
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentMethodDetailsCard struct {
	value *PaymentMethodDetailsCard
	isSet bool
}

func (v NullablePaymentMethodDetailsCard) Get() *PaymentMethodDetailsCard {
	return v.value
}

func (v *NullablePaymentMethodDetailsCard) Set(val *PaymentMethodDetailsCard) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodDetailsCard) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodDetailsCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodDetailsCard(val *PaymentMethodDetailsCard) *NullablePaymentMethodDetailsCard {
	return &NullablePaymentMethodDetailsCard{value: val, isSet: true}
}

func (v NullablePaymentMethodDetailsCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodDetailsCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


