/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// CardRequiredFields The fields that are required to process a transaction for this card.
type CardRequiredFields struct {
	// The first (given) name of the buyer.
	FirstName *bool `json:"first_name,omitempty"`
	// The last (family) name of the buyer.
	LastName *bool `json:"last_name,omitempty"`
	// The email address of the buyer.
	EmailAddress *bool `json:"email_address,omitempty"`
	// The phone number of the buyer.
	PhoneNumber *bool `json:"phone_number,omitempty"`
	Address *CardRequiredFieldsAddress `json:"address,omitempty"`
	// The tax id code associated with the billing details.
	TaxId *bool `json:"tax_id,omitempty"`
}

// NewCardRequiredFields instantiates a new CardRequiredFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardRequiredFields() *CardRequiredFields {
	this := CardRequiredFields{}
	return &this
}

// NewCardRequiredFieldsWithDefaults instantiates a new CardRequiredFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardRequiredFieldsWithDefaults() *CardRequiredFields {
	this := CardRequiredFields{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *CardRequiredFields) GetFirstName() bool {
	if o == nil || o.FirstName == nil {
		var ret bool
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequiredFields) GetFirstNameOk() (*bool, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *CardRequiredFields) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given bool and assigns it to the FirstName field.
func (o *CardRequiredFields) SetFirstName(v bool) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *CardRequiredFields) GetLastName() bool {
	if o == nil || o.LastName == nil {
		var ret bool
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequiredFields) GetLastNameOk() (*bool, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *CardRequiredFields) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given bool and assigns it to the LastName field.
func (o *CardRequiredFields) SetLastName(v bool) {
	o.LastName = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *CardRequiredFields) GetEmailAddress() bool {
	if o == nil || o.EmailAddress == nil {
		var ret bool
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequiredFields) GetEmailAddressOk() (*bool, bool) {
	if o == nil || o.EmailAddress == nil {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *CardRequiredFields) HasEmailAddress() bool {
	if o != nil && o.EmailAddress != nil {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given bool and assigns it to the EmailAddress field.
func (o *CardRequiredFields) SetEmailAddress(v bool) {
	o.EmailAddress = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *CardRequiredFields) GetPhoneNumber() bool {
	if o == nil || o.PhoneNumber == nil {
		var ret bool
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequiredFields) GetPhoneNumberOk() (*bool, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *CardRequiredFields) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given bool and assigns it to the PhoneNumber field.
func (o *CardRequiredFields) SetPhoneNumber(v bool) {
	o.PhoneNumber = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CardRequiredFields) GetAddress() CardRequiredFieldsAddress {
	if o == nil || o.Address == nil {
		var ret CardRequiredFieldsAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequiredFields) GetAddressOk() (*CardRequiredFieldsAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CardRequiredFields) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given CardRequiredFieldsAddress and assigns it to the Address field.
func (o *CardRequiredFields) SetAddress(v CardRequiredFieldsAddress) {
	o.Address = &v
}

// GetTaxId returns the TaxId field value if set, zero value otherwise.
func (o *CardRequiredFields) GetTaxId() bool {
	if o == nil || o.TaxId == nil {
		var ret bool
		return ret
	}
	return *o.TaxId
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardRequiredFields) GetTaxIdOk() (*bool, bool) {
	if o == nil || o.TaxId == nil {
		return nil, false
	}
	return o.TaxId, true
}

// HasTaxId returns a boolean if a field has been set.
func (o *CardRequiredFields) HasTaxId() bool {
	if o != nil && o.TaxId != nil {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given bool and assigns it to the TaxId field.
func (o *CardRequiredFields) SetTaxId(v bool) {
	o.TaxId = &v
}

func (o CardRequiredFields) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.EmailAddress != nil {
		toSerialize["email_address"] = o.EmailAddress
	}
	if o.PhoneNumber != nil {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.TaxId != nil {
		toSerialize["tax_id"] = o.TaxId
	}
	return json.Marshal(toSerialize)
}

type NullableCardRequiredFields struct {
	value *CardRequiredFields
	isSet bool
}

func (v NullableCardRequiredFields) Get() *CardRequiredFields {
	return v.value
}

func (v *NullableCardRequiredFields) Set(val *CardRequiredFields) {
	v.value = val
	v.isSet = true
}

func (v NullableCardRequiredFields) IsSet() bool {
	return v.isSet
}

func (v *NullableCardRequiredFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardRequiredFields(val *CardRequiredFields) *NullableCardRequiredFields {
	return &NullableCardRequiredFields{value: val, isSet: true}
}

func (v NullableCardRequiredFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardRequiredFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


