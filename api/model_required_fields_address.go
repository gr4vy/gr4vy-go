/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// RequiredFieldsAddress The billing address of the buyer.
type RequiredFieldsAddress struct {
	// The city for the billing address.
	City *bool `json:"city,omitempty"`
	// The country for the billing address.
	Country *bool `json:"country,omitempty"`
	// The postal code or zip code for the billing address.
	PostalCode *bool `json:"postal_code,omitempty"`
	// The state, county, or province for the billing address.
	State *bool `json:"state,omitempty"`
	// The house number or name for the billing address. Not all payment services use this field but some do.
	HouseNumberOrName *bool `json:"house_number_or_name,omitempty"`
	// The first line of the billing address.
	Line1 *bool `json:"line1,omitempty"`
}

// NewRequiredFieldsAddress instantiates a new RequiredFieldsAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequiredFieldsAddress() *RequiredFieldsAddress {
	this := RequiredFieldsAddress{}
	return &this
}

// NewRequiredFieldsAddressWithDefaults instantiates a new RequiredFieldsAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequiredFieldsAddressWithDefaults() *RequiredFieldsAddress {
	this := RequiredFieldsAddress{}
	return &this
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *RequiredFieldsAddress) GetCity() bool {
	if o == nil || o.City == nil {
		var ret bool
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequiredFieldsAddress) GetCityOk() (*bool, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *RequiredFieldsAddress) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given bool and assigns it to the City field.
func (o *RequiredFieldsAddress) SetCity(v bool) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *RequiredFieldsAddress) GetCountry() bool {
	if o == nil || o.Country == nil {
		var ret bool
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequiredFieldsAddress) GetCountryOk() (*bool, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *RequiredFieldsAddress) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given bool and assigns it to the Country field.
func (o *RequiredFieldsAddress) SetCountry(v bool) {
	o.Country = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *RequiredFieldsAddress) GetPostalCode() bool {
	if o == nil || o.PostalCode == nil {
		var ret bool
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequiredFieldsAddress) GetPostalCodeOk() (*bool, bool) {
	if o == nil || o.PostalCode == nil {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *RequiredFieldsAddress) HasPostalCode() bool {
	if o != nil && o.PostalCode != nil {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given bool and assigns it to the PostalCode field.
func (o *RequiredFieldsAddress) SetPostalCode(v bool) {
	o.PostalCode = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RequiredFieldsAddress) GetState() bool {
	if o == nil || o.State == nil {
		var ret bool
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequiredFieldsAddress) GetStateOk() (*bool, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *RequiredFieldsAddress) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given bool and assigns it to the State field.
func (o *RequiredFieldsAddress) SetState(v bool) {
	o.State = &v
}

// GetHouseNumberOrName returns the HouseNumberOrName field value if set, zero value otherwise.
func (o *RequiredFieldsAddress) GetHouseNumberOrName() bool {
	if o == nil || o.HouseNumberOrName == nil {
		var ret bool
		return ret
	}
	return *o.HouseNumberOrName
}

// GetHouseNumberOrNameOk returns a tuple with the HouseNumberOrName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequiredFieldsAddress) GetHouseNumberOrNameOk() (*bool, bool) {
	if o == nil || o.HouseNumberOrName == nil {
		return nil, false
	}
	return o.HouseNumberOrName, true
}

// HasHouseNumberOrName returns a boolean if a field has been set.
func (o *RequiredFieldsAddress) HasHouseNumberOrName() bool {
	if o != nil && o.HouseNumberOrName != nil {
		return true
	}

	return false
}

// SetHouseNumberOrName gets a reference to the given bool and assigns it to the HouseNumberOrName field.
func (o *RequiredFieldsAddress) SetHouseNumberOrName(v bool) {
	o.HouseNumberOrName = &v
}

// GetLine1 returns the Line1 field value if set, zero value otherwise.
func (o *RequiredFieldsAddress) GetLine1() bool {
	if o == nil || o.Line1 == nil {
		var ret bool
		return ret
	}
	return *o.Line1
}

// GetLine1Ok returns a tuple with the Line1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequiredFieldsAddress) GetLine1Ok() (*bool, bool) {
	if o == nil || o.Line1 == nil {
		return nil, false
	}
	return o.Line1, true
}

// HasLine1 returns a boolean if a field has been set.
func (o *RequiredFieldsAddress) HasLine1() bool {
	if o != nil && o.Line1 != nil {
		return true
	}

	return false
}

// SetLine1 gets a reference to the given bool and assigns it to the Line1 field.
func (o *RequiredFieldsAddress) SetLine1(v bool) {
	o.Line1 = &v
}

func (o RequiredFieldsAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.PostalCode != nil {
		toSerialize["postal_code"] = o.PostalCode
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.HouseNumberOrName != nil {
		toSerialize["house_number_or_name"] = o.HouseNumberOrName
	}
	if o.Line1 != nil {
		toSerialize["line1"] = o.Line1
	}
	return json.Marshal(toSerialize)
}

type NullableRequiredFieldsAddress struct {
	value *RequiredFieldsAddress
	isSet bool
}

func (v NullableRequiredFieldsAddress) Get() *RequiredFieldsAddress {
	return v.value
}

func (v *NullableRequiredFieldsAddress) Set(val *RequiredFieldsAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableRequiredFieldsAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableRequiredFieldsAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequiredFieldsAddress(val *RequiredFieldsAddress) *NullableRequiredFieldsAddress {
	return &NullableRequiredFieldsAddress{value: val, isSet: true}
}

func (v NullableRequiredFieldsAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequiredFieldsAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


