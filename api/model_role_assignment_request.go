/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// RoleAssignmentRequest A request to create a role assignment.
type RoleAssignmentRequest struct {
	Role RoleAssignmentRequestRole `json:"role"`
	Assignee RoleAssignmentRequestAssignee `json:"assignee"`
}

// NewRoleAssignmentRequest instantiates a new RoleAssignmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleAssignmentRequest(role RoleAssignmentRequestRole, assignee RoleAssignmentRequestAssignee) *RoleAssignmentRequest {
	this := RoleAssignmentRequest{}
	this.Role = role
	this.Assignee = assignee
	return &this
}

// NewRoleAssignmentRequestWithDefaults instantiates a new RoleAssignmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleAssignmentRequestWithDefaults() *RoleAssignmentRequest {
	this := RoleAssignmentRequest{}
	return &this
}

// GetRole returns the Role field value
func (o *RoleAssignmentRequest) GetRole() RoleAssignmentRequestRole {
	if o == nil {
		var ret RoleAssignmentRequestRole
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentRequest) GetRoleOk() (*RoleAssignmentRequestRole, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *RoleAssignmentRequest) SetRole(v RoleAssignmentRequestRole) {
	o.Role = v
}

// GetAssignee returns the Assignee field value
func (o *RoleAssignmentRequest) GetAssignee() RoleAssignmentRequestAssignee {
	if o == nil {
		var ret RoleAssignmentRequestAssignee
		return ret
	}

	return o.Assignee
}

// GetAssigneeOk returns a tuple with the Assignee field value
// and a boolean to check if the value has been set.
func (o *RoleAssignmentRequest) GetAssigneeOk() (*RoleAssignmentRequestAssignee, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Assignee, true
}

// SetAssignee sets field value
func (o *RoleAssignmentRequest) SetAssignee(v RoleAssignmentRequestAssignee) {
	o.Assignee = v
}

func (o RoleAssignmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["assignee"] = o.Assignee
	}
	return json.Marshal(toSerialize)
}

type NullableRoleAssignmentRequest struct {
	value *RoleAssignmentRequest
	isSet bool
}

func (v NullableRoleAssignmentRequest) Get() *RoleAssignmentRequest {
	return v.value
}

func (v *NullableRoleAssignmentRequest) Set(val *RoleAssignmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleAssignmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleAssignmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleAssignmentRequest(val *RoleAssignmentRequest) *NullableRoleAssignmentRequest {
	return &NullableRoleAssignmentRequest{value: val, isSet: true}
}

func (v NullableRoleAssignmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleAssignmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


