/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// PaymentMethodTokens A list of tokens for a payment method.
type PaymentMethodTokens struct {
	// A list of stored tokens for payment methods.
	Items *[]PaymentMethodToken `json:"items,omitempty"`
}

// NewPaymentMethodTokens instantiates a new PaymentMethodTokens object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodTokens() *PaymentMethodTokens {
	this := PaymentMethodTokens{}
	return &this
}

// NewPaymentMethodTokensWithDefaults instantiates a new PaymentMethodTokens object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodTokensWithDefaults() *PaymentMethodTokens {
	this := PaymentMethodTokens{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *PaymentMethodTokens) GetItems() []PaymentMethodToken {
	if o == nil || o.Items == nil {
		var ret []PaymentMethodToken
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodTokens) GetItemsOk() (*[]PaymentMethodToken, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *PaymentMethodTokens) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []PaymentMethodToken and assigns it to the Items field.
func (o *PaymentMethodTokens) SetItems(v []PaymentMethodToken) {
	o.Items = &v
}

func (o PaymentMethodTokens) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentMethodTokens struct {
	value *PaymentMethodTokens
	isSet bool
}

func (v NullablePaymentMethodTokens) Get() *PaymentMethodTokens {
	return v.value
}

func (v *NullablePaymentMethodTokens) Set(val *PaymentMethodTokens) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodTokens) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodTokens) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodTokens(val *PaymentMethodTokens) *NullablePaymentMethodTokens {
	return &NullablePaymentMethodTokens{value: val, isSet: true}
}

func (v NullablePaymentMethodTokens) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodTokens) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


