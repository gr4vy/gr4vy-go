/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ThreeDSecureDataV1 struct for ThreeDSecureDataV1
type ThreeDSecureDataV1 struct {
	// The cardholder authentication value or AAV.
	Cavv string `json:"cavv"`
	// The electronic commerce indicator for the 3DS transaction.
	Eci string `json:"eci"`
	// The version of 3-D Secure that was used.
	Version string `json:"version"`
	// For 3-D Secure version 1, the enrolment response. For 3-D Secure version , the transaction status from the `ARes`.
	DirectoryResponse string `json:"directory_response"`
	// The response for the 3DS authentication call.
	AuthenticationResponse string `json:"authentication_response"`
	// The CAVV algorithm used.
	CavvAlgorithm string `json:"cavv_algorithm"`
	// The transaction identifier.
	Xid string `json:"xid"`
}

// NewThreeDSecureDataV1 instantiates a new ThreeDSecureDataV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreeDSecureDataV1(cavv string, eci string, version string, directoryResponse string, authenticationResponse string, cavvAlgorithm string, xid string) *ThreeDSecureDataV1 {
	this := ThreeDSecureDataV1{}
	this.Cavv = cavv
	this.Eci = eci
	this.Version = version
	this.DirectoryResponse = directoryResponse
	this.AuthenticationResponse = authenticationResponse
	this.CavvAlgorithm = cavvAlgorithm
	this.Xid = xid
	return &this
}

// NewThreeDSecureDataV1WithDefaults instantiates a new ThreeDSecureDataV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreeDSecureDataV1WithDefaults() *ThreeDSecureDataV1 {
	this := ThreeDSecureDataV1{}
	return &this
}

// GetCavv returns the Cavv field value
func (o *ThreeDSecureDataV1) GetCavv() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cavv
}

// GetCavvOk returns a tuple with the Cavv field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1) GetCavvOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cavv, true
}

// SetCavv sets field value
func (o *ThreeDSecureDataV1) SetCavv(v string) {
	o.Cavv = v
}

// GetEci returns the Eci field value
func (o *ThreeDSecureDataV1) GetEci() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Eci
}

// GetEciOk returns a tuple with the Eci field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1) GetEciOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Eci, true
}

// SetEci sets field value
func (o *ThreeDSecureDataV1) SetEci(v string) {
	o.Eci = v
}

// GetVersion returns the Version field value
func (o *ThreeDSecureDataV1) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ThreeDSecureDataV1) SetVersion(v string) {
	o.Version = v
}

// GetDirectoryResponse returns the DirectoryResponse field value
func (o *ThreeDSecureDataV1) GetDirectoryResponse() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DirectoryResponse
}

// GetDirectoryResponseOk returns a tuple with the DirectoryResponse field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1) GetDirectoryResponseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DirectoryResponse, true
}

// SetDirectoryResponse sets field value
func (o *ThreeDSecureDataV1) SetDirectoryResponse(v string) {
	o.DirectoryResponse = v
}

// GetAuthenticationResponse returns the AuthenticationResponse field value
func (o *ThreeDSecureDataV1) GetAuthenticationResponse() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationResponse
}

// GetAuthenticationResponseOk returns a tuple with the AuthenticationResponse field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1) GetAuthenticationResponseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthenticationResponse, true
}

// SetAuthenticationResponse sets field value
func (o *ThreeDSecureDataV1) SetAuthenticationResponse(v string) {
	o.AuthenticationResponse = v
}

// GetCavvAlgorithm returns the CavvAlgorithm field value
func (o *ThreeDSecureDataV1) GetCavvAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CavvAlgorithm
}

// GetCavvAlgorithmOk returns a tuple with the CavvAlgorithm field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1) GetCavvAlgorithmOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CavvAlgorithm, true
}

// SetCavvAlgorithm sets field value
func (o *ThreeDSecureDataV1) SetCavvAlgorithm(v string) {
	o.CavvAlgorithm = v
}

// GetXid returns the Xid field value
func (o *ThreeDSecureDataV1) GetXid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Xid
}

// GetXidOk returns a tuple with the Xid field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1) GetXidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Xid, true
}

// SetXid sets field value
func (o *ThreeDSecureDataV1) SetXid(v string) {
	o.Xid = v
}

func (o ThreeDSecureDataV1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cavv"] = o.Cavv
	}
	if true {
		toSerialize["eci"] = o.Eci
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["directory_response"] = o.DirectoryResponse
	}
	if true {
		toSerialize["authentication_response"] = o.AuthenticationResponse
	}
	if true {
		toSerialize["cavv_algorithm"] = o.CavvAlgorithm
	}
	if true {
		toSerialize["xid"] = o.Xid
	}
	return json.Marshal(toSerialize)
}

type NullableThreeDSecureDataV1 struct {
	value *ThreeDSecureDataV1
	isSet bool
}

func (v NullableThreeDSecureDataV1) Get() *ThreeDSecureDataV1 {
	return v.value
}

func (v *NullableThreeDSecureDataV1) Set(val *ThreeDSecureDataV1) {
	v.value = val
	v.isSet = true
}

func (v NullableThreeDSecureDataV1) IsSet() bool {
	return v.isSet
}

func (v *NullableThreeDSecureDataV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreeDSecureDataV1(val *ThreeDSecureDataV1) *NullableThreeDSecureDataV1 {
	return &NullableThreeDSecureDataV1{value: val, isSet: true}
}

func (v NullableThreeDSecureDataV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreeDSecureDataV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


