/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptionsForterAntiFraudPersonalDetails Personal details are those which contribute to building up a picture of the person as an individual, such as name, title, etc.
type ConnectionOptionsForterAntiFraudPersonalDetails struct {
	// First name.
	FirstName *string `json:"first_name,omitempty"`
	// Last name.
	LastName *string `json:"last_name,omitempty"`
	// Email address.
	Email *string `json:"email,omitempty"`
}

// NewConnectionOptionsForterAntiFraudPersonalDetails instantiates a new ConnectionOptionsForterAntiFraudPersonalDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptionsForterAntiFraudPersonalDetails() *ConnectionOptionsForterAntiFraudPersonalDetails {
	this := ConnectionOptionsForterAntiFraudPersonalDetails{}
	return &this
}

// NewConnectionOptionsForterAntiFraudPersonalDetailsWithDefaults instantiates a new ConnectionOptionsForterAntiFraudPersonalDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsForterAntiFraudPersonalDetailsWithDefaults() *ConnectionOptionsForterAntiFraudPersonalDetails {
	this := ConnectionOptionsForterAntiFraudPersonalDetails{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ConnectionOptionsForterAntiFraudPersonalDetails) SetEmail(v string) {
	o.Email = &v
}

func (o ConnectionOptionsForterAntiFraudPersonalDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptionsForterAntiFraudPersonalDetails struct {
	value *ConnectionOptionsForterAntiFraudPersonalDetails
	isSet bool
}

func (v NullableConnectionOptionsForterAntiFraudPersonalDetails) Get() *ConnectionOptionsForterAntiFraudPersonalDetails {
	return v.value
}

func (v *NullableConnectionOptionsForterAntiFraudPersonalDetails) Set(val *ConnectionOptionsForterAntiFraudPersonalDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptionsForterAntiFraudPersonalDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptionsForterAntiFraudPersonalDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptionsForterAntiFraudPersonalDetails(val *ConnectionOptionsForterAntiFraudPersonalDetails) *NullableConnectionOptionsForterAntiFraudPersonalDetails {
	return &NullableConnectionOptionsForterAntiFraudPersonalDetails{value: val, isSet: true}
}

func (v NullableConnectionOptionsForterAntiFraudPersonalDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptionsForterAntiFraudPersonalDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


