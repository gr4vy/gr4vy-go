/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// PayoutConnectionOptionsRequestCheckoutCard Custom options for checkout-card payment service.
type PayoutConnectionOptionsRequestCheckoutCard struct {
	// The ID of the currency account that will fund the payout.
	SourceId *string `json:"source_id,omitempty"`
	// The processing channel to be used for the payment.
	ProcessingChannelId *string `json:"processing_channel_id,omitempty"`
}

// NewPayoutConnectionOptionsRequestCheckoutCard instantiates a new PayoutConnectionOptionsRequestCheckoutCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayoutConnectionOptionsRequestCheckoutCard() *PayoutConnectionOptionsRequestCheckoutCard {
	this := PayoutConnectionOptionsRequestCheckoutCard{}
	return &this
}

// NewPayoutConnectionOptionsRequestCheckoutCardWithDefaults instantiates a new PayoutConnectionOptionsRequestCheckoutCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayoutConnectionOptionsRequestCheckoutCardWithDefaults() *PayoutConnectionOptionsRequestCheckoutCard {
	this := PayoutConnectionOptionsRequestCheckoutCard{}
	return &this
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *PayoutConnectionOptionsRequestCheckoutCard) GetSourceId() string {
	if o == nil || o.SourceId == nil {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutConnectionOptionsRequestCheckoutCard) GetSourceIdOk() (*string, bool) {
	if o == nil || o.SourceId == nil {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *PayoutConnectionOptionsRequestCheckoutCard) HasSourceId() bool {
	if o != nil && o.SourceId != nil {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *PayoutConnectionOptionsRequestCheckoutCard) SetSourceId(v string) {
	o.SourceId = &v
}

// GetProcessingChannelId returns the ProcessingChannelId field value if set, zero value otherwise.
func (o *PayoutConnectionOptionsRequestCheckoutCard) GetProcessingChannelId() string {
	if o == nil || o.ProcessingChannelId == nil {
		var ret string
		return ret
	}
	return *o.ProcessingChannelId
}

// GetProcessingChannelIdOk returns a tuple with the ProcessingChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutConnectionOptionsRequestCheckoutCard) GetProcessingChannelIdOk() (*string, bool) {
	if o == nil || o.ProcessingChannelId == nil {
		return nil, false
	}
	return o.ProcessingChannelId, true
}

// HasProcessingChannelId returns a boolean if a field has been set.
func (o *PayoutConnectionOptionsRequestCheckoutCard) HasProcessingChannelId() bool {
	if o != nil && o.ProcessingChannelId != nil {
		return true
	}

	return false
}

// SetProcessingChannelId gets a reference to the given string and assigns it to the ProcessingChannelId field.
func (o *PayoutConnectionOptionsRequestCheckoutCard) SetProcessingChannelId(v string) {
	o.ProcessingChannelId = &v
}

func (o PayoutConnectionOptionsRequestCheckoutCard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceId != nil {
		toSerialize["source_id"] = o.SourceId
	}
	if o.ProcessingChannelId != nil {
		toSerialize["processing_channel_id"] = o.ProcessingChannelId
	}
	return json.Marshal(toSerialize)
}

type NullablePayoutConnectionOptionsRequestCheckoutCard struct {
	value *PayoutConnectionOptionsRequestCheckoutCard
	isSet bool
}

func (v NullablePayoutConnectionOptionsRequestCheckoutCard) Get() *PayoutConnectionOptionsRequestCheckoutCard {
	return v.value
}

func (v *NullablePayoutConnectionOptionsRequestCheckoutCard) Set(val *PayoutConnectionOptionsRequestCheckoutCard) {
	v.value = val
	v.isSet = true
}

func (v NullablePayoutConnectionOptionsRequestCheckoutCard) IsSet() bool {
	return v.isSet
}

func (v *NullablePayoutConnectionOptionsRequestCheckoutCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayoutConnectionOptionsRequestCheckoutCard(val *PayoutConnectionOptionsRequestCheckoutCard) *NullablePayoutConnectionOptionsRequestCheckoutCard {
	return &NullablePayoutConnectionOptionsRequestCheckoutCard{value: val, isSet: true}
}

func (v NullablePayoutConnectionOptionsRequestCheckoutCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayoutConnectionOptionsRequestCheckoutCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


