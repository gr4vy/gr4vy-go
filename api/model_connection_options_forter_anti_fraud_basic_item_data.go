/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptionsForterAntiFraudBasicItemData General data regarding item such as name, price, etc.
type ConnectionOptionsForterAntiFraudBasicItemData struct {
	// Tangible if physical item, non-tangible if any other product.
	Type *string `json:"type,omitempty"`
}

// NewConnectionOptionsForterAntiFraudBasicItemData instantiates a new ConnectionOptionsForterAntiFraudBasicItemData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptionsForterAntiFraudBasicItemData() *ConnectionOptionsForterAntiFraudBasicItemData {
	this := ConnectionOptionsForterAntiFraudBasicItemData{}
	return &this
}

// NewConnectionOptionsForterAntiFraudBasicItemDataWithDefaults instantiates a new ConnectionOptionsForterAntiFraudBasicItemData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsForterAntiFraudBasicItemDataWithDefaults() *ConnectionOptionsForterAntiFraudBasicItemData {
	this := ConnectionOptionsForterAntiFraudBasicItemData{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ConnectionOptionsForterAntiFraudBasicItemData) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionOptionsForterAntiFraudBasicItemData) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudBasicItemData) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ConnectionOptionsForterAntiFraudBasicItemData) SetType(v string) {
	o.Type = &v
}

func (o ConnectionOptionsForterAntiFraudBasicItemData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptionsForterAntiFraudBasicItemData struct {
	value *ConnectionOptionsForterAntiFraudBasicItemData
	isSet bool
}

func (v NullableConnectionOptionsForterAntiFraudBasicItemData) Get() *ConnectionOptionsForterAntiFraudBasicItemData {
	return v.value
}

func (v *NullableConnectionOptionsForterAntiFraudBasicItemData) Set(val *ConnectionOptionsForterAntiFraudBasicItemData) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptionsForterAntiFraudBasicItemData) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptionsForterAntiFraudBasicItemData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptionsForterAntiFraudBasicItemData(val *ConnectionOptionsForterAntiFraudBasicItemData) *NullableConnectionOptionsForterAntiFraudBasicItemData {
	return &NullableConnectionOptionsForterAntiFraudBasicItemData{value: val, isSet: true}
}

func (v NullableConnectionOptionsForterAntiFraudBasicItemData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptionsForterAntiFraudBasicItemData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


