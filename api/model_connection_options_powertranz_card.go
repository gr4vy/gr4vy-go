/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptionsPowertranzCard Additional options to be passed through to Powertranz when processing transactions.
type ConnectionOptionsPowertranzCard struct {
	// Allows skipping of 3DS. Without this, every transaction will be sent via Powertranz's 3DS server, even though 3DS might not be triggered.
	SkipThreeDSecure *bool `json:"skipThreeDSecure,omitempty"`
}

// NewConnectionOptionsPowertranzCard instantiates a new ConnectionOptionsPowertranzCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptionsPowertranzCard() *ConnectionOptionsPowertranzCard {
	this := ConnectionOptionsPowertranzCard{}
	var skipThreeDSecure bool = false
	this.SkipThreeDSecure = &skipThreeDSecure
	return &this
}

// NewConnectionOptionsPowertranzCardWithDefaults instantiates a new ConnectionOptionsPowertranzCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsPowertranzCardWithDefaults() *ConnectionOptionsPowertranzCard {
	this := ConnectionOptionsPowertranzCard{}
	var skipThreeDSecure bool = false
	this.SkipThreeDSecure = &skipThreeDSecure
	return &this
}

// GetSkipThreeDSecure returns the SkipThreeDSecure field value if set, zero value otherwise.
func (o *ConnectionOptionsPowertranzCard) GetSkipThreeDSecure() bool {
	if o == nil || o.SkipThreeDSecure == nil {
		var ret bool
		return ret
	}
	return *o.SkipThreeDSecure
}

// GetSkipThreeDSecureOk returns a tuple with the SkipThreeDSecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionOptionsPowertranzCard) GetSkipThreeDSecureOk() (*bool, bool) {
	if o == nil || o.SkipThreeDSecure == nil {
		return nil, false
	}
	return o.SkipThreeDSecure, true
}

// HasSkipThreeDSecure returns a boolean if a field has been set.
func (o *ConnectionOptionsPowertranzCard) HasSkipThreeDSecure() bool {
	if o != nil && o.SkipThreeDSecure != nil {
		return true
	}

	return false
}

// SetSkipThreeDSecure gets a reference to the given bool and assigns it to the SkipThreeDSecure field.
func (o *ConnectionOptionsPowertranzCard) SetSkipThreeDSecure(v bool) {
	o.SkipThreeDSecure = &v
}

func (o ConnectionOptionsPowertranzCard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SkipThreeDSecure != nil {
		toSerialize["skipThreeDSecure"] = o.SkipThreeDSecure
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptionsPowertranzCard struct {
	value *ConnectionOptionsPowertranzCard
	isSet bool
}

func (v NullableConnectionOptionsPowertranzCard) Get() *ConnectionOptionsPowertranzCard {
	return v.value
}

func (v *NullableConnectionOptionsPowertranzCard) Set(val *ConnectionOptionsPowertranzCard) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptionsPowertranzCard) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptionsPowertranzCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptionsPowertranzCard(val *ConnectionOptionsPowertranzCard) *NullableConnectionOptionsPowertranzCard {
	return &NullableConnectionOptionsPowertranzCard{value: val, isSet: true}
}

func (v NullableConnectionOptionsPowertranzCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptionsPowertranzCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


