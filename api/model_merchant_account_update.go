/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// MerchantAccountUpdate A request to update a merchant account.
type MerchantAccountUpdate struct {
	// The human-readable name of the merchant account.
	DisplayName *string `json:"display_name,omitempty"`
}

// NewMerchantAccountUpdate instantiates a new MerchantAccountUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantAccountUpdate() *MerchantAccountUpdate {
	this := MerchantAccountUpdate{}
	return &this
}

// NewMerchantAccountUpdateWithDefaults instantiates a new MerchantAccountUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantAccountUpdateWithDefaults() *MerchantAccountUpdate {
	this := MerchantAccountUpdate{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MerchantAccountUpdate) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MerchantAccountUpdate) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MerchantAccountUpdate) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MerchantAccountUpdate) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o MerchantAccountUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	return json.Marshal(toSerialize)
}

type NullableMerchantAccountUpdate struct {
	value *MerchantAccountUpdate
	isSet bool
}

func (v NullableMerchantAccountUpdate) Get() *MerchantAccountUpdate {
	return v.value
}

func (v *NullableMerchantAccountUpdate) Set(val *MerchantAccountUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantAccountUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantAccountUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantAccountUpdate(val *MerchantAccountUpdate) *NullableMerchantAccountUpdate {
	return &NullableMerchantAccountUpdate{value: val, isSet: true}
}

func (v NullableMerchantAccountUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantAccountUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


