/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ThreeDSecureDataV2AllOf struct for ThreeDSecureDataV2AllOf
type ThreeDSecureDataV2AllOf struct {
	// The transaction status from the challenge result (not required for frictionless).
	AuthenticationResponse *string `json:"authentication_response,omitempty"`
	// The transaction identifier.
	DirectoryTransactionId string `json:"directory_transaction_id"`
}

// NewThreeDSecureDataV2AllOf instantiates a new ThreeDSecureDataV2AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreeDSecureDataV2AllOf(directoryTransactionId string) *ThreeDSecureDataV2AllOf {
	this := ThreeDSecureDataV2AllOf{}
	this.DirectoryTransactionId = directoryTransactionId
	return &this
}

// NewThreeDSecureDataV2AllOfWithDefaults instantiates a new ThreeDSecureDataV2AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreeDSecureDataV2AllOfWithDefaults() *ThreeDSecureDataV2AllOf {
	this := ThreeDSecureDataV2AllOf{}
	return &this
}

// GetAuthenticationResponse returns the AuthenticationResponse field value if set, zero value otherwise.
func (o *ThreeDSecureDataV2AllOf) GetAuthenticationResponse() string {
	if o == nil || o.AuthenticationResponse == nil {
		var ret string
		return ret
	}
	return *o.AuthenticationResponse
}

// GetAuthenticationResponseOk returns a tuple with the AuthenticationResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV2AllOf) GetAuthenticationResponseOk() (*string, bool) {
	if o == nil || o.AuthenticationResponse == nil {
		return nil, false
	}
	return o.AuthenticationResponse, true
}

// HasAuthenticationResponse returns a boolean if a field has been set.
func (o *ThreeDSecureDataV2AllOf) HasAuthenticationResponse() bool {
	if o != nil && o.AuthenticationResponse != nil {
		return true
	}

	return false
}

// SetAuthenticationResponse gets a reference to the given string and assigns it to the AuthenticationResponse field.
func (o *ThreeDSecureDataV2AllOf) SetAuthenticationResponse(v string) {
	o.AuthenticationResponse = &v
}

// GetDirectoryTransactionId returns the DirectoryTransactionId field value
func (o *ThreeDSecureDataV2AllOf) GetDirectoryTransactionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DirectoryTransactionId
}

// GetDirectoryTransactionIdOk returns a tuple with the DirectoryTransactionId field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV2AllOf) GetDirectoryTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DirectoryTransactionId, true
}

// SetDirectoryTransactionId sets field value
func (o *ThreeDSecureDataV2AllOf) SetDirectoryTransactionId(v string) {
	o.DirectoryTransactionId = v
}

func (o ThreeDSecureDataV2AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthenticationResponse != nil {
		toSerialize["authentication_response"] = o.AuthenticationResponse
	}
	if true {
		toSerialize["directory_transaction_id"] = o.DirectoryTransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableThreeDSecureDataV2AllOf struct {
	value *ThreeDSecureDataV2AllOf
	isSet bool
}

func (v NullableThreeDSecureDataV2AllOf) Get() *ThreeDSecureDataV2AllOf {
	return v.value
}

func (v *NullableThreeDSecureDataV2AllOf) Set(val *ThreeDSecureDataV2AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableThreeDSecureDataV2AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableThreeDSecureDataV2AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreeDSecureDataV2AllOf(val *ThreeDSecureDataV2AllOf) *NullableThreeDSecureDataV2AllOf {
	return &NullableThreeDSecureDataV2AllOf{value: val, isSet: true}
}

func (v NullableThreeDSecureDataV2AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreeDSecureDataV2AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


