/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// NetworkTokenCryptogramProvisionSucceededContext Additional context for this event.
type NetworkTokenCryptogramProvisionSucceededContext struct {
	// The endpoint for the request.
	Url *string `json:"url,omitempty"`
	// The HTTP body sent to the Network Token provider.
	Request *string `json:"request,omitempty"`
	// The HTTP body received from the Network Token provider.
	Response *string `json:"response,omitempty"`
	// The HTTP response status code from the Network Token provider.
	ResponseStatusCode *float32 `json:"response_status_code,omitempty"`
}

// NewNetworkTokenCryptogramProvisionSucceededContext instantiates a new NetworkTokenCryptogramProvisionSucceededContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkTokenCryptogramProvisionSucceededContext() *NetworkTokenCryptogramProvisionSucceededContext {
	this := NetworkTokenCryptogramProvisionSucceededContext{}
	return &this
}

// NewNetworkTokenCryptogramProvisionSucceededContextWithDefaults instantiates a new NetworkTokenCryptogramProvisionSucceededContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkTokenCryptogramProvisionSucceededContextWithDefaults() *NetworkTokenCryptogramProvisionSucceededContext {
	this := NetworkTokenCryptogramProvisionSucceededContext{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *NetworkTokenCryptogramProvisionSucceededContext) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTokenCryptogramProvisionSucceededContext) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *NetworkTokenCryptogramProvisionSucceededContext) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *NetworkTokenCryptogramProvisionSucceededContext) SetUrl(v string) {
	o.Url = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *NetworkTokenCryptogramProvisionSucceededContext) GetRequest() string {
	if o == nil || o.Request == nil {
		var ret string
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTokenCryptogramProvisionSucceededContext) GetRequestOk() (*string, bool) {
	if o == nil || o.Request == nil {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *NetworkTokenCryptogramProvisionSucceededContext) HasRequest() bool {
	if o != nil && o.Request != nil {
		return true
	}

	return false
}

// SetRequest gets a reference to the given string and assigns it to the Request field.
func (o *NetworkTokenCryptogramProvisionSucceededContext) SetRequest(v string) {
	o.Request = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *NetworkTokenCryptogramProvisionSucceededContext) GetResponse() string {
	if o == nil || o.Response == nil {
		var ret string
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTokenCryptogramProvisionSucceededContext) GetResponseOk() (*string, bool) {
	if o == nil || o.Response == nil {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *NetworkTokenCryptogramProvisionSucceededContext) HasResponse() bool {
	if o != nil && o.Response != nil {
		return true
	}

	return false
}

// SetResponse gets a reference to the given string and assigns it to the Response field.
func (o *NetworkTokenCryptogramProvisionSucceededContext) SetResponse(v string) {
	o.Response = &v
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise.
func (o *NetworkTokenCryptogramProvisionSucceededContext) GetResponseStatusCode() float32 {
	if o == nil || o.ResponseStatusCode == nil {
		var ret float32
		return ret
	}
	return *o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTokenCryptogramProvisionSucceededContext) GetResponseStatusCodeOk() (*float32, bool) {
	if o == nil || o.ResponseStatusCode == nil {
		return nil, false
	}
	return o.ResponseStatusCode, true
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *NetworkTokenCryptogramProvisionSucceededContext) HasResponseStatusCode() bool {
	if o != nil && o.ResponseStatusCode != nil {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given float32 and assigns it to the ResponseStatusCode field.
func (o *NetworkTokenCryptogramProvisionSucceededContext) SetResponseStatusCode(v float32) {
	o.ResponseStatusCode = &v
}

func (o NetworkTokenCryptogramProvisionSucceededContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Request != nil {
		toSerialize["request"] = o.Request
	}
	if o.Response != nil {
		toSerialize["response"] = o.Response
	}
	if o.ResponseStatusCode != nil {
		toSerialize["response_status_code"] = o.ResponseStatusCode
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkTokenCryptogramProvisionSucceededContext struct {
	value *NetworkTokenCryptogramProvisionSucceededContext
	isSet bool
}

func (v NullableNetworkTokenCryptogramProvisionSucceededContext) Get() *NetworkTokenCryptogramProvisionSucceededContext {
	return v.value
}

func (v *NullableNetworkTokenCryptogramProvisionSucceededContext) Set(val *NetworkTokenCryptogramProvisionSucceededContext) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkTokenCryptogramProvisionSucceededContext) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkTokenCryptogramProvisionSucceededContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkTokenCryptogramProvisionSucceededContext(val *NetworkTokenCryptogramProvisionSucceededContext) *NullableNetworkTokenCryptogramProvisionSucceededContext {
	return &NullableNetworkTokenCryptogramProvisionSucceededContext{value: val, isSet: true}
}

func (v NullableNetworkTokenCryptogramProvisionSucceededContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkTokenCryptogramProvisionSucceededContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


