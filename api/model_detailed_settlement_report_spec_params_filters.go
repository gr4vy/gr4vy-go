/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// DetailedSettlementReportSpecParamsFilters The filters for the report.
type DetailedSettlementReportSpecParamsFilters struct {
	IngestedAt *DetailedSettlementReportSpecParamsFiltersIngestedAt `json:"ingested_at,omitempty"`
}

// NewDetailedSettlementReportSpecParamsFilters instantiates a new DetailedSettlementReportSpecParamsFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailedSettlementReportSpecParamsFilters() *DetailedSettlementReportSpecParamsFilters {
	this := DetailedSettlementReportSpecParamsFilters{}
	return &this
}

// NewDetailedSettlementReportSpecParamsFiltersWithDefaults instantiates a new DetailedSettlementReportSpecParamsFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailedSettlementReportSpecParamsFiltersWithDefaults() *DetailedSettlementReportSpecParamsFilters {
	this := DetailedSettlementReportSpecParamsFilters{}
	return &this
}

// GetIngestedAt returns the IngestedAt field value if set, zero value otherwise.
func (o *DetailedSettlementReportSpecParamsFilters) GetIngestedAt() DetailedSettlementReportSpecParamsFiltersIngestedAt {
	if o == nil || o.IngestedAt == nil {
		var ret DetailedSettlementReportSpecParamsFiltersIngestedAt
		return ret
	}
	return *o.IngestedAt
}

// GetIngestedAtOk returns a tuple with the IngestedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedSettlementReportSpecParamsFilters) GetIngestedAtOk() (*DetailedSettlementReportSpecParamsFiltersIngestedAt, bool) {
	if o == nil || o.IngestedAt == nil {
		return nil, false
	}
	return o.IngestedAt, true
}

// HasIngestedAt returns a boolean if a field has been set.
func (o *DetailedSettlementReportSpecParamsFilters) HasIngestedAt() bool {
	if o != nil && o.IngestedAt != nil {
		return true
	}

	return false
}

// SetIngestedAt gets a reference to the given DetailedSettlementReportSpecParamsFiltersIngestedAt and assigns it to the IngestedAt field.
func (o *DetailedSettlementReportSpecParamsFilters) SetIngestedAt(v DetailedSettlementReportSpecParamsFiltersIngestedAt) {
	o.IngestedAt = &v
}

func (o DetailedSettlementReportSpecParamsFilters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IngestedAt != nil {
		toSerialize["ingested_at"] = o.IngestedAt
	}
	return json.Marshal(toSerialize)
}

type NullableDetailedSettlementReportSpecParamsFilters struct {
	value *DetailedSettlementReportSpecParamsFilters
	isSet bool
}

func (v NullableDetailedSettlementReportSpecParamsFilters) Get() *DetailedSettlementReportSpecParamsFilters {
	return v.value
}

func (v *NullableDetailedSettlementReportSpecParamsFilters) Set(val *DetailedSettlementReportSpecParamsFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailedSettlementReportSpecParamsFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailedSettlementReportSpecParamsFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailedSettlementReportSpecParamsFilters(val *DetailedSettlementReportSpecParamsFilters) *NullableDetailedSettlementReportSpecParamsFilters {
	return &NullableDetailedSettlementReportSpecParamsFilters{value: val, isSet: true}
}

func (v NullableDetailedSettlementReportSpecParamsFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailedSettlementReportSpecParamsFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


