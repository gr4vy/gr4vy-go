/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// WebhookSubscription struct for WebhookSubscription
type WebhookSubscription struct {
	// `webhook-subscription`.
	Type *string `json:"type,omitempty"`
	// The unique Gr4vy ID for this webhook subscription.
	Id *string `json:"id,omitempty"`
	// The unique ID for a merchant account.
	MerchantAccountId NullableString `json:"merchant_account_id,omitempty"`
	// Defines if this subscription is currently active or not. When deactivated, webhook events are not sent to the endpoint configured for this subscription.
	Active *bool `json:"active,omitempty"`
	// The URL of the endpoint to deliver webhook events to.
	Url *string `json:"url,omitempty"`
	Authentication NullableWebhookSubscriptionAuthentication `json:"authentication,omitempty"`
}

// NewWebhookSubscription instantiates a new WebhookSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSubscription() *WebhookSubscription {
	this := WebhookSubscription{}
	return &this
}

// NewWebhookSubscriptionWithDefaults instantiates a new WebhookSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSubscriptionWithDefaults() *WebhookSubscription {
	this := WebhookSubscription{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WebhookSubscription) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WebhookSubscription) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WebhookSubscription) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhookSubscription) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhookSubscription) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebhookSubscription) SetId(v string) {
	o.Id = &v
}

// GetMerchantAccountId returns the MerchantAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookSubscription) GetMerchantAccountId() string {
	if o == nil || o.MerchantAccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantAccountId.Get()
}

// GetMerchantAccountIdOk returns a tuple with the MerchantAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookSubscription) GetMerchantAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantAccountId.Get(), o.MerchantAccountId.IsSet()
}

// HasMerchantAccountId returns a boolean if a field has been set.
func (o *WebhookSubscription) HasMerchantAccountId() bool {
	if o != nil && o.MerchantAccountId.IsSet() {
		return true
	}

	return false
}

// SetMerchantAccountId gets a reference to the given NullableString and assigns it to the MerchantAccountId field.
func (o *WebhookSubscription) SetMerchantAccountId(v string) {
	o.MerchantAccountId.Set(&v)
}
// SetMerchantAccountIdNil sets the value for MerchantAccountId to be an explicit nil
func (o *WebhookSubscription) SetMerchantAccountIdNil() {
	o.MerchantAccountId.Set(nil)
}

// UnsetMerchantAccountId ensures that no value is present for MerchantAccountId, not even an explicit nil
func (o *WebhookSubscription) UnsetMerchantAccountId() {
	o.MerchantAccountId.Unset()
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *WebhookSubscription) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *WebhookSubscription) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *WebhookSubscription) SetActive(v bool) {
	o.Active = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WebhookSubscription) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscription) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WebhookSubscription) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WebhookSubscription) SetUrl(v string) {
	o.Url = &v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookSubscription) GetAuthentication() WebhookSubscriptionAuthentication {
	if o == nil || o.Authentication.Get() == nil {
		var ret WebhookSubscriptionAuthentication
		return ret
	}
	return *o.Authentication.Get()
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookSubscription) GetAuthenticationOk() (*WebhookSubscriptionAuthentication, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Authentication.Get(), o.Authentication.IsSet()
}

// HasAuthentication returns a boolean if a field has been set.
func (o *WebhookSubscription) HasAuthentication() bool {
	if o != nil && o.Authentication.IsSet() {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given NullableWebhookSubscriptionAuthentication and assigns it to the Authentication field.
func (o *WebhookSubscription) SetAuthentication(v WebhookSubscriptionAuthentication) {
	o.Authentication.Set(&v)
}
// SetAuthenticationNil sets the value for Authentication to be an explicit nil
func (o *WebhookSubscription) SetAuthenticationNil() {
	o.Authentication.Set(nil)
}

// UnsetAuthentication ensures that no value is present for Authentication, not even an explicit nil
func (o *WebhookSubscription) UnsetAuthentication() {
	o.Authentication.Unset()
}

func (o WebhookSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MerchantAccountId.IsSet() {
		toSerialize["merchant_account_id"] = o.MerchantAccountId.Get()
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Authentication.IsSet() {
		toSerialize["authentication"] = o.Authentication.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookSubscription struct {
	value *WebhookSubscription
	isSet bool
}

func (v NullableWebhookSubscription) Get() *WebhookSubscription {
	return v.value
}

func (v *NullableWebhookSubscription) Set(val *WebhookSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSubscription(val *WebhookSubscription) *NullableWebhookSubscription {
	return &NullableWebhookSubscription{value: val, isSet: true}
}

func (v NullableWebhookSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


