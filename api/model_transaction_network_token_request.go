/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// TransactionNetworkTokenRequest Details for a Network Token payment method.
type TransactionNetworkTokenRequest struct {
	// `network-token`.
	Method string `json:"method"`
	// The value of the network token.
	Token string `json:"token"`
	// The expiration date of the network token, formatted `MM/YY`.
	ExpirationDate string `json:"expiration_date"`
	// The ecommerce indicator.
	Eci *string `json:"eci,omitempty"`
	// The cryptogram of the network token.
	Cryptogram NullableString `json:"cryptogram,omitempty"`
	// We strongly recommend providing a `redirect_url` either when 3-D Secure is enabled and `three_d_secure_data` is not provided, or when using connections where 3DS is enabled. This value will be appended with both a transaction ID and status (e.g. `https://example.com/callback?gr4vy_transaction_id=123 &gr4vy_transaction_status=capture_succeeded`) after 3-D Secure has completed. For those cases, if the value is not present, the transaction will be marked as failed.
	RedirectUrl NullableString `json:"redirect_url,omitempty"`
}

// NewTransactionNetworkTokenRequest instantiates a new TransactionNetworkTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionNetworkTokenRequest(method string, token string, expirationDate string) *TransactionNetworkTokenRequest {
	this := TransactionNetworkTokenRequest{}
	this.Method = method
	this.Token = token
	this.ExpirationDate = expirationDate
	return &this
}

// NewTransactionNetworkTokenRequestWithDefaults instantiates a new TransactionNetworkTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionNetworkTokenRequestWithDefaults() *TransactionNetworkTokenRequest {
	this := TransactionNetworkTokenRequest{}
	return &this
}

// GetMethod returns the Method field value
func (o *TransactionNetworkTokenRequest) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *TransactionNetworkTokenRequest) GetMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *TransactionNetworkTokenRequest) SetMethod(v string) {
	o.Method = v
}

// GetToken returns the Token field value
func (o *TransactionNetworkTokenRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *TransactionNetworkTokenRequest) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *TransactionNetworkTokenRequest) SetToken(v string) {
	o.Token = v
}

// GetExpirationDate returns the ExpirationDate field value
func (o *TransactionNetworkTokenRequest) GetExpirationDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value
// and a boolean to check if the value has been set.
func (o *TransactionNetworkTokenRequest) GetExpirationDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ExpirationDate, true
}

// SetExpirationDate sets field value
func (o *TransactionNetworkTokenRequest) SetExpirationDate(v string) {
	o.ExpirationDate = v
}

// GetEci returns the Eci field value if set, zero value otherwise.
func (o *TransactionNetworkTokenRequest) GetEci() string {
	if o == nil || o.Eci == nil {
		var ret string
		return ret
	}
	return *o.Eci
}

// GetEciOk returns a tuple with the Eci field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionNetworkTokenRequest) GetEciOk() (*string, bool) {
	if o == nil || o.Eci == nil {
		return nil, false
	}
	return o.Eci, true
}

// HasEci returns a boolean if a field has been set.
func (o *TransactionNetworkTokenRequest) HasEci() bool {
	if o != nil && o.Eci != nil {
		return true
	}

	return false
}

// SetEci gets a reference to the given string and assigns it to the Eci field.
func (o *TransactionNetworkTokenRequest) SetEci(v string) {
	o.Eci = &v
}

// GetCryptogram returns the Cryptogram field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionNetworkTokenRequest) GetCryptogram() string {
	if o == nil || o.Cryptogram.Get() == nil {
		var ret string
		return ret
	}
	return *o.Cryptogram.Get()
}

// GetCryptogramOk returns a tuple with the Cryptogram field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionNetworkTokenRequest) GetCryptogramOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Cryptogram.Get(), o.Cryptogram.IsSet()
}

// HasCryptogram returns a boolean if a field has been set.
func (o *TransactionNetworkTokenRequest) HasCryptogram() bool {
	if o != nil && o.Cryptogram.IsSet() {
		return true
	}

	return false
}

// SetCryptogram gets a reference to the given NullableString and assigns it to the Cryptogram field.
func (o *TransactionNetworkTokenRequest) SetCryptogram(v string) {
	o.Cryptogram.Set(&v)
}
// SetCryptogramNil sets the value for Cryptogram to be an explicit nil
func (o *TransactionNetworkTokenRequest) SetCryptogramNil() {
	o.Cryptogram.Set(nil)
}

// UnsetCryptogram ensures that no value is present for Cryptogram, not even an explicit nil
func (o *TransactionNetworkTokenRequest) UnsetCryptogram() {
	o.Cryptogram.Unset()
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionNetworkTokenRequest) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl.Get()
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionNetworkTokenRequest) GetRedirectUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RedirectUrl.Get(), o.RedirectUrl.IsSet()
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *TransactionNetworkTokenRequest) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl.IsSet() {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given NullableString and assigns it to the RedirectUrl field.
func (o *TransactionNetworkTokenRequest) SetRedirectUrl(v string) {
	o.RedirectUrl.Set(&v)
}
// SetRedirectUrlNil sets the value for RedirectUrl to be an explicit nil
func (o *TransactionNetworkTokenRequest) SetRedirectUrlNil() {
	o.RedirectUrl.Set(nil)
}

// UnsetRedirectUrl ensures that no value is present for RedirectUrl, not even an explicit nil
func (o *TransactionNetworkTokenRequest) UnsetRedirectUrl() {
	o.RedirectUrl.Unset()
}

func (o TransactionNetworkTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["method"] = o.Method
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["expiration_date"] = o.ExpirationDate
	}
	if o.Eci != nil {
		toSerialize["eci"] = o.Eci
	}
	if o.Cryptogram.IsSet() {
		toSerialize["cryptogram"] = o.Cryptogram.Get()
	}
	if o.RedirectUrl.IsSet() {
		toSerialize["redirect_url"] = o.RedirectUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionNetworkTokenRequest struct {
	value *TransactionNetworkTokenRequest
	isSet bool
}

func (v NullableTransactionNetworkTokenRequest) Get() *TransactionNetworkTokenRequest {
	return v.value
}

func (v *NullableTransactionNetworkTokenRequest) Set(val *TransactionNetworkTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionNetworkTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionNetworkTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionNetworkTokenRequest(val *TransactionNetworkTokenRequest) *NullableTransactionNetworkTokenRequest {
	return &NullableTransactionNetworkTokenRequest{value: val, isSet: true}
}

func (v NullableTransactionNetworkTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionNetworkTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


