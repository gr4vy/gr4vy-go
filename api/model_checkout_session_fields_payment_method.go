/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// CheckoutSessionFieldsPaymentMethod Details to store a new payment method.
type CheckoutSessionFieldsPaymentMethod struct {
	// `card`.
	Method string `json:"method"`
	// The 13-19 digit number for this card as it can be found on the front of the card.
	Number *string `json:"number,omitempty"`
	// The expiration date of the card, formatted `MM/YY`.
	ExpirationDate *string `json:"expiration_date,omitempty"`
	// The 3 or 4 digit security code often found on the card. This often referred to as the CVV or CVD.  The security code can only be set if the stored payment method represents a card.
	SecurityCode *string `json:"security_code,omitempty"`
}

// NewCheckoutSessionFieldsPaymentMethod instantiates a new CheckoutSessionFieldsPaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckoutSessionFieldsPaymentMethod(method string) *CheckoutSessionFieldsPaymentMethod {
	this := CheckoutSessionFieldsPaymentMethod{}
	this.Method = method
	return &this
}

// NewCheckoutSessionFieldsPaymentMethodWithDefaults instantiates a new CheckoutSessionFieldsPaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckoutSessionFieldsPaymentMethodWithDefaults() *CheckoutSessionFieldsPaymentMethod {
	this := CheckoutSessionFieldsPaymentMethod{}
	return &this
}

// GetMethod returns the Method field value
func (o *CheckoutSessionFieldsPaymentMethod) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *CheckoutSessionFieldsPaymentMethod) GetMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *CheckoutSessionFieldsPaymentMethod) SetMethod(v string) {
	o.Method = v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *CheckoutSessionFieldsPaymentMethod) GetNumber() string {
	if o == nil || o.Number == nil {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckoutSessionFieldsPaymentMethod) GetNumberOk() (*string, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *CheckoutSessionFieldsPaymentMethod) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *CheckoutSessionFieldsPaymentMethod) SetNumber(v string) {
	o.Number = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *CheckoutSessionFieldsPaymentMethod) GetExpirationDate() string {
	if o == nil || o.ExpirationDate == nil {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckoutSessionFieldsPaymentMethod) GetExpirationDateOk() (*string, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *CheckoutSessionFieldsPaymentMethod) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *CheckoutSessionFieldsPaymentMethod) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetSecurityCode returns the SecurityCode field value if set, zero value otherwise.
func (o *CheckoutSessionFieldsPaymentMethod) GetSecurityCode() string {
	if o == nil || o.SecurityCode == nil {
		var ret string
		return ret
	}
	return *o.SecurityCode
}

// GetSecurityCodeOk returns a tuple with the SecurityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckoutSessionFieldsPaymentMethod) GetSecurityCodeOk() (*string, bool) {
	if o == nil || o.SecurityCode == nil {
		return nil, false
	}
	return o.SecurityCode, true
}

// HasSecurityCode returns a boolean if a field has been set.
func (o *CheckoutSessionFieldsPaymentMethod) HasSecurityCode() bool {
	if o != nil && o.SecurityCode != nil {
		return true
	}

	return false
}

// SetSecurityCode gets a reference to the given string and assigns it to the SecurityCode field.
func (o *CheckoutSessionFieldsPaymentMethod) SetSecurityCode(v string) {
	o.SecurityCode = &v
}

func (o CheckoutSessionFieldsPaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["method"] = o.Method
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.ExpirationDate != nil {
		toSerialize["expiration_date"] = o.ExpirationDate
	}
	if o.SecurityCode != nil {
		toSerialize["security_code"] = o.SecurityCode
	}
	return json.Marshal(toSerialize)
}

type NullableCheckoutSessionFieldsPaymentMethod struct {
	value *CheckoutSessionFieldsPaymentMethod
	isSet bool
}

func (v NullableCheckoutSessionFieldsPaymentMethod) Get() *CheckoutSessionFieldsPaymentMethod {
	return v.value
}

func (v *NullableCheckoutSessionFieldsPaymentMethod) Set(val *CheckoutSessionFieldsPaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckoutSessionFieldsPaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckoutSessionFieldsPaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckoutSessionFieldsPaymentMethod(val *CheckoutSessionFieldsPaymentMethod) *NullableCheckoutSessionFieldsPaymentMethod {
	return &NullableCheckoutSessionFieldsPaymentMethod{value: val, isSet: true}
}

func (v NullableCheckoutSessionFieldsPaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckoutSessionFieldsPaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


