/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// IssueCryptogramRequest Request body for issue a cryptogram for a network token.
type IssueCryptogramRequest struct {
	// Defines if the request is merchant initiated or not.
	MerchantInitiated bool `json:"merchant_initiated"`
}

// NewIssueCryptogramRequest instantiates a new IssueCryptogramRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueCryptogramRequest(merchantInitiated bool) *IssueCryptogramRequest {
	this := IssueCryptogramRequest{}
	this.MerchantInitiated = merchantInitiated
	return &this
}

// NewIssueCryptogramRequestWithDefaults instantiates a new IssueCryptogramRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueCryptogramRequestWithDefaults() *IssueCryptogramRequest {
	this := IssueCryptogramRequest{}
	var merchantInitiated bool = false
	this.MerchantInitiated = merchantInitiated
	return &this
}

// GetMerchantInitiated returns the MerchantInitiated field value
func (o *IssueCryptogramRequest) GetMerchantInitiated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MerchantInitiated
}

// GetMerchantInitiatedOk returns a tuple with the MerchantInitiated field value
// and a boolean to check if the value has been set.
func (o *IssueCryptogramRequest) GetMerchantInitiatedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MerchantInitiated, true
}

// SetMerchantInitiated sets field value
func (o *IssueCryptogramRequest) SetMerchantInitiated(v bool) {
	o.MerchantInitiated = v
}

func (o IssueCryptogramRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["merchant_initiated"] = o.MerchantInitiated
	}
	return json.Marshal(toSerialize)
}

type NullableIssueCryptogramRequest struct {
	value *IssueCryptogramRequest
	isSet bool
}

func (v NullableIssueCryptogramRequest) Get() *IssueCryptogramRequest {
	return v.value
}

func (v *NullableIssueCryptogramRequest) Set(val *IssueCryptogramRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueCryptogramRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueCryptogramRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueCryptogramRequest(val *IssueCryptogramRequest) *NullableIssueCryptogramRequest {
	return &NullableIssueCryptogramRequest{value: val, isSet: true}
}

func (v NullableIssueCryptogramRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueCryptogramRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


