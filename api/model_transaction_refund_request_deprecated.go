/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// TransactionRefundRequestDeprecated A request to refund a transaction.
type TransactionRefundRequestDeprecated struct {
	// The (partial) amount to refund.  When omitted blank, this will refund the entire amount.
	Amount *int32 `json:"amount,omitempty"`
}

// NewTransactionRefundRequestDeprecated instantiates a new TransactionRefundRequestDeprecated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionRefundRequestDeprecated() *TransactionRefundRequestDeprecated {
	this := TransactionRefundRequestDeprecated{}
	return &this
}

// NewTransactionRefundRequestDeprecatedWithDefaults instantiates a new TransactionRefundRequestDeprecated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionRefundRequestDeprecatedWithDefaults() *TransactionRefundRequestDeprecated {
	this := TransactionRefundRequestDeprecated{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TransactionRefundRequestDeprecated) GetAmount() int32 {
	if o == nil || o.Amount == nil {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionRefundRequestDeprecated) GetAmountOk() (*int32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TransactionRefundRequestDeprecated) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *TransactionRefundRequestDeprecated) SetAmount(v int32) {
	o.Amount = &v
}

func (o TransactionRefundRequestDeprecated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionRefundRequestDeprecated struct {
	value *TransactionRefundRequestDeprecated
	isSet bool
}

func (v NullableTransactionRefundRequestDeprecated) Get() *TransactionRefundRequestDeprecated {
	return v.value
}

func (v *NullableTransactionRefundRequestDeprecated) Set(val *TransactionRefundRequestDeprecated) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionRefundRequestDeprecated) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionRefundRequestDeprecated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionRefundRequestDeprecated(val *TransactionRefundRequestDeprecated) *NullableTransactionRefundRequestDeprecated {
	return &NullableTransactionRefundRequestDeprecated{value: val, isSet: true}
}

func (v NullableTransactionRefundRequestDeprecated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionRefundRequestDeprecated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


