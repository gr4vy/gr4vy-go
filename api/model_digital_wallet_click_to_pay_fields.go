/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// DigitalWalletClickToPayFields struct for DigitalWalletClickToPayFields
type DigitalWalletClickToPayFields struct {
	// Unique ID assigned for digital payment application.
	DigitalPaymentApplicationId *string `json:"digital_payment_application_id,omitempty"`
	// Name assigned for digital payment application.
	DigitalPaymentApplicationName *string `json:"digital_payment_application_name,omitempty"`
}

// NewDigitalWalletClickToPayFields instantiates a new DigitalWalletClickToPayFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDigitalWalletClickToPayFields() *DigitalWalletClickToPayFields {
	this := DigitalWalletClickToPayFields{}
	return &this
}

// NewDigitalWalletClickToPayFieldsWithDefaults instantiates a new DigitalWalletClickToPayFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDigitalWalletClickToPayFieldsWithDefaults() *DigitalWalletClickToPayFields {
	this := DigitalWalletClickToPayFields{}
	return &this
}

// GetDigitalPaymentApplicationId returns the DigitalPaymentApplicationId field value if set, zero value otherwise.
func (o *DigitalWalletClickToPayFields) GetDigitalPaymentApplicationId() string {
	if o == nil || o.DigitalPaymentApplicationId == nil {
		var ret string
		return ret
	}
	return *o.DigitalPaymentApplicationId
}

// GetDigitalPaymentApplicationIdOk returns a tuple with the DigitalPaymentApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DigitalWalletClickToPayFields) GetDigitalPaymentApplicationIdOk() (*string, bool) {
	if o == nil || o.DigitalPaymentApplicationId == nil {
		return nil, false
	}
	return o.DigitalPaymentApplicationId, true
}

// HasDigitalPaymentApplicationId returns a boolean if a field has been set.
func (o *DigitalWalletClickToPayFields) HasDigitalPaymentApplicationId() bool {
	if o != nil && o.DigitalPaymentApplicationId != nil {
		return true
	}

	return false
}

// SetDigitalPaymentApplicationId gets a reference to the given string and assigns it to the DigitalPaymentApplicationId field.
func (o *DigitalWalletClickToPayFields) SetDigitalPaymentApplicationId(v string) {
	o.DigitalPaymentApplicationId = &v
}

// GetDigitalPaymentApplicationName returns the DigitalPaymentApplicationName field value if set, zero value otherwise.
func (o *DigitalWalletClickToPayFields) GetDigitalPaymentApplicationName() string {
	if o == nil || o.DigitalPaymentApplicationName == nil {
		var ret string
		return ret
	}
	return *o.DigitalPaymentApplicationName
}

// GetDigitalPaymentApplicationNameOk returns a tuple with the DigitalPaymentApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DigitalWalletClickToPayFields) GetDigitalPaymentApplicationNameOk() (*string, bool) {
	if o == nil || o.DigitalPaymentApplicationName == nil {
		return nil, false
	}
	return o.DigitalPaymentApplicationName, true
}

// HasDigitalPaymentApplicationName returns a boolean if a field has been set.
func (o *DigitalWalletClickToPayFields) HasDigitalPaymentApplicationName() bool {
	if o != nil && o.DigitalPaymentApplicationName != nil {
		return true
	}

	return false
}

// SetDigitalPaymentApplicationName gets a reference to the given string and assigns it to the DigitalPaymentApplicationName field.
func (o *DigitalWalletClickToPayFields) SetDigitalPaymentApplicationName(v string) {
	o.DigitalPaymentApplicationName = &v
}

func (o DigitalWalletClickToPayFields) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DigitalPaymentApplicationId != nil {
		toSerialize["digital_payment_application_id"] = o.DigitalPaymentApplicationId
	}
	if o.DigitalPaymentApplicationName != nil {
		toSerialize["digital_payment_application_name"] = o.DigitalPaymentApplicationName
	}
	return json.Marshal(toSerialize)
}

type NullableDigitalWalletClickToPayFields struct {
	value *DigitalWalletClickToPayFields
	isSet bool
}

func (v NullableDigitalWalletClickToPayFields) Get() *DigitalWalletClickToPayFields {
	return v.value
}

func (v *NullableDigitalWalletClickToPayFields) Set(val *DigitalWalletClickToPayFields) {
	v.value = val
	v.isSet = true
}

func (v NullableDigitalWalletClickToPayFields) IsSet() bool {
	return v.isSet
}

func (v *NullableDigitalWalletClickToPayFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDigitalWalletClickToPayFields(val *DigitalWalletClickToPayFields) *NullableDigitalWalletClickToPayFields {
	return &NullableDigitalWalletClickToPayFields{value: val, isSet: true}
}

func (v NullableDigitalWalletClickToPayFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDigitalWalletClickToPayFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


