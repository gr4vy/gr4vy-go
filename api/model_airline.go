/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
	"time"
)

// Airline Information about an airline travel.
type Airline struct {
	// The Passenger Name Record (PNR) in the airline reservation system.
	PassengerNameRecord NullableString `json:"passenger_name_record,omitempty"`
	// The unique identifier of the reservation in the global distribution system.
	BookingCode NullableString `json:"booking_code,omitempty"`
	// The airline's unique ticket number.
	TicketNumber NullableString `json:"ticket_number,omitempty"`
	// The delivery method of the ticket.
	TicketDeliveryMethod NullableString `json:"ticket_delivery_method,omitempty"`
	// The date that the ticket was last issued in the airline reservation system.
	IssuedAt NullableTime `json:"issued_at,omitempty"`
	// The address of the place/agency that issued the ticket.
	IssuedAddress NullableString `json:"issued_address,omitempty"`
	// The IATA travel agency code.
	TravelAgencyCode NullableString `json:"travel_agency_code,omitempty"`
	// The name of the travel agency.
	TravelAgencyName NullableString `json:"travel_agency_name,omitempty"`
	// The reference number of the invoice that was issued by the travel agency.
	TravelAgencyInvoiceNumber NullableString `json:"travel_agency_invoice_number,omitempty"`
	// The name of the travel agency plan.
	TravelAgencyPlanName NullableString `json:"travel_agency_plan_name,omitempty"`
	// Indicates whether the ticket is restricted (refundable).
	RestrictedTicket NullableBool `json:"restricted_ticket,omitempty"`
	// For airline aggregators, two-character IATA code of the airline issuing the ticket.
	IssuingCarrierCode NullableString `json:"issuing_carrier_code,omitempty"`
	// The name of the reservation system.
	ReservationSystem NullableString `json:"reservation_system,omitempty"`
	// An array of the travelling passengers.
	Passengers []AirlinePassenger `json:"passengers,omitempty"`
	// An array of separate trip segments. Each leg contains detailed itinerary information.
	Legs []AirlineLeg `json:"legs,omitempty"`
}

// NewAirline instantiates a new Airline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAirline() *Airline {
	this := Airline{}
	var ticketDeliveryMethod string = "electronic"
	this.TicketDeliveryMethod = *NewNullableString(&ticketDeliveryMethod)
	return &this
}

// NewAirlineWithDefaults instantiates a new Airline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAirlineWithDefaults() *Airline {
	this := Airline{}
	var ticketDeliveryMethod string = "electronic"
	this.TicketDeliveryMethod = *NewNullableString(&ticketDeliveryMethod)
	return &this
}

// GetPassengerNameRecord returns the PassengerNameRecord field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetPassengerNameRecord() string {
	if o == nil || o.PassengerNameRecord.Get() == nil {
		var ret string
		return ret
	}
	return *o.PassengerNameRecord.Get()
}

// GetPassengerNameRecordOk returns a tuple with the PassengerNameRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetPassengerNameRecordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PassengerNameRecord.Get(), o.PassengerNameRecord.IsSet()
}

// HasPassengerNameRecord returns a boolean if a field has been set.
func (o *Airline) HasPassengerNameRecord() bool {
	if o != nil && o.PassengerNameRecord.IsSet() {
		return true
	}

	return false
}

// SetPassengerNameRecord gets a reference to the given NullableString and assigns it to the PassengerNameRecord field.
func (o *Airline) SetPassengerNameRecord(v string) {
	o.PassengerNameRecord.Set(&v)
}
// SetPassengerNameRecordNil sets the value for PassengerNameRecord to be an explicit nil
func (o *Airline) SetPassengerNameRecordNil() {
	o.PassengerNameRecord.Set(nil)
}

// UnsetPassengerNameRecord ensures that no value is present for PassengerNameRecord, not even an explicit nil
func (o *Airline) UnsetPassengerNameRecord() {
	o.PassengerNameRecord.Unset()
}

// GetBookingCode returns the BookingCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetBookingCode() string {
	if o == nil || o.BookingCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.BookingCode.Get()
}

// GetBookingCodeOk returns a tuple with the BookingCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetBookingCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.BookingCode.Get(), o.BookingCode.IsSet()
}

// HasBookingCode returns a boolean if a field has been set.
func (o *Airline) HasBookingCode() bool {
	if o != nil && o.BookingCode.IsSet() {
		return true
	}

	return false
}

// SetBookingCode gets a reference to the given NullableString and assigns it to the BookingCode field.
func (o *Airline) SetBookingCode(v string) {
	o.BookingCode.Set(&v)
}
// SetBookingCodeNil sets the value for BookingCode to be an explicit nil
func (o *Airline) SetBookingCodeNil() {
	o.BookingCode.Set(nil)
}

// UnsetBookingCode ensures that no value is present for BookingCode, not even an explicit nil
func (o *Airline) UnsetBookingCode() {
	o.BookingCode.Unset()
}

// GetTicketNumber returns the TicketNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetTicketNumber() string {
	if o == nil || o.TicketNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.TicketNumber.Get()
}

// GetTicketNumberOk returns a tuple with the TicketNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetTicketNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TicketNumber.Get(), o.TicketNumber.IsSet()
}

// HasTicketNumber returns a boolean if a field has been set.
func (o *Airline) HasTicketNumber() bool {
	if o != nil && o.TicketNumber.IsSet() {
		return true
	}

	return false
}

// SetTicketNumber gets a reference to the given NullableString and assigns it to the TicketNumber field.
func (o *Airline) SetTicketNumber(v string) {
	o.TicketNumber.Set(&v)
}
// SetTicketNumberNil sets the value for TicketNumber to be an explicit nil
func (o *Airline) SetTicketNumberNil() {
	o.TicketNumber.Set(nil)
}

// UnsetTicketNumber ensures that no value is present for TicketNumber, not even an explicit nil
func (o *Airline) UnsetTicketNumber() {
	o.TicketNumber.Unset()
}

// GetTicketDeliveryMethod returns the TicketDeliveryMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetTicketDeliveryMethod() string {
	if o == nil || o.TicketDeliveryMethod.Get() == nil {
		var ret string
		return ret
	}
	return *o.TicketDeliveryMethod.Get()
}

// GetTicketDeliveryMethodOk returns a tuple with the TicketDeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetTicketDeliveryMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TicketDeliveryMethod.Get(), o.TicketDeliveryMethod.IsSet()
}

// HasTicketDeliveryMethod returns a boolean if a field has been set.
func (o *Airline) HasTicketDeliveryMethod() bool {
	if o != nil && o.TicketDeliveryMethod.IsSet() {
		return true
	}

	return false
}

// SetTicketDeliveryMethod gets a reference to the given NullableString and assigns it to the TicketDeliveryMethod field.
func (o *Airline) SetTicketDeliveryMethod(v string) {
	o.TicketDeliveryMethod.Set(&v)
}
// SetTicketDeliveryMethodNil sets the value for TicketDeliveryMethod to be an explicit nil
func (o *Airline) SetTicketDeliveryMethodNil() {
	o.TicketDeliveryMethod.Set(nil)
}

// UnsetTicketDeliveryMethod ensures that no value is present for TicketDeliveryMethod, not even an explicit nil
func (o *Airline) UnsetTicketDeliveryMethod() {
	o.TicketDeliveryMethod.Unset()
}

// GetIssuedAt returns the IssuedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetIssuedAt() time.Time {
	if o == nil || o.IssuedAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.IssuedAt.Get()
}

// GetIssuedAtOk returns a tuple with the IssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetIssuedAtOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IssuedAt.Get(), o.IssuedAt.IsSet()
}

// HasIssuedAt returns a boolean if a field has been set.
func (o *Airline) HasIssuedAt() bool {
	if o != nil && o.IssuedAt.IsSet() {
		return true
	}

	return false
}

// SetIssuedAt gets a reference to the given NullableTime and assigns it to the IssuedAt field.
func (o *Airline) SetIssuedAt(v time.Time) {
	o.IssuedAt.Set(&v)
}
// SetIssuedAtNil sets the value for IssuedAt to be an explicit nil
func (o *Airline) SetIssuedAtNil() {
	o.IssuedAt.Set(nil)
}

// UnsetIssuedAt ensures that no value is present for IssuedAt, not even an explicit nil
func (o *Airline) UnsetIssuedAt() {
	o.IssuedAt.Unset()
}

// GetIssuedAddress returns the IssuedAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetIssuedAddress() string {
	if o == nil || o.IssuedAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.IssuedAddress.Get()
}

// GetIssuedAddressOk returns a tuple with the IssuedAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetIssuedAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IssuedAddress.Get(), o.IssuedAddress.IsSet()
}

// HasIssuedAddress returns a boolean if a field has been set.
func (o *Airline) HasIssuedAddress() bool {
	if o != nil && o.IssuedAddress.IsSet() {
		return true
	}

	return false
}

// SetIssuedAddress gets a reference to the given NullableString and assigns it to the IssuedAddress field.
func (o *Airline) SetIssuedAddress(v string) {
	o.IssuedAddress.Set(&v)
}
// SetIssuedAddressNil sets the value for IssuedAddress to be an explicit nil
func (o *Airline) SetIssuedAddressNil() {
	o.IssuedAddress.Set(nil)
}

// UnsetIssuedAddress ensures that no value is present for IssuedAddress, not even an explicit nil
func (o *Airline) UnsetIssuedAddress() {
	o.IssuedAddress.Unset()
}

// GetTravelAgencyCode returns the TravelAgencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetTravelAgencyCode() string {
	if o == nil || o.TravelAgencyCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.TravelAgencyCode.Get()
}

// GetTravelAgencyCodeOk returns a tuple with the TravelAgencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetTravelAgencyCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TravelAgencyCode.Get(), o.TravelAgencyCode.IsSet()
}

// HasTravelAgencyCode returns a boolean if a field has been set.
func (o *Airline) HasTravelAgencyCode() bool {
	if o != nil && o.TravelAgencyCode.IsSet() {
		return true
	}

	return false
}

// SetTravelAgencyCode gets a reference to the given NullableString and assigns it to the TravelAgencyCode field.
func (o *Airline) SetTravelAgencyCode(v string) {
	o.TravelAgencyCode.Set(&v)
}
// SetTravelAgencyCodeNil sets the value for TravelAgencyCode to be an explicit nil
func (o *Airline) SetTravelAgencyCodeNil() {
	o.TravelAgencyCode.Set(nil)
}

// UnsetTravelAgencyCode ensures that no value is present for TravelAgencyCode, not even an explicit nil
func (o *Airline) UnsetTravelAgencyCode() {
	o.TravelAgencyCode.Unset()
}

// GetTravelAgencyName returns the TravelAgencyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetTravelAgencyName() string {
	if o == nil || o.TravelAgencyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.TravelAgencyName.Get()
}

// GetTravelAgencyNameOk returns a tuple with the TravelAgencyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetTravelAgencyNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TravelAgencyName.Get(), o.TravelAgencyName.IsSet()
}

// HasTravelAgencyName returns a boolean if a field has been set.
func (o *Airline) HasTravelAgencyName() bool {
	if o != nil && o.TravelAgencyName.IsSet() {
		return true
	}

	return false
}

// SetTravelAgencyName gets a reference to the given NullableString and assigns it to the TravelAgencyName field.
func (o *Airline) SetTravelAgencyName(v string) {
	o.TravelAgencyName.Set(&v)
}
// SetTravelAgencyNameNil sets the value for TravelAgencyName to be an explicit nil
func (o *Airline) SetTravelAgencyNameNil() {
	o.TravelAgencyName.Set(nil)
}

// UnsetTravelAgencyName ensures that no value is present for TravelAgencyName, not even an explicit nil
func (o *Airline) UnsetTravelAgencyName() {
	o.TravelAgencyName.Unset()
}

// GetTravelAgencyInvoiceNumber returns the TravelAgencyInvoiceNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetTravelAgencyInvoiceNumber() string {
	if o == nil || o.TravelAgencyInvoiceNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.TravelAgencyInvoiceNumber.Get()
}

// GetTravelAgencyInvoiceNumberOk returns a tuple with the TravelAgencyInvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetTravelAgencyInvoiceNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TravelAgencyInvoiceNumber.Get(), o.TravelAgencyInvoiceNumber.IsSet()
}

// HasTravelAgencyInvoiceNumber returns a boolean if a field has been set.
func (o *Airline) HasTravelAgencyInvoiceNumber() bool {
	if o != nil && o.TravelAgencyInvoiceNumber.IsSet() {
		return true
	}

	return false
}

// SetTravelAgencyInvoiceNumber gets a reference to the given NullableString and assigns it to the TravelAgencyInvoiceNumber field.
func (o *Airline) SetTravelAgencyInvoiceNumber(v string) {
	o.TravelAgencyInvoiceNumber.Set(&v)
}
// SetTravelAgencyInvoiceNumberNil sets the value for TravelAgencyInvoiceNumber to be an explicit nil
func (o *Airline) SetTravelAgencyInvoiceNumberNil() {
	o.TravelAgencyInvoiceNumber.Set(nil)
}

// UnsetTravelAgencyInvoiceNumber ensures that no value is present for TravelAgencyInvoiceNumber, not even an explicit nil
func (o *Airline) UnsetTravelAgencyInvoiceNumber() {
	o.TravelAgencyInvoiceNumber.Unset()
}

// GetTravelAgencyPlanName returns the TravelAgencyPlanName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetTravelAgencyPlanName() string {
	if o == nil || o.TravelAgencyPlanName.Get() == nil {
		var ret string
		return ret
	}
	return *o.TravelAgencyPlanName.Get()
}

// GetTravelAgencyPlanNameOk returns a tuple with the TravelAgencyPlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetTravelAgencyPlanNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TravelAgencyPlanName.Get(), o.TravelAgencyPlanName.IsSet()
}

// HasTravelAgencyPlanName returns a boolean if a field has been set.
func (o *Airline) HasTravelAgencyPlanName() bool {
	if o != nil && o.TravelAgencyPlanName.IsSet() {
		return true
	}

	return false
}

// SetTravelAgencyPlanName gets a reference to the given NullableString and assigns it to the TravelAgencyPlanName field.
func (o *Airline) SetTravelAgencyPlanName(v string) {
	o.TravelAgencyPlanName.Set(&v)
}
// SetTravelAgencyPlanNameNil sets the value for TravelAgencyPlanName to be an explicit nil
func (o *Airline) SetTravelAgencyPlanNameNil() {
	o.TravelAgencyPlanName.Set(nil)
}

// UnsetTravelAgencyPlanName ensures that no value is present for TravelAgencyPlanName, not even an explicit nil
func (o *Airline) UnsetTravelAgencyPlanName() {
	o.TravelAgencyPlanName.Unset()
}

// GetRestrictedTicket returns the RestrictedTicket field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetRestrictedTicket() bool {
	if o == nil || o.RestrictedTicket.Get() == nil {
		var ret bool
		return ret
	}
	return *o.RestrictedTicket.Get()
}

// GetRestrictedTicketOk returns a tuple with the RestrictedTicket field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetRestrictedTicketOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RestrictedTicket.Get(), o.RestrictedTicket.IsSet()
}

// HasRestrictedTicket returns a boolean if a field has been set.
func (o *Airline) HasRestrictedTicket() bool {
	if o != nil && o.RestrictedTicket.IsSet() {
		return true
	}

	return false
}

// SetRestrictedTicket gets a reference to the given NullableBool and assigns it to the RestrictedTicket field.
func (o *Airline) SetRestrictedTicket(v bool) {
	o.RestrictedTicket.Set(&v)
}
// SetRestrictedTicketNil sets the value for RestrictedTicket to be an explicit nil
func (o *Airline) SetRestrictedTicketNil() {
	o.RestrictedTicket.Set(nil)
}

// UnsetRestrictedTicket ensures that no value is present for RestrictedTicket, not even an explicit nil
func (o *Airline) UnsetRestrictedTicket() {
	o.RestrictedTicket.Unset()
}

// GetIssuingCarrierCode returns the IssuingCarrierCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetIssuingCarrierCode() string {
	if o == nil || o.IssuingCarrierCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.IssuingCarrierCode.Get()
}

// GetIssuingCarrierCodeOk returns a tuple with the IssuingCarrierCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetIssuingCarrierCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IssuingCarrierCode.Get(), o.IssuingCarrierCode.IsSet()
}

// HasIssuingCarrierCode returns a boolean if a field has been set.
func (o *Airline) HasIssuingCarrierCode() bool {
	if o != nil && o.IssuingCarrierCode.IsSet() {
		return true
	}

	return false
}

// SetIssuingCarrierCode gets a reference to the given NullableString and assigns it to the IssuingCarrierCode field.
func (o *Airline) SetIssuingCarrierCode(v string) {
	o.IssuingCarrierCode.Set(&v)
}
// SetIssuingCarrierCodeNil sets the value for IssuingCarrierCode to be an explicit nil
func (o *Airline) SetIssuingCarrierCodeNil() {
	o.IssuingCarrierCode.Set(nil)
}

// UnsetIssuingCarrierCode ensures that no value is present for IssuingCarrierCode, not even an explicit nil
func (o *Airline) UnsetIssuingCarrierCode() {
	o.IssuingCarrierCode.Unset()
}

// GetReservationSystem returns the ReservationSystem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetReservationSystem() string {
	if o == nil || o.ReservationSystem.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReservationSystem.Get()
}

// GetReservationSystemOk returns a tuple with the ReservationSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetReservationSystemOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReservationSystem.Get(), o.ReservationSystem.IsSet()
}

// HasReservationSystem returns a boolean if a field has been set.
func (o *Airline) HasReservationSystem() bool {
	if o != nil && o.ReservationSystem.IsSet() {
		return true
	}

	return false
}

// SetReservationSystem gets a reference to the given NullableString and assigns it to the ReservationSystem field.
func (o *Airline) SetReservationSystem(v string) {
	o.ReservationSystem.Set(&v)
}
// SetReservationSystemNil sets the value for ReservationSystem to be an explicit nil
func (o *Airline) SetReservationSystemNil() {
	o.ReservationSystem.Set(nil)
}

// UnsetReservationSystem ensures that no value is present for ReservationSystem, not even an explicit nil
func (o *Airline) UnsetReservationSystem() {
	o.ReservationSystem.Unset()
}

// GetPassengers returns the Passengers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetPassengers() []AirlinePassenger {
	if o == nil  {
		var ret []AirlinePassenger
		return ret
	}
	return o.Passengers
}

// GetPassengersOk returns a tuple with the Passengers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetPassengersOk() (*[]AirlinePassenger, bool) {
	if o == nil || o.Passengers == nil {
		return nil, false
	}
	return &o.Passengers, true
}

// HasPassengers returns a boolean if a field has been set.
func (o *Airline) HasPassengers() bool {
	if o != nil && o.Passengers != nil {
		return true
	}

	return false
}

// SetPassengers gets a reference to the given []AirlinePassenger and assigns it to the Passengers field.
func (o *Airline) SetPassengers(v []AirlinePassenger) {
	o.Passengers = v
}

// GetLegs returns the Legs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Airline) GetLegs() []AirlineLeg {
	if o == nil  {
		var ret []AirlineLeg
		return ret
	}
	return o.Legs
}

// GetLegsOk returns a tuple with the Legs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Airline) GetLegsOk() (*[]AirlineLeg, bool) {
	if o == nil || o.Legs == nil {
		return nil, false
	}
	return &o.Legs, true
}

// HasLegs returns a boolean if a field has been set.
func (o *Airline) HasLegs() bool {
	if o != nil && o.Legs != nil {
		return true
	}

	return false
}

// SetLegs gets a reference to the given []AirlineLeg and assigns it to the Legs field.
func (o *Airline) SetLegs(v []AirlineLeg) {
	o.Legs = v
}

func (o Airline) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PassengerNameRecord.IsSet() {
		toSerialize["passenger_name_record"] = o.PassengerNameRecord.Get()
	}
	if o.BookingCode.IsSet() {
		toSerialize["booking_code"] = o.BookingCode.Get()
	}
	if o.TicketNumber.IsSet() {
		toSerialize["ticket_number"] = o.TicketNumber.Get()
	}
	if o.TicketDeliveryMethod.IsSet() {
		toSerialize["ticket_delivery_method"] = o.TicketDeliveryMethod.Get()
	}
	if o.IssuedAt.IsSet() {
		toSerialize["issued_at"] = o.IssuedAt.Get()
	}
	if o.IssuedAddress.IsSet() {
		toSerialize["issued_address"] = o.IssuedAddress.Get()
	}
	if o.TravelAgencyCode.IsSet() {
		toSerialize["travel_agency_code"] = o.TravelAgencyCode.Get()
	}
	if o.TravelAgencyName.IsSet() {
		toSerialize["travel_agency_name"] = o.TravelAgencyName.Get()
	}
	if o.TravelAgencyInvoiceNumber.IsSet() {
		toSerialize["travel_agency_invoice_number"] = o.TravelAgencyInvoiceNumber.Get()
	}
	if o.TravelAgencyPlanName.IsSet() {
		toSerialize["travel_agency_plan_name"] = o.TravelAgencyPlanName.Get()
	}
	if o.RestrictedTicket.IsSet() {
		toSerialize["restricted_ticket"] = o.RestrictedTicket.Get()
	}
	if o.IssuingCarrierCode.IsSet() {
		toSerialize["issuing_carrier_code"] = o.IssuingCarrierCode.Get()
	}
	if o.ReservationSystem.IsSet() {
		toSerialize["reservation_system"] = o.ReservationSystem.Get()
	}
	if o.Passengers != nil {
		toSerialize["passengers"] = o.Passengers
	}
	if o.Legs != nil {
		toSerialize["legs"] = o.Legs
	}
	return json.Marshal(toSerialize)
}

type NullableAirline struct {
	value *Airline
	isSet bool
}

func (v NullableAirline) Get() *Airline {
	return v.value
}

func (v *NullableAirline) Set(val *Airline) {
	v.value = val
	v.isSet = true
}

func (v NullableAirline) IsSet() bool {
	return v.isSet
}

func (v *NullableAirline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAirline(val *Airline) *NullableAirline {
	return &NullableAirline{value: val, isSet: true}
}

func (v NullableAirline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAirline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


