/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// PaymentConnectorResponseTransactionAuthorizationFailedEventContext Additional context for this event.
type PaymentConnectorResponseTransactionAuthorizationFailedEventContext struct {
	// The unique ID of the payment service used.
	PaymentServiceId *string `json:"payment_service_id,omitempty"`
	// The display name of the payment service used.
	PaymentServiceDisplayName *string `json:"payment_service_display_name,omitempty"`
	// The payment service definition used.
	PaymentServiceDefinitionId *string `json:"payment_service_definition_id,omitempty"`
	// The external ID of the transaction as set by the payment service.
	PaymentServiceTransactionId NullableString `json:"payment_service_transaction_id,omitempty"`
	// The new status code for the transaction. This is always set to `authorization_failed`.
	Status *string `json:"status,omitempty"`
	// A raw response code returned for the failure.
	Code NullableString `json:"code,omitempty"`
	// The type of instrument used for this transaction.
	InstrumentType *string `json:"instrument_type,omitempty"`
	// Defines why the transaction might be retried. A retry is not guaranteed because the maximum number of retries might already have been attempted.  * `failure` - the transaction will be retried because of a failure calling   the payment service. * `retriable_decline` - the transaction will be retried because a decline code   was received that can be retried.
	RetryRule NullableString `json:"retry_rule,omitempty"`
	// This is the response code received from the payment service. This can be set to any value and is not standardized across different payment services.
	RawResponseCode NullableString `json:"raw_response_code,omitempty"`
	// This is the response description received from the payment service. This can be set to any value and is not standardized across different payment services.
	RawResponseDescription NullableString `json:"raw_response_description,omitempty"`
	// The response code received from the payment service for the Address Verification Check (AVS). This code is mapped to a standardized Gr4vy AVS response code.  - `no_match` - neither address or postal code match - `match` - both address and postal code match - `partial_match_address` - address matches but postal code does not - `partial_match_postcode` - postal code matches but address does not - `unavailable ` - AVS is unavailable for card/country  The value of this field can be `null` if the payment service did not provide a response.
	AvsResponseCode NullableString `json:"avs_response_code,omitempty"`
	// The response code received from the payment service for the Card Verification Value (CVV). This code is mapped to a standardized Gr4vy CVV response code.  - `no_match` - the CVV does not match the expected value - `match` - the CVV matches the expected value - `unavailable ` - CVV check unavailable for card our country - `not_provided ` - CVV not provided  The value of this field can be `null` if the payment service did not provide a response.
	CvvResponseCode NullableString `json:"cvv_response_code,omitempty"`
}

// NewPaymentConnectorResponseTransactionAuthorizationFailedEventContext instantiates a new PaymentConnectorResponseTransactionAuthorizationFailedEventContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentConnectorResponseTransactionAuthorizationFailedEventContext() *PaymentConnectorResponseTransactionAuthorizationFailedEventContext {
	this := PaymentConnectorResponseTransactionAuthorizationFailedEventContext{}
	return &this
}

// NewPaymentConnectorResponseTransactionAuthorizationFailedEventContextWithDefaults instantiates a new PaymentConnectorResponseTransactionAuthorizationFailedEventContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentConnectorResponseTransactionAuthorizationFailedEventContextWithDefaults() *PaymentConnectorResponseTransactionAuthorizationFailedEventContext {
	this := PaymentConnectorResponseTransactionAuthorizationFailedEventContext{}
	return &this
}

// GetPaymentServiceId returns the PaymentServiceId field value if set, zero value otherwise.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetPaymentServiceId() string {
	if o == nil || o.PaymentServiceId == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceId
}

// GetPaymentServiceIdOk returns a tuple with the PaymentServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetPaymentServiceIdOk() (*string, bool) {
	if o == nil || o.PaymentServiceId == nil {
		return nil, false
	}
	return o.PaymentServiceId, true
}

// HasPaymentServiceId returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasPaymentServiceId() bool {
	if o != nil && o.PaymentServiceId != nil {
		return true
	}

	return false
}

// SetPaymentServiceId gets a reference to the given string and assigns it to the PaymentServiceId field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetPaymentServiceId(v string) {
	o.PaymentServiceId = &v
}

// GetPaymentServiceDisplayName returns the PaymentServiceDisplayName field value if set, zero value otherwise.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetPaymentServiceDisplayName() string {
	if o == nil || o.PaymentServiceDisplayName == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceDisplayName
}

// GetPaymentServiceDisplayNameOk returns a tuple with the PaymentServiceDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetPaymentServiceDisplayNameOk() (*string, bool) {
	if o == nil || o.PaymentServiceDisplayName == nil {
		return nil, false
	}
	return o.PaymentServiceDisplayName, true
}

// HasPaymentServiceDisplayName returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasPaymentServiceDisplayName() bool {
	if o != nil && o.PaymentServiceDisplayName != nil {
		return true
	}

	return false
}

// SetPaymentServiceDisplayName gets a reference to the given string and assigns it to the PaymentServiceDisplayName field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetPaymentServiceDisplayName(v string) {
	o.PaymentServiceDisplayName = &v
}

// GetPaymentServiceDefinitionId returns the PaymentServiceDefinitionId field value if set, zero value otherwise.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetPaymentServiceDefinitionId() string {
	if o == nil || o.PaymentServiceDefinitionId == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceDefinitionId
}

// GetPaymentServiceDefinitionIdOk returns a tuple with the PaymentServiceDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetPaymentServiceDefinitionIdOk() (*string, bool) {
	if o == nil || o.PaymentServiceDefinitionId == nil {
		return nil, false
	}
	return o.PaymentServiceDefinitionId, true
}

// HasPaymentServiceDefinitionId returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasPaymentServiceDefinitionId() bool {
	if o != nil && o.PaymentServiceDefinitionId != nil {
		return true
	}

	return false
}

// SetPaymentServiceDefinitionId gets a reference to the given string and assigns it to the PaymentServiceDefinitionId field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetPaymentServiceDefinitionId(v string) {
	o.PaymentServiceDefinitionId = &v
}

// GetPaymentServiceTransactionId returns the PaymentServiceTransactionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetPaymentServiceTransactionId() string {
	if o == nil || o.PaymentServiceTransactionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceTransactionId.Get()
}

// GetPaymentServiceTransactionIdOk returns a tuple with the PaymentServiceTransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetPaymentServiceTransactionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PaymentServiceTransactionId.Get(), o.PaymentServiceTransactionId.IsSet()
}

// HasPaymentServiceTransactionId returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasPaymentServiceTransactionId() bool {
	if o != nil && o.PaymentServiceTransactionId.IsSet() {
		return true
	}

	return false
}

// SetPaymentServiceTransactionId gets a reference to the given NullableString and assigns it to the PaymentServiceTransactionId field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetPaymentServiceTransactionId(v string) {
	o.PaymentServiceTransactionId.Set(&v)
}
// SetPaymentServiceTransactionIdNil sets the value for PaymentServiceTransactionId to be an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetPaymentServiceTransactionIdNil() {
	o.PaymentServiceTransactionId.Set(nil)
}

// UnsetPaymentServiceTransactionId ensures that no value is present for PaymentServiceTransactionId, not even an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) UnsetPaymentServiceTransactionId() {
	o.PaymentServiceTransactionId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetStatus(v string) {
	o.Status = &v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetCode() string {
	if o == nil || o.Code.Get() == nil {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) UnsetCode() {
	o.Code.Unset()
}

// GetInstrumentType returns the InstrumentType field value if set, zero value otherwise.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetInstrumentType() string {
	if o == nil || o.InstrumentType == nil {
		var ret string
		return ret
	}
	return *o.InstrumentType
}

// GetInstrumentTypeOk returns a tuple with the InstrumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetInstrumentTypeOk() (*string, bool) {
	if o == nil || o.InstrumentType == nil {
		return nil, false
	}
	return o.InstrumentType, true
}

// HasInstrumentType returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasInstrumentType() bool {
	if o != nil && o.InstrumentType != nil {
		return true
	}

	return false
}

// SetInstrumentType gets a reference to the given string and assigns it to the InstrumentType field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetInstrumentType(v string) {
	o.InstrumentType = &v
}

// GetRetryRule returns the RetryRule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetRetryRule() string {
	if o == nil || o.RetryRule.Get() == nil {
		var ret string
		return ret
	}
	return *o.RetryRule.Get()
}

// GetRetryRuleOk returns a tuple with the RetryRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetRetryRuleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RetryRule.Get(), o.RetryRule.IsSet()
}

// HasRetryRule returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasRetryRule() bool {
	if o != nil && o.RetryRule.IsSet() {
		return true
	}

	return false
}

// SetRetryRule gets a reference to the given NullableString and assigns it to the RetryRule field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetRetryRule(v string) {
	o.RetryRule.Set(&v)
}
// SetRetryRuleNil sets the value for RetryRule to be an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetRetryRuleNil() {
	o.RetryRule.Set(nil)
}

// UnsetRetryRule ensures that no value is present for RetryRule, not even an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) UnsetRetryRule() {
	o.RetryRule.Unset()
}

// GetRawResponseCode returns the RawResponseCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetRawResponseCode() string {
	if o == nil || o.RawResponseCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.RawResponseCode.Get()
}

// GetRawResponseCodeOk returns a tuple with the RawResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetRawResponseCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RawResponseCode.Get(), o.RawResponseCode.IsSet()
}

// HasRawResponseCode returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasRawResponseCode() bool {
	if o != nil && o.RawResponseCode.IsSet() {
		return true
	}

	return false
}

// SetRawResponseCode gets a reference to the given NullableString and assigns it to the RawResponseCode field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetRawResponseCode(v string) {
	o.RawResponseCode.Set(&v)
}
// SetRawResponseCodeNil sets the value for RawResponseCode to be an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetRawResponseCodeNil() {
	o.RawResponseCode.Set(nil)
}

// UnsetRawResponseCode ensures that no value is present for RawResponseCode, not even an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) UnsetRawResponseCode() {
	o.RawResponseCode.Unset()
}

// GetRawResponseDescription returns the RawResponseDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetRawResponseDescription() string {
	if o == nil || o.RawResponseDescription.Get() == nil {
		var ret string
		return ret
	}
	return *o.RawResponseDescription.Get()
}

// GetRawResponseDescriptionOk returns a tuple with the RawResponseDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetRawResponseDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RawResponseDescription.Get(), o.RawResponseDescription.IsSet()
}

// HasRawResponseDescription returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasRawResponseDescription() bool {
	if o != nil && o.RawResponseDescription.IsSet() {
		return true
	}

	return false
}

// SetRawResponseDescription gets a reference to the given NullableString and assigns it to the RawResponseDescription field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetRawResponseDescription(v string) {
	o.RawResponseDescription.Set(&v)
}
// SetRawResponseDescriptionNil sets the value for RawResponseDescription to be an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetRawResponseDescriptionNil() {
	o.RawResponseDescription.Set(nil)
}

// UnsetRawResponseDescription ensures that no value is present for RawResponseDescription, not even an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) UnsetRawResponseDescription() {
	o.RawResponseDescription.Unset()
}

// GetAvsResponseCode returns the AvsResponseCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetAvsResponseCode() string {
	if o == nil || o.AvsResponseCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.AvsResponseCode.Get()
}

// GetAvsResponseCodeOk returns a tuple with the AvsResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetAvsResponseCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AvsResponseCode.Get(), o.AvsResponseCode.IsSet()
}

// HasAvsResponseCode returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasAvsResponseCode() bool {
	if o != nil && o.AvsResponseCode.IsSet() {
		return true
	}

	return false
}

// SetAvsResponseCode gets a reference to the given NullableString and assigns it to the AvsResponseCode field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetAvsResponseCode(v string) {
	o.AvsResponseCode.Set(&v)
}
// SetAvsResponseCodeNil sets the value for AvsResponseCode to be an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetAvsResponseCodeNil() {
	o.AvsResponseCode.Set(nil)
}

// UnsetAvsResponseCode ensures that no value is present for AvsResponseCode, not even an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) UnsetAvsResponseCode() {
	o.AvsResponseCode.Unset()
}

// GetCvvResponseCode returns the CvvResponseCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetCvvResponseCode() string {
	if o == nil || o.CvvResponseCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.CvvResponseCode.Get()
}

// GetCvvResponseCodeOk returns a tuple with the CvvResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) GetCvvResponseCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CvvResponseCode.Get(), o.CvvResponseCode.IsSet()
}

// HasCvvResponseCode returns a boolean if a field has been set.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) HasCvvResponseCode() bool {
	if o != nil && o.CvvResponseCode.IsSet() {
		return true
	}

	return false
}

// SetCvvResponseCode gets a reference to the given NullableString and assigns it to the CvvResponseCode field.
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetCvvResponseCode(v string) {
	o.CvvResponseCode.Set(&v)
}
// SetCvvResponseCodeNil sets the value for CvvResponseCode to be an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) SetCvvResponseCodeNil() {
	o.CvvResponseCode.Set(nil)
}

// UnsetCvvResponseCode ensures that no value is present for CvvResponseCode, not even an explicit nil
func (o *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) UnsetCvvResponseCode() {
	o.CvvResponseCode.Unset()
}

func (o PaymentConnectorResponseTransactionAuthorizationFailedEventContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PaymentServiceId != nil {
		toSerialize["payment_service_id"] = o.PaymentServiceId
	}
	if o.PaymentServiceDisplayName != nil {
		toSerialize["payment_service_display_name"] = o.PaymentServiceDisplayName
	}
	if o.PaymentServiceDefinitionId != nil {
		toSerialize["payment_service_definition_id"] = o.PaymentServiceDefinitionId
	}
	if o.PaymentServiceTransactionId.IsSet() {
		toSerialize["payment_service_transaction_id"] = o.PaymentServiceTransactionId.Get()
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.InstrumentType != nil {
		toSerialize["instrument_type"] = o.InstrumentType
	}
	if o.RetryRule.IsSet() {
		toSerialize["retry_rule"] = o.RetryRule.Get()
	}
	if o.RawResponseCode.IsSet() {
		toSerialize["raw_response_code"] = o.RawResponseCode.Get()
	}
	if o.RawResponseDescription.IsSet() {
		toSerialize["raw_response_description"] = o.RawResponseDescription.Get()
	}
	if o.AvsResponseCode.IsSet() {
		toSerialize["avs_response_code"] = o.AvsResponseCode.Get()
	}
	if o.CvvResponseCode.IsSet() {
		toSerialize["cvv_response_code"] = o.CvvResponseCode.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext struct {
	value *PaymentConnectorResponseTransactionAuthorizationFailedEventContext
	isSet bool
}

func (v NullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext) Get() *PaymentConnectorResponseTransactionAuthorizationFailedEventContext {
	return v.value
}

func (v *NullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext) Set(val *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext(val *PaymentConnectorResponseTransactionAuthorizationFailedEventContext) *NullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext {
	return &NullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext{value: val, isSet: true}
}

func (v NullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentConnectorResponseTransactionAuthorizationFailedEventContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


