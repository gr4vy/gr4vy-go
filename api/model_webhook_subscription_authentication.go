/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// WebhookSubscriptionAuthentication struct for WebhookSubscriptionAuthentication
type WebhookSubscriptionAuthentication struct {
	// Only `basic`` is currently supported.
	Kind *string `json:"kind,omitempty"`
	// The basic authentication username to use for authentication.
	Username NullableString `json:"username,omitempty"`
	// The basic authentication password to use for authentication.
	Password NullableString `json:"password,omitempty"`
}

// NewWebhookSubscriptionAuthentication instantiates a new WebhookSubscriptionAuthentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSubscriptionAuthentication() *WebhookSubscriptionAuthentication {
	this := WebhookSubscriptionAuthentication{}
	return &this
}

// NewWebhookSubscriptionAuthenticationWithDefaults instantiates a new WebhookSubscriptionAuthentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSubscriptionAuthenticationWithDefaults() *WebhookSubscriptionAuthentication {
	this := WebhookSubscriptionAuthentication{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *WebhookSubscriptionAuthentication) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSubscriptionAuthentication) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *WebhookSubscriptionAuthentication) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *WebhookSubscriptionAuthentication) SetKind(v string) {
	o.Kind = &v
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookSubscriptionAuthentication) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookSubscriptionAuthentication) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *WebhookSubscriptionAuthentication) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *WebhookSubscriptionAuthentication) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *WebhookSubscriptionAuthentication) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *WebhookSubscriptionAuthentication) UnsetUsername() {
	o.Username.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookSubscriptionAuthentication) GetPassword() string {
	if o == nil || o.Password.Get() == nil {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookSubscriptionAuthentication) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *WebhookSubscriptionAuthentication) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *WebhookSubscriptionAuthentication) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *WebhookSubscriptionAuthentication) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *WebhookSubscriptionAuthentication) UnsetPassword() {
	o.Password.Unset()
}

func (o WebhookSubscriptionAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookSubscriptionAuthentication struct {
	value *WebhookSubscriptionAuthentication
	isSet bool
}

func (v NullableWebhookSubscriptionAuthentication) Get() *WebhookSubscriptionAuthentication {
	return v.value
}

func (v *NullableWebhookSubscriptionAuthentication) Set(val *WebhookSubscriptionAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSubscriptionAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSubscriptionAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSubscriptionAuthentication(val *WebhookSubscriptionAuthentication) *NullableWebhookSubscriptionAuthentication {
	return &NullableWebhookSubscriptionAuthentication{value: val, isSet: true}
}

func (v NullableWebhookSubscriptionAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSubscriptionAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


