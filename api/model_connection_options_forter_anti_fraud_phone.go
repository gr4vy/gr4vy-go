/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptionsForterAntiFraudPhone struct for ConnectionOptionsForterAntiFraudPhone
type ConnectionOptionsForterAntiFraudPhone struct {
	// Phone number including all country and local access codes.
	Phone string `json:"phone"`
}

// NewConnectionOptionsForterAntiFraudPhone instantiates a new ConnectionOptionsForterAntiFraudPhone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptionsForterAntiFraudPhone(phone string) *ConnectionOptionsForterAntiFraudPhone {
	this := ConnectionOptionsForterAntiFraudPhone{}
	this.Phone = phone
	return &this
}

// NewConnectionOptionsForterAntiFraudPhoneWithDefaults instantiates a new ConnectionOptionsForterAntiFraudPhone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsForterAntiFraudPhoneWithDefaults() *ConnectionOptionsForterAntiFraudPhone {
	this := ConnectionOptionsForterAntiFraudPhone{}
	return &this
}

// GetPhone returns the Phone field value
func (o *ConnectionOptionsForterAntiFraudPhone) GetPhone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
func (o *ConnectionOptionsForterAntiFraudPhone) GetPhoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Phone, true
}

// SetPhone sets field value
func (o *ConnectionOptionsForterAntiFraudPhone) SetPhone(v string) {
	o.Phone = v
}

func (o ConnectionOptionsForterAntiFraudPhone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["phone"] = o.Phone
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptionsForterAntiFraudPhone struct {
	value *ConnectionOptionsForterAntiFraudPhone
	isSet bool
}

func (v NullableConnectionOptionsForterAntiFraudPhone) Get() *ConnectionOptionsForterAntiFraudPhone {
	return v.value
}

func (v *NullableConnectionOptionsForterAntiFraudPhone) Set(val *ConnectionOptionsForterAntiFraudPhone) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptionsForterAntiFraudPhone) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptionsForterAntiFraudPhone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptionsForterAntiFraudPhone(val *ConnectionOptionsForterAntiFraudPhone) *NullableConnectionOptionsForterAntiFraudPhone {
	return &NullableConnectionOptionsForterAntiFraudPhone{value: val, isSet: true}
}

func (v NullableConnectionOptionsForterAntiFraudPhone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptionsForterAntiFraudPhone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


