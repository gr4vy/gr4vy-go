/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// DetailedSettlementReportSpecParams Parameters used to configure the report.
type DetailedSettlementReportSpecParams struct {
	Filters *DetailedSettlementReportSpecParamsFilters `json:"filters,omitempty"`
}

// NewDetailedSettlementReportSpecParams instantiates a new DetailedSettlementReportSpecParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailedSettlementReportSpecParams() *DetailedSettlementReportSpecParams {
	this := DetailedSettlementReportSpecParams{}
	return &this
}

// NewDetailedSettlementReportSpecParamsWithDefaults instantiates a new DetailedSettlementReportSpecParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailedSettlementReportSpecParamsWithDefaults() *DetailedSettlementReportSpecParams {
	this := DetailedSettlementReportSpecParams{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *DetailedSettlementReportSpecParams) GetFilters() DetailedSettlementReportSpecParamsFilters {
	if o == nil || o.Filters == nil {
		var ret DetailedSettlementReportSpecParamsFilters
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailedSettlementReportSpecParams) GetFiltersOk() (*DetailedSettlementReportSpecParamsFilters, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *DetailedSettlementReportSpecParams) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given DetailedSettlementReportSpecParamsFilters and assigns it to the Filters field.
func (o *DetailedSettlementReportSpecParams) SetFilters(v DetailedSettlementReportSpecParamsFilters) {
	o.Filters = &v
}

func (o DetailedSettlementReportSpecParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	return json.Marshal(toSerialize)
}

type NullableDetailedSettlementReportSpecParams struct {
	value *DetailedSettlementReportSpecParams
	isSet bool
}

func (v NullableDetailedSettlementReportSpecParams) Get() *DetailedSettlementReportSpecParams {
	return v.value
}

func (v *NullableDetailedSettlementReportSpecParams) Set(val *DetailedSettlementReportSpecParams) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailedSettlementReportSpecParams) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailedSettlementReportSpecParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailedSettlementReportSpecParams(val *DetailedSettlementReportSpecParams) *NullableDetailedSettlementReportSpecParams {
	return &NullableDetailedSettlementReportSpecParams{value: val, isSet: true}
}

func (v NullableDetailedSettlementReportSpecParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailedSettlementReportSpecParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


