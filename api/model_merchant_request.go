/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// MerchantRequest Details of the merchant.
type MerchantRequest struct {
	// The name of the merchant.
	Name string `json:"name"`
	// Unique value which identifies a merchant for processing transactions, also known as a MID.
	IdentificationNumber string `json:"identification_number"`
	// The phone number for the merchant which should be formatted according to the [E164 number standard](https://www.twilio.com/docs/glossary/what-e164).
	PhoneNumber string `json:"phone_number"`
	// Merchant website URL.
	Url string `json:"url"`
	// Value to explain charges or payments on bank statements.
	StatementDescriptor string `json:"statement_descriptor"`
	// Merchant classification for the type of goods or services it provides.
	MerchantCategoryCode string `json:"merchant_category_code"`
	// The address for the merchant.
	Address NullableAddress `json:"address,omitempty"`
}

// NewMerchantRequest instantiates a new MerchantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantRequest(name string, identificationNumber string, phoneNumber string, url string, statementDescriptor string, merchantCategoryCode string) *MerchantRequest {
	this := MerchantRequest{}
	this.Name = name
	this.IdentificationNumber = identificationNumber
	this.PhoneNumber = phoneNumber
	this.Url = url
	this.StatementDescriptor = statementDescriptor
	this.MerchantCategoryCode = merchantCategoryCode
	return &this
}

// NewMerchantRequestWithDefaults instantiates a new MerchantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantRequestWithDefaults() *MerchantRequest {
	this := MerchantRequest{}
	return &this
}

// GetName returns the Name field value
func (o *MerchantRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MerchantRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MerchantRequest) SetName(v string) {
	o.Name = v
}

// GetIdentificationNumber returns the IdentificationNumber field value
func (o *MerchantRequest) GetIdentificationNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentificationNumber
}

// GetIdentificationNumberOk returns a tuple with the IdentificationNumber field value
// and a boolean to check if the value has been set.
func (o *MerchantRequest) GetIdentificationNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IdentificationNumber, true
}

// SetIdentificationNumber sets field value
func (o *MerchantRequest) SetIdentificationNumber(v string) {
	o.IdentificationNumber = v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *MerchantRequest) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *MerchantRequest) GetPhoneNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *MerchantRequest) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetUrl returns the Url field value
func (o *MerchantRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MerchantRequest) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MerchantRequest) SetUrl(v string) {
	o.Url = v
}

// GetStatementDescriptor returns the StatementDescriptor field value
func (o *MerchantRequest) GetStatementDescriptor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatementDescriptor
}

// GetStatementDescriptorOk returns a tuple with the StatementDescriptor field value
// and a boolean to check if the value has been set.
func (o *MerchantRequest) GetStatementDescriptorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StatementDescriptor, true
}

// SetStatementDescriptor sets field value
func (o *MerchantRequest) SetStatementDescriptor(v string) {
	o.StatementDescriptor = v
}

// GetMerchantCategoryCode returns the MerchantCategoryCode field value
func (o *MerchantRequest) GetMerchantCategoryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantCategoryCode
}

// GetMerchantCategoryCodeOk returns a tuple with the MerchantCategoryCode field value
// and a boolean to check if the value has been set.
func (o *MerchantRequest) GetMerchantCategoryCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MerchantCategoryCode, true
}

// SetMerchantCategoryCode sets field value
func (o *MerchantRequest) SetMerchantCategoryCode(v string) {
	o.MerchantCategoryCode = v
}

// GetAddress returns the Address field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MerchantRequest) GetAddress() Address {
	if o == nil || o.Address.Get() == nil {
		var ret Address
		return ret
	}
	return *o.Address.Get()
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MerchantRequest) GetAddressOk() (*Address, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Address.Get(), o.Address.IsSet()
}

// HasAddress returns a boolean if a field has been set.
func (o *MerchantRequest) HasAddress() bool {
	if o != nil && o.Address.IsSet() {
		return true
	}

	return false
}

// SetAddress gets a reference to the given NullableAddress and assigns it to the Address field.
func (o *MerchantRequest) SetAddress(v Address) {
	o.Address.Set(&v)
}
// SetAddressNil sets the value for Address to be an explicit nil
func (o *MerchantRequest) SetAddressNil() {
	o.Address.Set(nil)
}

// UnsetAddress ensures that no value is present for Address, not even an explicit nil
func (o *MerchantRequest) UnsetAddress() {
	o.Address.Unset()
}

func (o MerchantRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["identification_number"] = o.IdentificationNumber
	}
	if true {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["statement_descriptor"] = o.StatementDescriptor
	}
	if true {
		toSerialize["merchant_category_code"] = o.MerchantCategoryCode
	}
	if o.Address.IsSet() {
		toSerialize["address"] = o.Address.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMerchantRequest struct {
	value *MerchantRequest
	isSet bool
}

func (v NullableMerchantRequest) Get() *MerchantRequest {
	return v.value
}

func (v *NullableMerchantRequest) Set(val *MerchantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantRequest(val *MerchantRequest) *NullableMerchantRequest {
	return &NullableMerchantRequest{value: val, isSet: true}
}

func (v NullableMerchantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


