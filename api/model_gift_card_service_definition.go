/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// GiftCardServiceDefinition An available gift card service that can be configured.
type GiftCardServiceDefinition struct {
	// The ID of the gift card service definition.
	Id *string `json:"id,omitempty"`
	// `gift-card-service-definition`.
	Type *string `json:"type,omitempty"`
	// The display name of this service.
	DisplayName *string `json:"display_name,omitempty"`
	// A list of fields that need to be submitted when activating the payment. service.
	Fields *[]AntiFraudServiceDefinitionFields `json:"fields,omitempty"`
	// An icon to display for the payment service.
	IconUrl *string `json:"icon_url,omitempty"`
}

// NewGiftCardServiceDefinition instantiates a new GiftCardServiceDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGiftCardServiceDefinition() *GiftCardServiceDefinition {
	this := GiftCardServiceDefinition{}
	var type_ string = "gift-card-service-definition"
	this.Type = &type_
	return &this
}

// NewGiftCardServiceDefinitionWithDefaults instantiates a new GiftCardServiceDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGiftCardServiceDefinitionWithDefaults() *GiftCardServiceDefinition {
	this := GiftCardServiceDefinition{}
	var type_ string = "gift-card-service-definition"
	this.Type = &type_
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GiftCardServiceDefinition) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardServiceDefinition) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GiftCardServiceDefinition) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GiftCardServiceDefinition) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GiftCardServiceDefinition) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardServiceDefinition) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GiftCardServiceDefinition) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GiftCardServiceDefinition) SetType(v string) {
	o.Type = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *GiftCardServiceDefinition) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardServiceDefinition) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GiftCardServiceDefinition) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *GiftCardServiceDefinition) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *GiftCardServiceDefinition) GetFields() []AntiFraudServiceDefinitionFields {
	if o == nil || o.Fields == nil {
		var ret []AntiFraudServiceDefinitionFields
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardServiceDefinition) GetFieldsOk() (*[]AntiFraudServiceDefinitionFields, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *GiftCardServiceDefinition) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []AntiFraudServiceDefinitionFields and assigns it to the Fields field.
func (o *GiftCardServiceDefinition) SetFields(v []AntiFraudServiceDefinitionFields) {
	o.Fields = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *GiftCardServiceDefinition) GetIconUrl() string {
	if o == nil || o.IconUrl == nil {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardServiceDefinition) GetIconUrlOk() (*string, bool) {
	if o == nil || o.IconUrl == nil {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *GiftCardServiceDefinition) HasIconUrl() bool {
	if o != nil && o.IconUrl != nil {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *GiftCardServiceDefinition) SetIconUrl(v string) {
	o.IconUrl = &v
}

func (o GiftCardServiceDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.IconUrl != nil {
		toSerialize["icon_url"] = o.IconUrl
	}
	return json.Marshal(toSerialize)
}

type NullableGiftCardServiceDefinition struct {
	value *GiftCardServiceDefinition
	isSet bool
}

func (v NullableGiftCardServiceDefinition) Get() *GiftCardServiceDefinition {
	return v.value
}

func (v *NullableGiftCardServiceDefinition) Set(val *GiftCardServiceDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableGiftCardServiceDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableGiftCardServiceDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGiftCardServiceDefinition(val *GiftCardServiceDefinition) *NullableGiftCardServiceDefinition {
	return &NullableGiftCardServiceDefinition{value: val, isSet: true}
}

func (v NullableGiftCardServiceDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGiftCardServiceDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


