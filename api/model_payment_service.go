/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
	"time"
)

// PaymentService An active, configured payment service.
type PaymentService struct {
	// The ID of this payment service.
	Id *string `json:"id,omitempty"`
	// The type of this resource.
	Type *string `json:"type,omitempty"`
	// The ID of the payment service definition used to create this service. 
	PaymentServiceDefinitionId *string `json:"payment_service_definition_id,omitempty"`
	Method *string `json:"method,omitempty"`
	// The custom name set for this service.
	DisplayName *string `json:"display_name,omitempty"`
	// The current status of this service. This will start off as pending, move to created, and might eventually move to an error status if and when the credentials are no longer valid. 
	Status *string `json:"status,omitempty"`
	// A list of currencies for which this service is enabled, in ISO 4217 three-letter code format.
	AcceptedCurrencies *[]string `json:"accepted_currencies,omitempty"`
	// A list of countries for which this service is enabled, in ISO two-letter code format.
	AcceptedCountries *[]string `json:"accepted_countries,omitempty"`
	// Defines if 3-D Secure is enabled for the service (can only be enabled if the payment service definition supports the `three_d_secure_hosted` feature). This does not affect pass through 3-D Secure data.
	ThreeDSecureEnabled *bool `json:"three_d_secure_enabled,omitempty"`
	// Acquiring institution identification code for VISA.
	AcquirerBinVisa NullableString `json:"acquirer_bin_visa,omitempty"`
	// Acquiring institution identification code for Mastercard.
	AcquirerBinMastercard NullableString `json:"acquirer_bin_mastercard,omitempty"`
	// Acquiring institution identification code for Amex.
	AcquirerBinAmex NullableString `json:"acquirer_bin_amex,omitempty"`
	// Acquiring institution identification code for Discover.
	AcquirerBinDiscover NullableString `json:"acquirer_bin_discover,omitempty"`
	// Merchant identifier used in authorisation requests (assigned by the acquirer).
	AcquirerMerchantId NullableString `json:"acquirer_merchant_id,omitempty"`
	// Merchant name (assigned by the acquirer).
	MerchantName NullableString `json:"merchant_name,omitempty"`
	// ISO 3166-1 numeric three-digit country code.
	MerchantCountryCode NullableString `json:"merchant_country_code,omitempty"`
	// Merchant category code that describes the business.
	MerchantCategoryCode NullableString `json:"merchant_category_code,omitempty"`
	// Fully qualified URL of 3-D Secure requestor website or customer care site.
	MerchantUrl NullableString `json:"merchant_url,omitempty"`
	// Defines if this service is currently active or not.
	Active *bool `json:"active,omitempty"`
	// The numeric rank of a payment service. Payment services with a lower position value are processed first.
	Position *float32 `json:"position,omitempty"`
	// The date and time when this service was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The date and time when this service was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewPaymentService instantiates a new PaymentService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentService() *PaymentService {
	this := PaymentService{}
	var threeDSecureEnabled bool = false
	this.ThreeDSecureEnabled = &threeDSecureEnabled
	var active bool = true
	this.Active = &active
	return &this
}

// NewPaymentServiceWithDefaults instantiates a new PaymentService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServiceWithDefaults() *PaymentService {
	this := PaymentService{}
	var threeDSecureEnabled bool = false
	this.ThreeDSecureEnabled = &threeDSecureEnabled
	var active bool = true
	this.Active = &active
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentService) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentService) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PaymentService) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PaymentService) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PaymentService) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PaymentService) SetType(v string) {
	o.Type = &v
}

// GetPaymentServiceDefinitionId returns the PaymentServiceDefinitionId field value if set, zero value otherwise.
func (o *PaymentService) GetPaymentServiceDefinitionId() string {
	if o == nil || o.PaymentServiceDefinitionId == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceDefinitionId
}

// GetPaymentServiceDefinitionIdOk returns a tuple with the PaymentServiceDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetPaymentServiceDefinitionIdOk() (*string, bool) {
	if o == nil || o.PaymentServiceDefinitionId == nil {
		return nil, false
	}
	return o.PaymentServiceDefinitionId, true
}

// HasPaymentServiceDefinitionId returns a boolean if a field has been set.
func (o *PaymentService) HasPaymentServiceDefinitionId() bool {
	if o != nil && o.PaymentServiceDefinitionId != nil {
		return true
	}

	return false
}

// SetPaymentServiceDefinitionId gets a reference to the given string and assigns it to the PaymentServiceDefinitionId field.
func (o *PaymentService) SetPaymentServiceDefinitionId(v string) {
	o.PaymentServiceDefinitionId = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *PaymentService) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *PaymentService) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *PaymentService) SetMethod(v string) {
	o.Method = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PaymentService) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PaymentService) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PaymentService) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentService) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentService) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentService) SetStatus(v string) {
	o.Status = &v
}

// GetAcceptedCurrencies returns the AcceptedCurrencies field value if set, zero value otherwise.
func (o *PaymentService) GetAcceptedCurrencies() []string {
	if o == nil || o.AcceptedCurrencies == nil {
		var ret []string
		return ret
	}
	return *o.AcceptedCurrencies
}

// GetAcceptedCurrenciesOk returns a tuple with the AcceptedCurrencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetAcceptedCurrenciesOk() (*[]string, bool) {
	if o == nil || o.AcceptedCurrencies == nil {
		return nil, false
	}
	return o.AcceptedCurrencies, true
}

// HasAcceptedCurrencies returns a boolean if a field has been set.
func (o *PaymentService) HasAcceptedCurrencies() bool {
	if o != nil && o.AcceptedCurrencies != nil {
		return true
	}

	return false
}

// SetAcceptedCurrencies gets a reference to the given []string and assigns it to the AcceptedCurrencies field.
func (o *PaymentService) SetAcceptedCurrencies(v []string) {
	o.AcceptedCurrencies = &v
}

// GetAcceptedCountries returns the AcceptedCountries field value if set, zero value otherwise.
func (o *PaymentService) GetAcceptedCountries() []string {
	if o == nil || o.AcceptedCountries == nil {
		var ret []string
		return ret
	}
	return *o.AcceptedCountries
}

// GetAcceptedCountriesOk returns a tuple with the AcceptedCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetAcceptedCountriesOk() (*[]string, bool) {
	if o == nil || o.AcceptedCountries == nil {
		return nil, false
	}
	return o.AcceptedCountries, true
}

// HasAcceptedCountries returns a boolean if a field has been set.
func (o *PaymentService) HasAcceptedCountries() bool {
	if o != nil && o.AcceptedCountries != nil {
		return true
	}

	return false
}

// SetAcceptedCountries gets a reference to the given []string and assigns it to the AcceptedCountries field.
func (o *PaymentService) SetAcceptedCountries(v []string) {
	o.AcceptedCountries = &v
}

// GetThreeDSecureEnabled returns the ThreeDSecureEnabled field value if set, zero value otherwise.
func (o *PaymentService) GetThreeDSecureEnabled() bool {
	if o == nil || o.ThreeDSecureEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ThreeDSecureEnabled
}

// GetThreeDSecureEnabledOk returns a tuple with the ThreeDSecureEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetThreeDSecureEnabledOk() (*bool, bool) {
	if o == nil || o.ThreeDSecureEnabled == nil {
		return nil, false
	}
	return o.ThreeDSecureEnabled, true
}

// HasThreeDSecureEnabled returns a boolean if a field has been set.
func (o *PaymentService) HasThreeDSecureEnabled() bool {
	if o != nil && o.ThreeDSecureEnabled != nil {
		return true
	}

	return false
}

// SetThreeDSecureEnabled gets a reference to the given bool and assigns it to the ThreeDSecureEnabled field.
func (o *PaymentService) SetThreeDSecureEnabled(v bool) {
	o.ThreeDSecureEnabled = &v
}

// GetAcquirerBinVisa returns the AcquirerBinVisa field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentService) GetAcquirerBinVisa() string {
	if o == nil || o.AcquirerBinVisa.Get() == nil {
		var ret string
		return ret
	}
	return *o.AcquirerBinVisa.Get()
}

// GetAcquirerBinVisaOk returns a tuple with the AcquirerBinVisa field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentService) GetAcquirerBinVisaOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AcquirerBinVisa.Get(), o.AcquirerBinVisa.IsSet()
}

// HasAcquirerBinVisa returns a boolean if a field has been set.
func (o *PaymentService) HasAcquirerBinVisa() bool {
	if o != nil && o.AcquirerBinVisa.IsSet() {
		return true
	}

	return false
}

// SetAcquirerBinVisa gets a reference to the given NullableString and assigns it to the AcquirerBinVisa field.
func (o *PaymentService) SetAcquirerBinVisa(v string) {
	o.AcquirerBinVisa.Set(&v)
}
// SetAcquirerBinVisaNil sets the value for AcquirerBinVisa to be an explicit nil
func (o *PaymentService) SetAcquirerBinVisaNil() {
	o.AcquirerBinVisa.Set(nil)
}

// UnsetAcquirerBinVisa ensures that no value is present for AcquirerBinVisa, not even an explicit nil
func (o *PaymentService) UnsetAcquirerBinVisa() {
	o.AcquirerBinVisa.Unset()
}

// GetAcquirerBinMastercard returns the AcquirerBinMastercard field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentService) GetAcquirerBinMastercard() string {
	if o == nil || o.AcquirerBinMastercard.Get() == nil {
		var ret string
		return ret
	}
	return *o.AcquirerBinMastercard.Get()
}

// GetAcquirerBinMastercardOk returns a tuple with the AcquirerBinMastercard field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentService) GetAcquirerBinMastercardOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AcquirerBinMastercard.Get(), o.AcquirerBinMastercard.IsSet()
}

// HasAcquirerBinMastercard returns a boolean if a field has been set.
func (o *PaymentService) HasAcquirerBinMastercard() bool {
	if o != nil && o.AcquirerBinMastercard.IsSet() {
		return true
	}

	return false
}

// SetAcquirerBinMastercard gets a reference to the given NullableString and assigns it to the AcquirerBinMastercard field.
func (o *PaymentService) SetAcquirerBinMastercard(v string) {
	o.AcquirerBinMastercard.Set(&v)
}
// SetAcquirerBinMastercardNil sets the value for AcquirerBinMastercard to be an explicit nil
func (o *PaymentService) SetAcquirerBinMastercardNil() {
	o.AcquirerBinMastercard.Set(nil)
}

// UnsetAcquirerBinMastercard ensures that no value is present for AcquirerBinMastercard, not even an explicit nil
func (o *PaymentService) UnsetAcquirerBinMastercard() {
	o.AcquirerBinMastercard.Unset()
}

// GetAcquirerBinAmex returns the AcquirerBinAmex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentService) GetAcquirerBinAmex() string {
	if o == nil || o.AcquirerBinAmex.Get() == nil {
		var ret string
		return ret
	}
	return *o.AcquirerBinAmex.Get()
}

// GetAcquirerBinAmexOk returns a tuple with the AcquirerBinAmex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentService) GetAcquirerBinAmexOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AcquirerBinAmex.Get(), o.AcquirerBinAmex.IsSet()
}

// HasAcquirerBinAmex returns a boolean if a field has been set.
func (o *PaymentService) HasAcquirerBinAmex() bool {
	if o != nil && o.AcquirerBinAmex.IsSet() {
		return true
	}

	return false
}

// SetAcquirerBinAmex gets a reference to the given NullableString and assigns it to the AcquirerBinAmex field.
func (o *PaymentService) SetAcquirerBinAmex(v string) {
	o.AcquirerBinAmex.Set(&v)
}
// SetAcquirerBinAmexNil sets the value for AcquirerBinAmex to be an explicit nil
func (o *PaymentService) SetAcquirerBinAmexNil() {
	o.AcquirerBinAmex.Set(nil)
}

// UnsetAcquirerBinAmex ensures that no value is present for AcquirerBinAmex, not even an explicit nil
func (o *PaymentService) UnsetAcquirerBinAmex() {
	o.AcquirerBinAmex.Unset()
}

// GetAcquirerBinDiscover returns the AcquirerBinDiscover field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentService) GetAcquirerBinDiscover() string {
	if o == nil || o.AcquirerBinDiscover.Get() == nil {
		var ret string
		return ret
	}
	return *o.AcquirerBinDiscover.Get()
}

// GetAcquirerBinDiscoverOk returns a tuple with the AcquirerBinDiscover field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentService) GetAcquirerBinDiscoverOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AcquirerBinDiscover.Get(), o.AcquirerBinDiscover.IsSet()
}

// HasAcquirerBinDiscover returns a boolean if a field has been set.
func (o *PaymentService) HasAcquirerBinDiscover() bool {
	if o != nil && o.AcquirerBinDiscover.IsSet() {
		return true
	}

	return false
}

// SetAcquirerBinDiscover gets a reference to the given NullableString and assigns it to the AcquirerBinDiscover field.
func (o *PaymentService) SetAcquirerBinDiscover(v string) {
	o.AcquirerBinDiscover.Set(&v)
}
// SetAcquirerBinDiscoverNil sets the value for AcquirerBinDiscover to be an explicit nil
func (o *PaymentService) SetAcquirerBinDiscoverNil() {
	o.AcquirerBinDiscover.Set(nil)
}

// UnsetAcquirerBinDiscover ensures that no value is present for AcquirerBinDiscover, not even an explicit nil
func (o *PaymentService) UnsetAcquirerBinDiscover() {
	o.AcquirerBinDiscover.Unset()
}

// GetAcquirerMerchantId returns the AcquirerMerchantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentService) GetAcquirerMerchantId() string {
	if o == nil || o.AcquirerMerchantId.Get() == nil {
		var ret string
		return ret
	}
	return *o.AcquirerMerchantId.Get()
}

// GetAcquirerMerchantIdOk returns a tuple with the AcquirerMerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentService) GetAcquirerMerchantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AcquirerMerchantId.Get(), o.AcquirerMerchantId.IsSet()
}

// HasAcquirerMerchantId returns a boolean if a field has been set.
func (o *PaymentService) HasAcquirerMerchantId() bool {
	if o != nil && o.AcquirerMerchantId.IsSet() {
		return true
	}

	return false
}

// SetAcquirerMerchantId gets a reference to the given NullableString and assigns it to the AcquirerMerchantId field.
func (o *PaymentService) SetAcquirerMerchantId(v string) {
	o.AcquirerMerchantId.Set(&v)
}
// SetAcquirerMerchantIdNil sets the value for AcquirerMerchantId to be an explicit nil
func (o *PaymentService) SetAcquirerMerchantIdNil() {
	o.AcquirerMerchantId.Set(nil)
}

// UnsetAcquirerMerchantId ensures that no value is present for AcquirerMerchantId, not even an explicit nil
func (o *PaymentService) UnsetAcquirerMerchantId() {
	o.AcquirerMerchantId.Unset()
}

// GetMerchantName returns the MerchantName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentService) GetMerchantName() string {
	if o == nil || o.MerchantName.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantName.Get()
}

// GetMerchantNameOk returns a tuple with the MerchantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentService) GetMerchantNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantName.Get(), o.MerchantName.IsSet()
}

// HasMerchantName returns a boolean if a field has been set.
func (o *PaymentService) HasMerchantName() bool {
	if o != nil && o.MerchantName.IsSet() {
		return true
	}

	return false
}

// SetMerchantName gets a reference to the given NullableString and assigns it to the MerchantName field.
func (o *PaymentService) SetMerchantName(v string) {
	o.MerchantName.Set(&v)
}
// SetMerchantNameNil sets the value for MerchantName to be an explicit nil
func (o *PaymentService) SetMerchantNameNil() {
	o.MerchantName.Set(nil)
}

// UnsetMerchantName ensures that no value is present for MerchantName, not even an explicit nil
func (o *PaymentService) UnsetMerchantName() {
	o.MerchantName.Unset()
}

// GetMerchantCountryCode returns the MerchantCountryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentService) GetMerchantCountryCode() string {
	if o == nil || o.MerchantCountryCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantCountryCode.Get()
}

// GetMerchantCountryCodeOk returns a tuple with the MerchantCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentService) GetMerchantCountryCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantCountryCode.Get(), o.MerchantCountryCode.IsSet()
}

// HasMerchantCountryCode returns a boolean if a field has been set.
func (o *PaymentService) HasMerchantCountryCode() bool {
	if o != nil && o.MerchantCountryCode.IsSet() {
		return true
	}

	return false
}

// SetMerchantCountryCode gets a reference to the given NullableString and assigns it to the MerchantCountryCode field.
func (o *PaymentService) SetMerchantCountryCode(v string) {
	o.MerchantCountryCode.Set(&v)
}
// SetMerchantCountryCodeNil sets the value for MerchantCountryCode to be an explicit nil
func (o *PaymentService) SetMerchantCountryCodeNil() {
	o.MerchantCountryCode.Set(nil)
}

// UnsetMerchantCountryCode ensures that no value is present for MerchantCountryCode, not even an explicit nil
func (o *PaymentService) UnsetMerchantCountryCode() {
	o.MerchantCountryCode.Unset()
}

// GetMerchantCategoryCode returns the MerchantCategoryCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentService) GetMerchantCategoryCode() string {
	if o == nil || o.MerchantCategoryCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantCategoryCode.Get()
}

// GetMerchantCategoryCodeOk returns a tuple with the MerchantCategoryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentService) GetMerchantCategoryCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantCategoryCode.Get(), o.MerchantCategoryCode.IsSet()
}

// HasMerchantCategoryCode returns a boolean if a field has been set.
func (o *PaymentService) HasMerchantCategoryCode() bool {
	if o != nil && o.MerchantCategoryCode.IsSet() {
		return true
	}

	return false
}

// SetMerchantCategoryCode gets a reference to the given NullableString and assigns it to the MerchantCategoryCode field.
func (o *PaymentService) SetMerchantCategoryCode(v string) {
	o.MerchantCategoryCode.Set(&v)
}
// SetMerchantCategoryCodeNil sets the value for MerchantCategoryCode to be an explicit nil
func (o *PaymentService) SetMerchantCategoryCodeNil() {
	o.MerchantCategoryCode.Set(nil)
}

// UnsetMerchantCategoryCode ensures that no value is present for MerchantCategoryCode, not even an explicit nil
func (o *PaymentService) UnsetMerchantCategoryCode() {
	o.MerchantCategoryCode.Unset()
}

// GetMerchantUrl returns the MerchantUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentService) GetMerchantUrl() string {
	if o == nil || o.MerchantUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantUrl.Get()
}

// GetMerchantUrlOk returns a tuple with the MerchantUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentService) GetMerchantUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantUrl.Get(), o.MerchantUrl.IsSet()
}

// HasMerchantUrl returns a boolean if a field has been set.
func (o *PaymentService) HasMerchantUrl() bool {
	if o != nil && o.MerchantUrl.IsSet() {
		return true
	}

	return false
}

// SetMerchantUrl gets a reference to the given NullableString and assigns it to the MerchantUrl field.
func (o *PaymentService) SetMerchantUrl(v string) {
	o.MerchantUrl.Set(&v)
}
// SetMerchantUrlNil sets the value for MerchantUrl to be an explicit nil
func (o *PaymentService) SetMerchantUrlNil() {
	o.MerchantUrl.Set(nil)
}

// UnsetMerchantUrl ensures that no value is present for MerchantUrl, not even an explicit nil
func (o *PaymentService) UnsetMerchantUrl() {
	o.MerchantUrl.Unset()
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PaymentService) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PaymentService) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PaymentService) SetActive(v bool) {
	o.Active = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *PaymentService) GetPosition() float32 {
	if o == nil || o.Position == nil {
		var ret float32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetPositionOk() (*float32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *PaymentService) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given float32 and assigns it to the Position field.
func (o *PaymentService) SetPosition(v float32) {
	o.Position = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PaymentService) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PaymentService) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PaymentService) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PaymentService) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PaymentService) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PaymentService) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o PaymentService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.PaymentServiceDefinitionId != nil {
		toSerialize["payment_service_definition_id"] = o.PaymentServiceDefinitionId
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.AcceptedCurrencies != nil {
		toSerialize["accepted_currencies"] = o.AcceptedCurrencies
	}
	if o.AcceptedCountries != nil {
		toSerialize["accepted_countries"] = o.AcceptedCountries
	}
	if o.ThreeDSecureEnabled != nil {
		toSerialize["three_d_secure_enabled"] = o.ThreeDSecureEnabled
	}
	if o.AcquirerBinVisa.IsSet() {
		toSerialize["acquirer_bin_visa"] = o.AcquirerBinVisa.Get()
	}
	if o.AcquirerBinMastercard.IsSet() {
		toSerialize["acquirer_bin_mastercard"] = o.AcquirerBinMastercard.Get()
	}
	if o.AcquirerBinAmex.IsSet() {
		toSerialize["acquirer_bin_amex"] = o.AcquirerBinAmex.Get()
	}
	if o.AcquirerBinDiscover.IsSet() {
		toSerialize["acquirer_bin_discover"] = o.AcquirerBinDiscover.Get()
	}
	if o.AcquirerMerchantId.IsSet() {
		toSerialize["acquirer_merchant_id"] = o.AcquirerMerchantId.Get()
	}
	if o.MerchantName.IsSet() {
		toSerialize["merchant_name"] = o.MerchantName.Get()
	}
	if o.MerchantCountryCode.IsSet() {
		toSerialize["merchant_country_code"] = o.MerchantCountryCode.Get()
	}
	if o.MerchantCategoryCode.IsSet() {
		toSerialize["merchant_category_code"] = o.MerchantCategoryCode.Get()
	}
	if o.MerchantUrl.IsSet() {
		toSerialize["merchant_url"] = o.MerchantUrl.Get()
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentService struct {
	value *PaymentService
	isSet bool
}

func (v NullablePaymentService) Get() *PaymentService {
	return v.value
}

func (v *NullablePaymentService) Set(val *PaymentService) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentService) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentService(val *PaymentService) *NullablePaymentService {
	return &NullablePaymentService{value: val, isSet: true}
}

func (v NullablePaymentService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


