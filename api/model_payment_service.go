/*
 * Gr4vy API (Beta)
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.0
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
	"time"
)

// PaymentService An active, configured payment service.
type PaymentService struct {
	// The ID of this payment service.
	Id *string `json:"id,omitempty"`
	// The type of this resource.
	Type *string `json:"type,omitempty"`
	// The ID of the payment service definition used to create this service. 
	PaymentServiceDefinitionId *string `json:"payment_service_definition_id,omitempty"`
	// Defines the ID of the payment method that this service handles.
	Method *string `json:"method,omitempty"`
	// The custom name set for this service.
	DisplayName *string `json:"display_name,omitempty"`
	// The current status of this service. This will start off as pending, move to created, and might eventually move to an error status if and when the credentials are no longer valid. 
	Status *string `json:"status,omitempty"`
	// A list of currencies for which this service is enabled, in ISO 4217 three-letter code format.
	AcceptedCurrencies *[]string `json:"accepted_currencies,omitempty"`
	// A list of countries for which this service is enabled, in ISO two-letter code format.
	AcceptedCountries *[]string `json:"accepted_countries,omitempty"`
	// Defines if the credentials are intended for the service's live API or sandbox/test API.
	CredentialsMode *string `json:"credentials_mode,omitempty"`
	// Defines if this service is currently active or not.
	Active *bool `json:"active,omitempty"`
	// Determines the Gr4vy environments in which this service should be available. This can be used in combination with the `environment` parameters in the payment method and transaction APIs to route transactions through this service.
	Environments *[]string `json:"environments,omitempty"`
	// The numeric rank of a payment service. Payment services with a lower position value are processed first.
	Position *float32 `json:"position,omitempty"`
	// The date and time when this service was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The date and time when this service was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewPaymentService instantiates a new PaymentService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentService() *PaymentService {
	this := PaymentService{}
	var credentialsMode string = "live"
	this.CredentialsMode = &credentialsMode
	var active bool = true
	this.Active = &active
	return &this
}

// NewPaymentServiceWithDefaults instantiates a new PaymentService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentServiceWithDefaults() *PaymentService {
	this := PaymentService{}
	var credentialsMode string = "live"
	this.CredentialsMode = &credentialsMode
	var active bool = true
	this.Active = &active
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentService) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentService) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PaymentService) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PaymentService) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PaymentService) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PaymentService) SetType(v string) {
	o.Type = &v
}

// GetPaymentServiceDefinitionId returns the PaymentServiceDefinitionId field value if set, zero value otherwise.
func (o *PaymentService) GetPaymentServiceDefinitionId() string {
	if o == nil || o.PaymentServiceDefinitionId == nil {
		var ret string
		return ret
	}
	return *o.PaymentServiceDefinitionId
}

// GetPaymentServiceDefinitionIdOk returns a tuple with the PaymentServiceDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetPaymentServiceDefinitionIdOk() (*string, bool) {
	if o == nil || o.PaymentServiceDefinitionId == nil {
		return nil, false
	}
	return o.PaymentServiceDefinitionId, true
}

// HasPaymentServiceDefinitionId returns a boolean if a field has been set.
func (o *PaymentService) HasPaymentServiceDefinitionId() bool {
	if o != nil && o.PaymentServiceDefinitionId != nil {
		return true
	}

	return false
}

// SetPaymentServiceDefinitionId gets a reference to the given string and assigns it to the PaymentServiceDefinitionId field.
func (o *PaymentService) SetPaymentServiceDefinitionId(v string) {
	o.PaymentServiceDefinitionId = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *PaymentService) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *PaymentService) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *PaymentService) SetMethod(v string) {
	o.Method = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PaymentService) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PaymentService) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PaymentService) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentService) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentService) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentService) SetStatus(v string) {
	o.Status = &v
}

// GetAcceptedCurrencies returns the AcceptedCurrencies field value if set, zero value otherwise.
func (o *PaymentService) GetAcceptedCurrencies() []string {
	if o == nil || o.AcceptedCurrencies == nil {
		var ret []string
		return ret
	}
	return *o.AcceptedCurrencies
}

// GetAcceptedCurrenciesOk returns a tuple with the AcceptedCurrencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetAcceptedCurrenciesOk() (*[]string, bool) {
	if o == nil || o.AcceptedCurrencies == nil {
		return nil, false
	}
	return o.AcceptedCurrencies, true
}

// HasAcceptedCurrencies returns a boolean if a field has been set.
func (o *PaymentService) HasAcceptedCurrencies() bool {
	if o != nil && o.AcceptedCurrencies != nil {
		return true
	}

	return false
}

// SetAcceptedCurrencies gets a reference to the given []string and assigns it to the AcceptedCurrencies field.
func (o *PaymentService) SetAcceptedCurrencies(v []string) {
	o.AcceptedCurrencies = &v
}

// GetAcceptedCountries returns the AcceptedCountries field value if set, zero value otherwise.
func (o *PaymentService) GetAcceptedCountries() []string {
	if o == nil || o.AcceptedCountries == nil {
		var ret []string
		return ret
	}
	return *o.AcceptedCountries
}

// GetAcceptedCountriesOk returns a tuple with the AcceptedCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetAcceptedCountriesOk() (*[]string, bool) {
	if o == nil || o.AcceptedCountries == nil {
		return nil, false
	}
	return o.AcceptedCountries, true
}

// HasAcceptedCountries returns a boolean if a field has been set.
func (o *PaymentService) HasAcceptedCountries() bool {
	if o != nil && o.AcceptedCountries != nil {
		return true
	}

	return false
}

// SetAcceptedCountries gets a reference to the given []string and assigns it to the AcceptedCountries field.
func (o *PaymentService) SetAcceptedCountries(v []string) {
	o.AcceptedCountries = &v
}

// GetCredentialsMode returns the CredentialsMode field value if set, zero value otherwise.
func (o *PaymentService) GetCredentialsMode() string {
	if o == nil || o.CredentialsMode == nil {
		var ret string
		return ret
	}
	return *o.CredentialsMode
}

// GetCredentialsModeOk returns a tuple with the CredentialsMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetCredentialsModeOk() (*string, bool) {
	if o == nil || o.CredentialsMode == nil {
		return nil, false
	}
	return o.CredentialsMode, true
}

// HasCredentialsMode returns a boolean if a field has been set.
func (o *PaymentService) HasCredentialsMode() bool {
	if o != nil && o.CredentialsMode != nil {
		return true
	}

	return false
}

// SetCredentialsMode gets a reference to the given string and assigns it to the CredentialsMode field.
func (o *PaymentService) SetCredentialsMode(v string) {
	o.CredentialsMode = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PaymentService) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PaymentService) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PaymentService) SetActive(v bool) {
	o.Active = &v
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *PaymentService) GetEnvironments() []string {
	if o == nil || o.Environments == nil {
		var ret []string
		return ret
	}
	return *o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetEnvironmentsOk() (*[]string, bool) {
	if o == nil || o.Environments == nil {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *PaymentService) HasEnvironments() bool {
	if o != nil && o.Environments != nil {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given []string and assigns it to the Environments field.
func (o *PaymentService) SetEnvironments(v []string) {
	o.Environments = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *PaymentService) GetPosition() float32 {
	if o == nil || o.Position == nil {
		var ret float32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetPositionOk() (*float32, bool) {
	if o == nil || o.Position == nil {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *PaymentService) HasPosition() bool {
	if o != nil && o.Position != nil {
		return true
	}

	return false
}

// SetPosition gets a reference to the given float32 and assigns it to the Position field.
func (o *PaymentService) SetPosition(v float32) {
	o.Position = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PaymentService) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PaymentService) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PaymentService) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PaymentService) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentService) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PaymentService) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PaymentService) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o PaymentService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.PaymentServiceDefinitionId != nil {
		toSerialize["payment_service_definition_id"] = o.PaymentServiceDefinitionId
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.AcceptedCurrencies != nil {
		toSerialize["accepted_currencies"] = o.AcceptedCurrencies
	}
	if o.AcceptedCountries != nil {
		toSerialize["accepted_countries"] = o.AcceptedCountries
	}
	if o.CredentialsMode != nil {
		toSerialize["credentials_mode"] = o.CredentialsMode
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.Environments != nil {
		toSerialize["environments"] = o.Environments
	}
	if o.Position != nil {
		toSerialize["position"] = o.Position
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentService struct {
	value *PaymentService
	isSet bool
}

func (v NullablePaymentService) Get() *PaymentService {
	return v.value
}

func (v *NullablePaymentService) Set(val *PaymentService) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentService) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentService(val *PaymentService) *NullablePaymentService {
	return &NullablePaymentService{value: val, isSet: true}
}

func (v NullablePaymentService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


