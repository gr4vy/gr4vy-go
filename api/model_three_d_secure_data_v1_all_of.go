/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ThreeDSecureDataV1AllOf struct for ThreeDSecureDataV1AllOf
type ThreeDSecureDataV1AllOf struct {
	// The authentication response.
	AuthenticationResponse string `json:"authentication_response"`
	// The CAVV Algorithm used.
	CavvAlgorithm string `json:"cavv_algorithm"`
	// The transaction identifier.
	Xid string `json:"xid"`
}

// NewThreeDSecureDataV1AllOf instantiates a new ThreeDSecureDataV1AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreeDSecureDataV1AllOf(authenticationResponse string, cavvAlgorithm string, xid string) *ThreeDSecureDataV1AllOf {
	this := ThreeDSecureDataV1AllOf{}
	this.AuthenticationResponse = authenticationResponse
	this.CavvAlgorithm = cavvAlgorithm
	this.Xid = xid
	return &this
}

// NewThreeDSecureDataV1AllOfWithDefaults instantiates a new ThreeDSecureDataV1AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreeDSecureDataV1AllOfWithDefaults() *ThreeDSecureDataV1AllOf {
	this := ThreeDSecureDataV1AllOf{}
	return &this
}

// GetAuthenticationResponse returns the AuthenticationResponse field value
func (o *ThreeDSecureDataV1AllOf) GetAuthenticationResponse() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationResponse
}

// GetAuthenticationResponseOk returns a tuple with the AuthenticationResponse field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1AllOf) GetAuthenticationResponseOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthenticationResponse, true
}

// SetAuthenticationResponse sets field value
func (o *ThreeDSecureDataV1AllOf) SetAuthenticationResponse(v string) {
	o.AuthenticationResponse = v
}

// GetCavvAlgorithm returns the CavvAlgorithm field value
func (o *ThreeDSecureDataV1AllOf) GetCavvAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CavvAlgorithm
}

// GetCavvAlgorithmOk returns a tuple with the CavvAlgorithm field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1AllOf) GetCavvAlgorithmOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CavvAlgorithm, true
}

// SetCavvAlgorithm sets field value
func (o *ThreeDSecureDataV1AllOf) SetCavvAlgorithm(v string) {
	o.CavvAlgorithm = v
}

// GetXid returns the Xid field value
func (o *ThreeDSecureDataV1AllOf) GetXid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Xid
}

// GetXidOk returns a tuple with the Xid field value
// and a boolean to check if the value has been set.
func (o *ThreeDSecureDataV1AllOf) GetXidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Xid, true
}

// SetXid sets field value
func (o *ThreeDSecureDataV1AllOf) SetXid(v string) {
	o.Xid = v
}

func (o ThreeDSecureDataV1AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["authentication_response"] = o.AuthenticationResponse
	}
	if true {
		toSerialize["cavv_algorithm"] = o.CavvAlgorithm
	}
	if true {
		toSerialize["xid"] = o.Xid
	}
	return json.Marshal(toSerialize)
}

type NullableThreeDSecureDataV1AllOf struct {
	value *ThreeDSecureDataV1AllOf
	isSet bool
}

func (v NullableThreeDSecureDataV1AllOf) Get() *ThreeDSecureDataV1AllOf {
	return v.value
}

func (v *NullableThreeDSecureDataV1AllOf) Set(val *ThreeDSecureDataV1AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableThreeDSecureDataV1AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableThreeDSecureDataV1AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreeDSecureDataV1AllOf(val *ThreeDSecureDataV1AllOf) *NullableThreeDSecureDataV1AllOf {
	return &NullableThreeDSecureDataV1AllOf{value: val, isSet: true}
}

func (v NullableThreeDSecureDataV1AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreeDSecureDataV1AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


