/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// TransactionRefundAllRequest A request to fully refund a transaction.
type TransactionRefundAllRequest struct {
	// The reason to refund for. This can be used to attach a written reason to the refund request.
	Reason NullableString `json:"reason,omitempty"`
	// An external identifier that can be used to match the refund against your own records.
	ExternalIdentifier NullableString `json:"external_identifier,omitempty"`
}

// NewTransactionRefundAllRequest instantiates a new TransactionRefundAllRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionRefundAllRequest() *TransactionRefundAllRequest {
	this := TransactionRefundAllRequest{}
	return &this
}

// NewTransactionRefundAllRequestWithDefaults instantiates a new TransactionRefundAllRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionRefundAllRequestWithDefaults() *TransactionRefundAllRequest {
	this := TransactionRefundAllRequest{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionRefundAllRequest) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionRefundAllRequest) GetReasonOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *TransactionRefundAllRequest) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *TransactionRefundAllRequest) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *TransactionRefundAllRequest) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *TransactionRefundAllRequest) UnsetReason() {
	o.Reason.Unset()
}

// GetExternalIdentifier returns the ExternalIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransactionRefundAllRequest) GetExternalIdentifier() string {
	if o == nil || o.ExternalIdentifier.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalIdentifier.Get()
}

// GetExternalIdentifierOk returns a tuple with the ExternalIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionRefundAllRequest) GetExternalIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalIdentifier.Get(), o.ExternalIdentifier.IsSet()
}

// HasExternalIdentifier returns a boolean if a field has been set.
func (o *TransactionRefundAllRequest) HasExternalIdentifier() bool {
	if o != nil && o.ExternalIdentifier.IsSet() {
		return true
	}

	return false
}

// SetExternalIdentifier gets a reference to the given NullableString and assigns it to the ExternalIdentifier field.
func (o *TransactionRefundAllRequest) SetExternalIdentifier(v string) {
	o.ExternalIdentifier.Set(&v)
}
// SetExternalIdentifierNil sets the value for ExternalIdentifier to be an explicit nil
func (o *TransactionRefundAllRequest) SetExternalIdentifierNil() {
	o.ExternalIdentifier.Set(nil)
}

// UnsetExternalIdentifier ensures that no value is present for ExternalIdentifier, not even an explicit nil
func (o *TransactionRefundAllRequest) UnsetExternalIdentifier() {
	o.ExternalIdentifier.Unset()
}

func (o TransactionRefundAllRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if o.ExternalIdentifier.IsSet() {
		toSerialize["external_identifier"] = o.ExternalIdentifier.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionRefundAllRequest struct {
	value *TransactionRefundAllRequest
	isSet bool
}

func (v NullableTransactionRefundAllRequest) Get() *TransactionRefundAllRequest {
	return v.value
}

func (v *NullableTransactionRefundAllRequest) Set(val *TransactionRefundAllRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionRefundAllRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionRefundAllRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionRefundAllRequest(val *TransactionRefundAllRequest) *NullableTransactionRefundAllRequest {
	return &NullableTransactionRefundAllRequest{value: val, isSet: true}
}

func (v NullableTransactionRefundAllRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionRefundAllRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


