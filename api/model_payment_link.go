/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
	"time"
)

// PaymentLink struct for PaymentLink
type PaymentLink struct {
	// The ID of a payment link.
	Id *string `json:"id,omitempty"`
	// The type of this resource. Is always `payment_link`.
	Type *string `json:"type,omitempty"`
	// The monetary amount for this payment link, in the smallest currency unit for the given currency, for example `1299` cents to create an authorization for `$12.99`.
	Amount *int32 `json:"amount,omitempty"`
	// A supported ISO-4217 currency code.
	Currency *string `json:"currency,omitempty"`
	// The date and time when this payment link was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The date and time when this payment link was created.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The date and time when this payment link expires.
	ExpiresAt *time.Time `json:"expires_at,omitempty"`
	Status *string `json:"status,omitempty"`
	// A value that can be used to match the payment link against your own records.
	ExternalIdentifier NullableString `json:"external_identifier,omitempty"`
	StatementDescriptor NullableStatementDescriptor `json:"statement_descriptor,omitempty"`
	// The locale used to translate text within the payment link.
	Locale NullableString `json:"locale,omitempty"`
	// The name of the merchant to display on the payment link.
	MerchantName NullableString `json:"merchant_name,omitempty"`
	// The URL of the merchant to display on the payment link.
	MerchantUrl NullableString `json:"merchant_url,omitempty"`
	// The URL of the merchant banner to display on the payment link.
	MerchantBannerUrl NullableString `json:"merchant_banner_url,omitempty"`
	// The color code of the merchant to display on the payment link.
	MerchantColor NullableString `json:"merchant_color,omitempty"`
	// The message to display on the payment link.
	MerchantMessage NullableString `json:"merchant_message,omitempty"`
	// The URL of the merchant terms and conditions to display on the payment link.
	MerchantTermsAndConditionsUrl NullableString `json:"merchant_terms_and_conditions_url,omitempty"`
	// The URL of the merchant favicon icon.
	MerchantFaviconUrl NullableString `json:"merchant_favicon_url,omitempty"`
	// The 2-letter ISO code of the country of the transaction. This is used to filter the payment services that is used to process the transaction. 
	Country NullableString `json:"country,omitempty"`
	// The intent of the payment link.
	Intent NullableString `json:"intent,omitempty"`
	// The URL to redirect the buyer to after payment.
	ReturnUrl NullableString `json:"return_url,omitempty"`
	// An array of cart items that represents the line items of a payment link.
	CartItems *[]CartItem `json:"cart_items,omitempty"`
	// Any additional information about the payment link that you would like to store as key-value pairs. This data is passed to payment service providers that support it.
	Metadata map[string]string `json:"metadata,omitempty"`
	// The source of the payment link. Defaults to `ecommerce`.
	PaymentSource NullableString `json:"payment_source,omitempty"`
	// The buyer used for this transaction.
	Buyer NullableBuyerSnapshot `json:"buyer,omitempty"`
	// Shipping details for the payment link.
	ShippingDetails NullableShippingDetail `json:"shipping_details,omitempty"`
}

// NewPaymentLink instantiates a new PaymentLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentLink() *PaymentLink {
	this := PaymentLink{}
	return &this
}

// NewPaymentLinkWithDefaults instantiates a new PaymentLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentLinkWithDefaults() *PaymentLink {
	this := PaymentLink{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PaymentLink) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLink) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PaymentLink) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PaymentLink) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PaymentLink) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLink) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PaymentLink) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PaymentLink) SetType(v string) {
	o.Type = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PaymentLink) GetAmount() int32 {
	if o == nil || o.Amount == nil {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLink) GetAmountOk() (*int32, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PaymentLink) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *PaymentLink) SetAmount(v int32) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PaymentLink) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLink) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaymentLink) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PaymentLink) SetCurrency(v string) {
	o.Currency = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PaymentLink) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLink) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PaymentLink) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PaymentLink) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PaymentLink) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLink) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PaymentLink) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PaymentLink) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *PaymentLink) GetExpiresAt() time.Time {
	if o == nil || o.ExpiresAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLink) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || o.ExpiresAt == nil {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *PaymentLink) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt != nil {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *PaymentLink) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PaymentLink) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLink) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PaymentLink) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PaymentLink) SetStatus(v string) {
	o.Status = &v
}

// GetExternalIdentifier returns the ExternalIdentifier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetExternalIdentifier() string {
	if o == nil || o.ExternalIdentifier.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalIdentifier.Get()
}

// GetExternalIdentifierOk returns a tuple with the ExternalIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetExternalIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExternalIdentifier.Get(), o.ExternalIdentifier.IsSet()
}

// HasExternalIdentifier returns a boolean if a field has been set.
func (o *PaymentLink) HasExternalIdentifier() bool {
	if o != nil && o.ExternalIdentifier.IsSet() {
		return true
	}

	return false
}

// SetExternalIdentifier gets a reference to the given NullableString and assigns it to the ExternalIdentifier field.
func (o *PaymentLink) SetExternalIdentifier(v string) {
	o.ExternalIdentifier.Set(&v)
}
// SetExternalIdentifierNil sets the value for ExternalIdentifier to be an explicit nil
func (o *PaymentLink) SetExternalIdentifierNil() {
	o.ExternalIdentifier.Set(nil)
}

// UnsetExternalIdentifier ensures that no value is present for ExternalIdentifier, not even an explicit nil
func (o *PaymentLink) UnsetExternalIdentifier() {
	o.ExternalIdentifier.Unset()
}

// GetStatementDescriptor returns the StatementDescriptor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetStatementDescriptor() StatementDescriptor {
	if o == nil || o.StatementDescriptor.Get() == nil {
		var ret StatementDescriptor
		return ret
	}
	return *o.StatementDescriptor.Get()
}

// GetStatementDescriptorOk returns a tuple with the StatementDescriptor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetStatementDescriptorOk() (*StatementDescriptor, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StatementDescriptor.Get(), o.StatementDescriptor.IsSet()
}

// HasStatementDescriptor returns a boolean if a field has been set.
func (o *PaymentLink) HasStatementDescriptor() bool {
	if o != nil && o.StatementDescriptor.IsSet() {
		return true
	}

	return false
}

// SetStatementDescriptor gets a reference to the given NullableStatementDescriptor and assigns it to the StatementDescriptor field.
func (o *PaymentLink) SetStatementDescriptor(v StatementDescriptor) {
	o.StatementDescriptor.Set(&v)
}
// SetStatementDescriptorNil sets the value for StatementDescriptor to be an explicit nil
func (o *PaymentLink) SetStatementDescriptorNil() {
	o.StatementDescriptor.Set(nil)
}

// UnsetStatementDescriptor ensures that no value is present for StatementDescriptor, not even an explicit nil
func (o *PaymentLink) UnsetStatementDescriptor() {
	o.StatementDescriptor.Unset()
}

// GetLocale returns the Locale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetLocale() string {
	if o == nil || o.Locale.Get() == nil {
		var ret string
		return ret
	}
	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetLocaleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// HasLocale returns a boolean if a field has been set.
func (o *PaymentLink) HasLocale() bool {
	if o != nil && o.Locale.IsSet() {
		return true
	}

	return false
}

// SetLocale gets a reference to the given NullableString and assigns it to the Locale field.
func (o *PaymentLink) SetLocale(v string) {
	o.Locale.Set(&v)
}
// SetLocaleNil sets the value for Locale to be an explicit nil
func (o *PaymentLink) SetLocaleNil() {
	o.Locale.Set(nil)
}

// UnsetLocale ensures that no value is present for Locale, not even an explicit nil
func (o *PaymentLink) UnsetLocale() {
	o.Locale.Unset()
}

// GetMerchantName returns the MerchantName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetMerchantName() string {
	if o == nil || o.MerchantName.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantName.Get()
}

// GetMerchantNameOk returns a tuple with the MerchantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetMerchantNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantName.Get(), o.MerchantName.IsSet()
}

// HasMerchantName returns a boolean if a field has been set.
func (o *PaymentLink) HasMerchantName() bool {
	if o != nil && o.MerchantName.IsSet() {
		return true
	}

	return false
}

// SetMerchantName gets a reference to the given NullableString and assigns it to the MerchantName field.
func (o *PaymentLink) SetMerchantName(v string) {
	o.MerchantName.Set(&v)
}
// SetMerchantNameNil sets the value for MerchantName to be an explicit nil
func (o *PaymentLink) SetMerchantNameNil() {
	o.MerchantName.Set(nil)
}

// UnsetMerchantName ensures that no value is present for MerchantName, not even an explicit nil
func (o *PaymentLink) UnsetMerchantName() {
	o.MerchantName.Unset()
}

// GetMerchantUrl returns the MerchantUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetMerchantUrl() string {
	if o == nil || o.MerchantUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantUrl.Get()
}

// GetMerchantUrlOk returns a tuple with the MerchantUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetMerchantUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantUrl.Get(), o.MerchantUrl.IsSet()
}

// HasMerchantUrl returns a boolean if a field has been set.
func (o *PaymentLink) HasMerchantUrl() bool {
	if o != nil && o.MerchantUrl.IsSet() {
		return true
	}

	return false
}

// SetMerchantUrl gets a reference to the given NullableString and assigns it to the MerchantUrl field.
func (o *PaymentLink) SetMerchantUrl(v string) {
	o.MerchantUrl.Set(&v)
}
// SetMerchantUrlNil sets the value for MerchantUrl to be an explicit nil
func (o *PaymentLink) SetMerchantUrlNil() {
	o.MerchantUrl.Set(nil)
}

// UnsetMerchantUrl ensures that no value is present for MerchantUrl, not even an explicit nil
func (o *PaymentLink) UnsetMerchantUrl() {
	o.MerchantUrl.Unset()
}

// GetMerchantBannerUrl returns the MerchantBannerUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetMerchantBannerUrl() string {
	if o == nil || o.MerchantBannerUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantBannerUrl.Get()
}

// GetMerchantBannerUrlOk returns a tuple with the MerchantBannerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetMerchantBannerUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantBannerUrl.Get(), o.MerchantBannerUrl.IsSet()
}

// HasMerchantBannerUrl returns a boolean if a field has been set.
func (o *PaymentLink) HasMerchantBannerUrl() bool {
	if o != nil && o.MerchantBannerUrl.IsSet() {
		return true
	}

	return false
}

// SetMerchantBannerUrl gets a reference to the given NullableString and assigns it to the MerchantBannerUrl field.
func (o *PaymentLink) SetMerchantBannerUrl(v string) {
	o.MerchantBannerUrl.Set(&v)
}
// SetMerchantBannerUrlNil sets the value for MerchantBannerUrl to be an explicit nil
func (o *PaymentLink) SetMerchantBannerUrlNil() {
	o.MerchantBannerUrl.Set(nil)
}

// UnsetMerchantBannerUrl ensures that no value is present for MerchantBannerUrl, not even an explicit nil
func (o *PaymentLink) UnsetMerchantBannerUrl() {
	o.MerchantBannerUrl.Unset()
}

// GetMerchantColor returns the MerchantColor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetMerchantColor() string {
	if o == nil || o.MerchantColor.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantColor.Get()
}

// GetMerchantColorOk returns a tuple with the MerchantColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetMerchantColorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantColor.Get(), o.MerchantColor.IsSet()
}

// HasMerchantColor returns a boolean if a field has been set.
func (o *PaymentLink) HasMerchantColor() bool {
	if o != nil && o.MerchantColor.IsSet() {
		return true
	}

	return false
}

// SetMerchantColor gets a reference to the given NullableString and assigns it to the MerchantColor field.
func (o *PaymentLink) SetMerchantColor(v string) {
	o.MerchantColor.Set(&v)
}
// SetMerchantColorNil sets the value for MerchantColor to be an explicit nil
func (o *PaymentLink) SetMerchantColorNil() {
	o.MerchantColor.Set(nil)
}

// UnsetMerchantColor ensures that no value is present for MerchantColor, not even an explicit nil
func (o *PaymentLink) UnsetMerchantColor() {
	o.MerchantColor.Unset()
}

// GetMerchantMessage returns the MerchantMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetMerchantMessage() string {
	if o == nil || o.MerchantMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantMessage.Get()
}

// GetMerchantMessageOk returns a tuple with the MerchantMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetMerchantMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantMessage.Get(), o.MerchantMessage.IsSet()
}

// HasMerchantMessage returns a boolean if a field has been set.
func (o *PaymentLink) HasMerchantMessage() bool {
	if o != nil && o.MerchantMessage.IsSet() {
		return true
	}

	return false
}

// SetMerchantMessage gets a reference to the given NullableString and assigns it to the MerchantMessage field.
func (o *PaymentLink) SetMerchantMessage(v string) {
	o.MerchantMessage.Set(&v)
}
// SetMerchantMessageNil sets the value for MerchantMessage to be an explicit nil
func (o *PaymentLink) SetMerchantMessageNil() {
	o.MerchantMessage.Set(nil)
}

// UnsetMerchantMessage ensures that no value is present for MerchantMessage, not even an explicit nil
func (o *PaymentLink) UnsetMerchantMessage() {
	o.MerchantMessage.Unset()
}

// GetMerchantTermsAndConditionsUrl returns the MerchantTermsAndConditionsUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetMerchantTermsAndConditionsUrl() string {
	if o == nil || o.MerchantTermsAndConditionsUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantTermsAndConditionsUrl.Get()
}

// GetMerchantTermsAndConditionsUrlOk returns a tuple with the MerchantTermsAndConditionsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetMerchantTermsAndConditionsUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantTermsAndConditionsUrl.Get(), o.MerchantTermsAndConditionsUrl.IsSet()
}

// HasMerchantTermsAndConditionsUrl returns a boolean if a field has been set.
func (o *PaymentLink) HasMerchantTermsAndConditionsUrl() bool {
	if o != nil && o.MerchantTermsAndConditionsUrl.IsSet() {
		return true
	}

	return false
}

// SetMerchantTermsAndConditionsUrl gets a reference to the given NullableString and assigns it to the MerchantTermsAndConditionsUrl field.
func (o *PaymentLink) SetMerchantTermsAndConditionsUrl(v string) {
	o.MerchantTermsAndConditionsUrl.Set(&v)
}
// SetMerchantTermsAndConditionsUrlNil sets the value for MerchantTermsAndConditionsUrl to be an explicit nil
func (o *PaymentLink) SetMerchantTermsAndConditionsUrlNil() {
	o.MerchantTermsAndConditionsUrl.Set(nil)
}

// UnsetMerchantTermsAndConditionsUrl ensures that no value is present for MerchantTermsAndConditionsUrl, not even an explicit nil
func (o *PaymentLink) UnsetMerchantTermsAndConditionsUrl() {
	o.MerchantTermsAndConditionsUrl.Unset()
}

// GetMerchantFaviconUrl returns the MerchantFaviconUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetMerchantFaviconUrl() string {
	if o == nil || o.MerchantFaviconUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantFaviconUrl.Get()
}

// GetMerchantFaviconUrlOk returns a tuple with the MerchantFaviconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetMerchantFaviconUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantFaviconUrl.Get(), o.MerchantFaviconUrl.IsSet()
}

// HasMerchantFaviconUrl returns a boolean if a field has been set.
func (o *PaymentLink) HasMerchantFaviconUrl() bool {
	if o != nil && o.MerchantFaviconUrl.IsSet() {
		return true
	}

	return false
}

// SetMerchantFaviconUrl gets a reference to the given NullableString and assigns it to the MerchantFaviconUrl field.
func (o *PaymentLink) SetMerchantFaviconUrl(v string) {
	o.MerchantFaviconUrl.Set(&v)
}
// SetMerchantFaviconUrlNil sets the value for MerchantFaviconUrl to be an explicit nil
func (o *PaymentLink) SetMerchantFaviconUrlNil() {
	o.MerchantFaviconUrl.Set(nil)
}

// UnsetMerchantFaviconUrl ensures that no value is present for MerchantFaviconUrl, not even an explicit nil
func (o *PaymentLink) UnsetMerchantFaviconUrl() {
	o.MerchantFaviconUrl.Unset()
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetCountry() string {
	if o == nil || o.Country.Get() == nil {
		var ret string
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *PaymentLink) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableString and assigns it to the Country field.
func (o *PaymentLink) SetCountry(v string) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *PaymentLink) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *PaymentLink) UnsetCountry() {
	o.Country.Unset()
}

// GetIntent returns the Intent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetIntent() string {
	if o == nil || o.Intent.Get() == nil {
		var ret string
		return ret
	}
	return *o.Intent.Get()
}

// GetIntentOk returns a tuple with the Intent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetIntentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Intent.Get(), o.Intent.IsSet()
}

// HasIntent returns a boolean if a field has been set.
func (o *PaymentLink) HasIntent() bool {
	if o != nil && o.Intent.IsSet() {
		return true
	}

	return false
}

// SetIntent gets a reference to the given NullableString and assigns it to the Intent field.
func (o *PaymentLink) SetIntent(v string) {
	o.Intent.Set(&v)
}
// SetIntentNil sets the value for Intent to be an explicit nil
func (o *PaymentLink) SetIntentNil() {
	o.Intent.Set(nil)
}

// UnsetIntent ensures that no value is present for Intent, not even an explicit nil
func (o *PaymentLink) UnsetIntent() {
	o.Intent.Unset()
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetReturnUrl() string {
	if o == nil || o.ReturnUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReturnUrl.Get()
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetReturnUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ReturnUrl.Get(), o.ReturnUrl.IsSet()
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *PaymentLink) HasReturnUrl() bool {
	if o != nil && o.ReturnUrl.IsSet() {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given NullableString and assigns it to the ReturnUrl field.
func (o *PaymentLink) SetReturnUrl(v string) {
	o.ReturnUrl.Set(&v)
}
// SetReturnUrlNil sets the value for ReturnUrl to be an explicit nil
func (o *PaymentLink) SetReturnUrlNil() {
	o.ReturnUrl.Set(nil)
}

// UnsetReturnUrl ensures that no value is present for ReturnUrl, not even an explicit nil
func (o *PaymentLink) UnsetReturnUrl() {
	o.ReturnUrl.Unset()
}

// GetCartItems returns the CartItems field value if set, zero value otherwise.
func (o *PaymentLink) GetCartItems() []CartItem {
	if o == nil || o.CartItems == nil {
		var ret []CartItem
		return ret
	}
	return *o.CartItems
}

// GetCartItemsOk returns a tuple with the CartItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentLink) GetCartItemsOk() (*[]CartItem, bool) {
	if o == nil || o.CartItems == nil {
		return nil, false
	}
	return o.CartItems, true
}

// HasCartItems returns a boolean if a field has been set.
func (o *PaymentLink) HasCartItems() bool {
	if o != nil && o.CartItems != nil {
		return true
	}

	return false
}

// SetCartItems gets a reference to the given []CartItem and assigns it to the CartItems field.
func (o *PaymentLink) SetCartItems(v []CartItem) {
	o.CartItems = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetMetadata() map[string]string {
	if o == nil  {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PaymentLink) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *PaymentLink) SetMetadata(v map[string]string) {
	o.Metadata = v
}

// GetPaymentSource returns the PaymentSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetPaymentSource() string {
	if o == nil || o.PaymentSource.Get() == nil {
		var ret string
		return ret
	}
	return *o.PaymentSource.Get()
}

// GetPaymentSourceOk returns a tuple with the PaymentSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetPaymentSourceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PaymentSource.Get(), o.PaymentSource.IsSet()
}

// HasPaymentSource returns a boolean if a field has been set.
func (o *PaymentLink) HasPaymentSource() bool {
	if o != nil && o.PaymentSource.IsSet() {
		return true
	}

	return false
}

// SetPaymentSource gets a reference to the given NullableString and assigns it to the PaymentSource field.
func (o *PaymentLink) SetPaymentSource(v string) {
	o.PaymentSource.Set(&v)
}
// SetPaymentSourceNil sets the value for PaymentSource to be an explicit nil
func (o *PaymentLink) SetPaymentSourceNil() {
	o.PaymentSource.Set(nil)
}

// UnsetPaymentSource ensures that no value is present for PaymentSource, not even an explicit nil
func (o *PaymentLink) UnsetPaymentSource() {
	o.PaymentSource.Unset()
}

// GetBuyer returns the Buyer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetBuyer() BuyerSnapshot {
	if o == nil || o.Buyer.Get() == nil {
		var ret BuyerSnapshot
		return ret
	}
	return *o.Buyer.Get()
}

// GetBuyerOk returns a tuple with the Buyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetBuyerOk() (*BuyerSnapshot, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Buyer.Get(), o.Buyer.IsSet()
}

// HasBuyer returns a boolean if a field has been set.
func (o *PaymentLink) HasBuyer() bool {
	if o != nil && o.Buyer.IsSet() {
		return true
	}

	return false
}

// SetBuyer gets a reference to the given NullableBuyerSnapshot and assigns it to the Buyer field.
func (o *PaymentLink) SetBuyer(v BuyerSnapshot) {
	o.Buyer.Set(&v)
}
// SetBuyerNil sets the value for Buyer to be an explicit nil
func (o *PaymentLink) SetBuyerNil() {
	o.Buyer.Set(nil)
}

// UnsetBuyer ensures that no value is present for Buyer, not even an explicit nil
func (o *PaymentLink) UnsetBuyer() {
	o.Buyer.Unset()
}

// GetShippingDetails returns the ShippingDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaymentLink) GetShippingDetails() ShippingDetail {
	if o == nil || o.ShippingDetails.Get() == nil {
		var ret ShippingDetail
		return ret
	}
	return *o.ShippingDetails.Get()
}

// GetShippingDetailsOk returns a tuple with the ShippingDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaymentLink) GetShippingDetailsOk() (*ShippingDetail, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShippingDetails.Get(), o.ShippingDetails.IsSet()
}

// HasShippingDetails returns a boolean if a field has been set.
func (o *PaymentLink) HasShippingDetails() bool {
	if o != nil && o.ShippingDetails.IsSet() {
		return true
	}

	return false
}

// SetShippingDetails gets a reference to the given NullableShippingDetail and assigns it to the ShippingDetails field.
func (o *PaymentLink) SetShippingDetails(v ShippingDetail) {
	o.ShippingDetails.Set(&v)
}
// SetShippingDetailsNil sets the value for ShippingDetails to be an explicit nil
func (o *PaymentLink) SetShippingDetailsNil() {
	o.ShippingDetails.Set(nil)
}

// UnsetShippingDetails ensures that no value is present for ShippingDetails, not even an explicit nil
func (o *PaymentLink) UnsetShippingDetails() {
	o.ShippingDetails.Unset()
}

func (o PaymentLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.ExpiresAt != nil {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.ExternalIdentifier.IsSet() {
		toSerialize["external_identifier"] = o.ExternalIdentifier.Get()
	}
	if o.StatementDescriptor.IsSet() {
		toSerialize["statement_descriptor"] = o.StatementDescriptor.Get()
	}
	if o.Locale.IsSet() {
		toSerialize["locale"] = o.Locale.Get()
	}
	if o.MerchantName.IsSet() {
		toSerialize["merchant_name"] = o.MerchantName.Get()
	}
	if o.MerchantUrl.IsSet() {
		toSerialize["merchant_url"] = o.MerchantUrl.Get()
	}
	if o.MerchantBannerUrl.IsSet() {
		toSerialize["merchant_banner_url"] = o.MerchantBannerUrl.Get()
	}
	if o.MerchantColor.IsSet() {
		toSerialize["merchant_color"] = o.MerchantColor.Get()
	}
	if o.MerchantMessage.IsSet() {
		toSerialize["merchant_message"] = o.MerchantMessage.Get()
	}
	if o.MerchantTermsAndConditionsUrl.IsSet() {
		toSerialize["merchant_terms_and_conditions_url"] = o.MerchantTermsAndConditionsUrl.Get()
	}
	if o.MerchantFaviconUrl.IsSet() {
		toSerialize["merchant_favicon_url"] = o.MerchantFaviconUrl.Get()
	}
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	if o.Intent.IsSet() {
		toSerialize["intent"] = o.Intent.Get()
	}
	if o.ReturnUrl.IsSet() {
		toSerialize["return_url"] = o.ReturnUrl.Get()
	}
	if o.CartItems != nil {
		toSerialize["cart_items"] = o.CartItems
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.PaymentSource.IsSet() {
		toSerialize["payment_source"] = o.PaymentSource.Get()
	}
	if o.Buyer.IsSet() {
		toSerialize["buyer"] = o.Buyer.Get()
	}
	if o.ShippingDetails.IsSet() {
		toSerialize["shipping_details"] = o.ShippingDetails.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentLink struct {
	value *PaymentLink
	isSet bool
}

func (v NullablePaymentLink) Get() *PaymentLink {
	return v.value
}

func (v *NullablePaymentLink) Set(val *PaymentLink) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentLink) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentLink(val *PaymentLink) *NullablePaymentLink {
	return &NullablePaymentLink{value: val, isSet: true}
}

func (v NullablePaymentLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


