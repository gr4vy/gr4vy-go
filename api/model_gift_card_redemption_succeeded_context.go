/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// GiftCardRedemptionSucceededContext Additional context for this event.
type GiftCardRedemptionSucceededContext struct {
	// The unique ID of the Gift Card service used.
	GiftCardServiceId *string `json:"gift_card_service_id,omitempty"`
	// The name of the Gift Card service used.
	GiftCardServiceName *string `json:"gift_card_service_name,omitempty"`
	// The Gift Card service definition used.
	GiftCardServiceDefinitionId *string `json:"gift_card_service_definition_id,omitempty"`
	// The endpoint for the request.
	Url NullableString `json:"url,omitempty"`
	// The HTTP body sent to the Gift Card provider.
	Request *string `json:"request,omitempty"`
	// The HTTP body received from the Gift Card provider.
	Response *string `json:"response,omitempty"`
	// The HTTP response status code from the Gift Card provider.
	ResponseStatusCode *float32 `json:"response_status_code,omitempty"`
}

// NewGiftCardRedemptionSucceededContext instantiates a new GiftCardRedemptionSucceededContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGiftCardRedemptionSucceededContext() *GiftCardRedemptionSucceededContext {
	this := GiftCardRedemptionSucceededContext{}
	return &this
}

// NewGiftCardRedemptionSucceededContextWithDefaults instantiates a new GiftCardRedemptionSucceededContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGiftCardRedemptionSucceededContextWithDefaults() *GiftCardRedemptionSucceededContext {
	this := GiftCardRedemptionSucceededContext{}
	return &this
}

// GetGiftCardServiceId returns the GiftCardServiceId field value if set, zero value otherwise.
func (o *GiftCardRedemptionSucceededContext) GetGiftCardServiceId() string {
	if o == nil || o.GiftCardServiceId == nil {
		var ret string
		return ret
	}
	return *o.GiftCardServiceId
}

// GetGiftCardServiceIdOk returns a tuple with the GiftCardServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionSucceededContext) GetGiftCardServiceIdOk() (*string, bool) {
	if o == nil || o.GiftCardServiceId == nil {
		return nil, false
	}
	return o.GiftCardServiceId, true
}

// HasGiftCardServiceId returns a boolean if a field has been set.
func (o *GiftCardRedemptionSucceededContext) HasGiftCardServiceId() bool {
	if o != nil && o.GiftCardServiceId != nil {
		return true
	}

	return false
}

// SetGiftCardServiceId gets a reference to the given string and assigns it to the GiftCardServiceId field.
func (o *GiftCardRedemptionSucceededContext) SetGiftCardServiceId(v string) {
	o.GiftCardServiceId = &v
}

// GetGiftCardServiceName returns the GiftCardServiceName field value if set, zero value otherwise.
func (o *GiftCardRedemptionSucceededContext) GetGiftCardServiceName() string {
	if o == nil || o.GiftCardServiceName == nil {
		var ret string
		return ret
	}
	return *o.GiftCardServiceName
}

// GetGiftCardServiceNameOk returns a tuple with the GiftCardServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionSucceededContext) GetGiftCardServiceNameOk() (*string, bool) {
	if o == nil || o.GiftCardServiceName == nil {
		return nil, false
	}
	return o.GiftCardServiceName, true
}

// HasGiftCardServiceName returns a boolean if a field has been set.
func (o *GiftCardRedemptionSucceededContext) HasGiftCardServiceName() bool {
	if o != nil && o.GiftCardServiceName != nil {
		return true
	}

	return false
}

// SetGiftCardServiceName gets a reference to the given string and assigns it to the GiftCardServiceName field.
func (o *GiftCardRedemptionSucceededContext) SetGiftCardServiceName(v string) {
	o.GiftCardServiceName = &v
}

// GetGiftCardServiceDefinitionId returns the GiftCardServiceDefinitionId field value if set, zero value otherwise.
func (o *GiftCardRedemptionSucceededContext) GetGiftCardServiceDefinitionId() string {
	if o == nil || o.GiftCardServiceDefinitionId == nil {
		var ret string
		return ret
	}
	return *o.GiftCardServiceDefinitionId
}

// GetGiftCardServiceDefinitionIdOk returns a tuple with the GiftCardServiceDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionSucceededContext) GetGiftCardServiceDefinitionIdOk() (*string, bool) {
	if o == nil || o.GiftCardServiceDefinitionId == nil {
		return nil, false
	}
	return o.GiftCardServiceDefinitionId, true
}

// HasGiftCardServiceDefinitionId returns a boolean if a field has been set.
func (o *GiftCardRedemptionSucceededContext) HasGiftCardServiceDefinitionId() bool {
	if o != nil && o.GiftCardServiceDefinitionId != nil {
		return true
	}

	return false
}

// SetGiftCardServiceDefinitionId gets a reference to the given string and assigns it to the GiftCardServiceDefinitionId field.
func (o *GiftCardRedemptionSucceededContext) SetGiftCardServiceDefinitionId(v string) {
	o.GiftCardServiceDefinitionId = &v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GiftCardRedemptionSucceededContext) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GiftCardRedemptionSucceededContext) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *GiftCardRedemptionSucceededContext) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *GiftCardRedemptionSucceededContext) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *GiftCardRedemptionSucceededContext) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *GiftCardRedemptionSucceededContext) UnsetUrl() {
	o.Url.Unset()
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *GiftCardRedemptionSucceededContext) GetRequest() string {
	if o == nil || o.Request == nil {
		var ret string
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionSucceededContext) GetRequestOk() (*string, bool) {
	if o == nil || o.Request == nil {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *GiftCardRedemptionSucceededContext) HasRequest() bool {
	if o != nil && o.Request != nil {
		return true
	}

	return false
}

// SetRequest gets a reference to the given string and assigns it to the Request field.
func (o *GiftCardRedemptionSucceededContext) SetRequest(v string) {
	o.Request = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *GiftCardRedemptionSucceededContext) GetResponse() string {
	if o == nil || o.Response == nil {
		var ret string
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionSucceededContext) GetResponseOk() (*string, bool) {
	if o == nil || o.Response == nil {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *GiftCardRedemptionSucceededContext) HasResponse() bool {
	if o != nil && o.Response != nil {
		return true
	}

	return false
}

// SetResponse gets a reference to the given string and assigns it to the Response field.
func (o *GiftCardRedemptionSucceededContext) SetResponse(v string) {
	o.Response = &v
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise.
func (o *GiftCardRedemptionSucceededContext) GetResponseStatusCode() float32 {
	if o == nil || o.ResponseStatusCode == nil {
		var ret float32
		return ret
	}
	return *o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardRedemptionSucceededContext) GetResponseStatusCodeOk() (*float32, bool) {
	if o == nil || o.ResponseStatusCode == nil {
		return nil, false
	}
	return o.ResponseStatusCode, true
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *GiftCardRedemptionSucceededContext) HasResponseStatusCode() bool {
	if o != nil && o.ResponseStatusCode != nil {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given float32 and assigns it to the ResponseStatusCode field.
func (o *GiftCardRedemptionSucceededContext) SetResponseStatusCode(v float32) {
	o.ResponseStatusCode = &v
}

func (o GiftCardRedemptionSucceededContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GiftCardServiceId != nil {
		toSerialize["gift_card_service_id"] = o.GiftCardServiceId
	}
	if o.GiftCardServiceName != nil {
		toSerialize["gift_card_service_name"] = o.GiftCardServiceName
	}
	if o.GiftCardServiceDefinitionId != nil {
		toSerialize["gift_card_service_definition_id"] = o.GiftCardServiceDefinitionId
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Request != nil {
		toSerialize["request"] = o.Request
	}
	if o.Response != nil {
		toSerialize["response"] = o.Response
	}
	if o.ResponseStatusCode != nil {
		toSerialize["response_status_code"] = o.ResponseStatusCode
	}
	return json.Marshal(toSerialize)
}

type NullableGiftCardRedemptionSucceededContext struct {
	value *GiftCardRedemptionSucceededContext
	isSet bool
}

func (v NullableGiftCardRedemptionSucceededContext) Get() *GiftCardRedemptionSucceededContext {
	return v.value
}

func (v *NullableGiftCardRedemptionSucceededContext) Set(val *GiftCardRedemptionSucceededContext) {
	v.value = val
	v.isSet = true
}

func (v NullableGiftCardRedemptionSucceededContext) IsSet() bool {
	return v.isSet
}

func (v *NullableGiftCardRedemptionSucceededContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGiftCardRedemptionSucceededContext(val *GiftCardRedemptionSucceededContext) *NullableGiftCardRedemptionSucceededContext {
	return &NullableGiftCardRedemptionSucceededContext{value: val, isSet: true}
}

func (v NullableGiftCardRedemptionSucceededContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGiftCardRedemptionSucceededContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


