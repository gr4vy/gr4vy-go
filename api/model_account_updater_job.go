/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
	"time"
)

// AccountUpdaterJob An Account Updater job.
type AccountUpdaterJob struct {
	// The type of this resource. Is always `account-updater-job`.
	Type *string `json:"type,omitempty"`
	// The unique identifier for this Account Updater job.
	Id *string `json:"id,omitempty"`
	// The unique ID for a merchant account.
	MerchantAccountId *string `json:"merchant_account_id,omitempty"`
	// The date and time when this Account Updater job was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The date and time when this Account Updater job was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// A list of inquiries associated with this Account Updater job.
	Inquiries *[]AccountUpdaterInquirySummary `json:"inquiries,omitempty"`
}

// NewAccountUpdaterJob instantiates a new AccountUpdaterJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountUpdaterJob() *AccountUpdaterJob {
	this := AccountUpdaterJob{}
	return &this
}

// NewAccountUpdaterJobWithDefaults instantiates a new AccountUpdaterJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountUpdaterJobWithDefaults() *AccountUpdaterJob {
	this := AccountUpdaterJob{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AccountUpdaterJob) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdaterJob) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AccountUpdaterJob) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AccountUpdaterJob) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountUpdaterJob) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdaterJob) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountUpdaterJob) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountUpdaterJob) SetId(v string) {
	o.Id = &v
}

// GetMerchantAccountId returns the MerchantAccountId field value if set, zero value otherwise.
func (o *AccountUpdaterJob) GetMerchantAccountId() string {
	if o == nil || o.MerchantAccountId == nil {
		var ret string
		return ret
	}
	return *o.MerchantAccountId
}

// GetMerchantAccountIdOk returns a tuple with the MerchantAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdaterJob) GetMerchantAccountIdOk() (*string, bool) {
	if o == nil || o.MerchantAccountId == nil {
		return nil, false
	}
	return o.MerchantAccountId, true
}

// HasMerchantAccountId returns a boolean if a field has been set.
func (o *AccountUpdaterJob) HasMerchantAccountId() bool {
	if o != nil && o.MerchantAccountId != nil {
		return true
	}

	return false
}

// SetMerchantAccountId gets a reference to the given string and assigns it to the MerchantAccountId field.
func (o *AccountUpdaterJob) SetMerchantAccountId(v string) {
	o.MerchantAccountId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AccountUpdaterJob) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdaterJob) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AccountUpdaterJob) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AccountUpdaterJob) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AccountUpdaterJob) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdaterJob) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AccountUpdaterJob) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *AccountUpdaterJob) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetInquiries returns the Inquiries field value if set, zero value otherwise.
func (o *AccountUpdaterJob) GetInquiries() []AccountUpdaterInquirySummary {
	if o == nil || o.Inquiries == nil {
		var ret []AccountUpdaterInquirySummary
		return ret
	}
	return *o.Inquiries
}

// GetInquiriesOk returns a tuple with the Inquiries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdaterJob) GetInquiriesOk() (*[]AccountUpdaterInquirySummary, bool) {
	if o == nil || o.Inquiries == nil {
		return nil, false
	}
	return o.Inquiries, true
}

// HasInquiries returns a boolean if a field has been set.
func (o *AccountUpdaterJob) HasInquiries() bool {
	if o != nil && o.Inquiries != nil {
		return true
	}

	return false
}

// SetInquiries gets a reference to the given []AccountUpdaterInquirySummary and assigns it to the Inquiries field.
func (o *AccountUpdaterJob) SetInquiries(v []AccountUpdaterInquirySummary) {
	o.Inquiries = &v
}

func (o AccountUpdaterJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MerchantAccountId != nil {
		toSerialize["merchant_account_id"] = o.MerchantAccountId
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Inquiries != nil {
		toSerialize["inquiries"] = o.Inquiries
	}
	return json.Marshal(toSerialize)
}

type NullableAccountUpdaterJob struct {
	value *AccountUpdaterJob
	isSet bool
}

func (v NullableAccountUpdaterJob) Get() *AccountUpdaterJob {
	return v.value
}

func (v *NullableAccountUpdaterJob) Set(val *AccountUpdaterJob) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountUpdaterJob) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountUpdaterJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountUpdaterJob(val *AccountUpdaterJob) *NullableAccountUpdaterJob {
	return &NullableAccountUpdaterJob{value: val, isSet: true}
}

func (v NullableAccountUpdaterJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountUpdaterJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


