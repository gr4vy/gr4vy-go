/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptionsForterAntiFraudComments Comments to merchant or beneficiary written by customer.
type ConnectionOptionsForterAntiFraudComments struct {
	// Comments the customer left to the merchant.
	UserCommentsToMerchant NullableString `json:"user_comments_to_merchant,omitempty"`
	// Comments the customer left to the beneficiary of the purchase made.
	MessageToBeneficiary NullableString `json:"message_to_beneficiary,omitempty"`
	// Comments by the merchant.
	MerchantComments NullableString `json:"merchant_comments,omitempty"`
}

// NewConnectionOptionsForterAntiFraudComments instantiates a new ConnectionOptionsForterAntiFraudComments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptionsForterAntiFraudComments() *ConnectionOptionsForterAntiFraudComments {
	this := ConnectionOptionsForterAntiFraudComments{}
	return &this
}

// NewConnectionOptionsForterAntiFraudCommentsWithDefaults instantiates a new ConnectionOptionsForterAntiFraudComments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsForterAntiFraudCommentsWithDefaults() *ConnectionOptionsForterAntiFraudComments {
	this := ConnectionOptionsForterAntiFraudComments{}
	return &this
}

// GetUserCommentsToMerchant returns the UserCommentsToMerchant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsForterAntiFraudComments) GetUserCommentsToMerchant() string {
	if o == nil || o.UserCommentsToMerchant.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserCommentsToMerchant.Get()
}

// GetUserCommentsToMerchantOk returns a tuple with the UserCommentsToMerchant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsForterAntiFraudComments) GetUserCommentsToMerchantOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UserCommentsToMerchant.Get(), o.UserCommentsToMerchant.IsSet()
}

// HasUserCommentsToMerchant returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudComments) HasUserCommentsToMerchant() bool {
	if o != nil && o.UserCommentsToMerchant.IsSet() {
		return true
	}

	return false
}

// SetUserCommentsToMerchant gets a reference to the given NullableString and assigns it to the UserCommentsToMerchant field.
func (o *ConnectionOptionsForterAntiFraudComments) SetUserCommentsToMerchant(v string) {
	o.UserCommentsToMerchant.Set(&v)
}
// SetUserCommentsToMerchantNil sets the value for UserCommentsToMerchant to be an explicit nil
func (o *ConnectionOptionsForterAntiFraudComments) SetUserCommentsToMerchantNil() {
	o.UserCommentsToMerchant.Set(nil)
}

// UnsetUserCommentsToMerchant ensures that no value is present for UserCommentsToMerchant, not even an explicit nil
func (o *ConnectionOptionsForterAntiFraudComments) UnsetUserCommentsToMerchant() {
	o.UserCommentsToMerchant.Unset()
}

// GetMessageToBeneficiary returns the MessageToBeneficiary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsForterAntiFraudComments) GetMessageToBeneficiary() string {
	if o == nil || o.MessageToBeneficiary.Get() == nil {
		var ret string
		return ret
	}
	return *o.MessageToBeneficiary.Get()
}

// GetMessageToBeneficiaryOk returns a tuple with the MessageToBeneficiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsForterAntiFraudComments) GetMessageToBeneficiaryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MessageToBeneficiary.Get(), o.MessageToBeneficiary.IsSet()
}

// HasMessageToBeneficiary returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudComments) HasMessageToBeneficiary() bool {
	if o != nil && o.MessageToBeneficiary.IsSet() {
		return true
	}

	return false
}

// SetMessageToBeneficiary gets a reference to the given NullableString and assigns it to the MessageToBeneficiary field.
func (o *ConnectionOptionsForterAntiFraudComments) SetMessageToBeneficiary(v string) {
	o.MessageToBeneficiary.Set(&v)
}
// SetMessageToBeneficiaryNil sets the value for MessageToBeneficiary to be an explicit nil
func (o *ConnectionOptionsForterAntiFraudComments) SetMessageToBeneficiaryNil() {
	o.MessageToBeneficiary.Set(nil)
}

// UnsetMessageToBeneficiary ensures that no value is present for MessageToBeneficiary, not even an explicit nil
func (o *ConnectionOptionsForterAntiFraudComments) UnsetMessageToBeneficiary() {
	o.MessageToBeneficiary.Unset()
}

// GetMerchantComments returns the MerchantComments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsForterAntiFraudComments) GetMerchantComments() string {
	if o == nil || o.MerchantComments.Get() == nil {
		var ret string
		return ret
	}
	return *o.MerchantComments.Get()
}

// GetMerchantCommentsOk returns a tuple with the MerchantComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsForterAntiFraudComments) GetMerchantCommentsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.MerchantComments.Get(), o.MerchantComments.IsSet()
}

// HasMerchantComments returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudComments) HasMerchantComments() bool {
	if o != nil && o.MerchantComments.IsSet() {
		return true
	}

	return false
}

// SetMerchantComments gets a reference to the given NullableString and assigns it to the MerchantComments field.
func (o *ConnectionOptionsForterAntiFraudComments) SetMerchantComments(v string) {
	o.MerchantComments.Set(&v)
}
// SetMerchantCommentsNil sets the value for MerchantComments to be an explicit nil
func (o *ConnectionOptionsForterAntiFraudComments) SetMerchantCommentsNil() {
	o.MerchantComments.Set(nil)
}

// UnsetMerchantComments ensures that no value is present for MerchantComments, not even an explicit nil
func (o *ConnectionOptionsForterAntiFraudComments) UnsetMerchantComments() {
	o.MerchantComments.Unset()
}

func (o ConnectionOptionsForterAntiFraudComments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserCommentsToMerchant.IsSet() {
		toSerialize["user_comments_to_merchant"] = o.UserCommentsToMerchant.Get()
	}
	if o.MessageToBeneficiary.IsSet() {
		toSerialize["message_to_beneficiary"] = o.MessageToBeneficiary.Get()
	}
	if o.MerchantComments.IsSet() {
		toSerialize["merchant_comments"] = o.MerchantComments.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptionsForterAntiFraudComments struct {
	value *ConnectionOptionsForterAntiFraudComments
	isSet bool
}

func (v NullableConnectionOptionsForterAntiFraudComments) Get() *ConnectionOptionsForterAntiFraudComments {
	return v.value
}

func (v *NullableConnectionOptionsForterAntiFraudComments) Set(val *ConnectionOptionsForterAntiFraudComments) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptionsForterAntiFraudComments) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptionsForterAntiFraudComments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptionsForterAntiFraudComments(val *ConnectionOptionsForterAntiFraudComments) *NullableConnectionOptionsForterAntiFraudComments {
	return &NullableConnectionOptionsForterAntiFraudComments{value: val, isSet: true}
}

func (v NullableConnectionOptionsForterAntiFraudComments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptionsForterAntiFraudComments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


