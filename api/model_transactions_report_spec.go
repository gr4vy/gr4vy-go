/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// TransactionsReportSpec The specification of a transactions report.
type TransactionsReportSpec struct {
	// The model (dataset) that the data used for the report is retrieved from.
	Model string `json:"model"`
	Params TransactionsReportSpecParams `json:"params"`
}

// NewTransactionsReportSpec instantiates a new TransactionsReportSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionsReportSpec(model string, params TransactionsReportSpecParams) *TransactionsReportSpec {
	this := TransactionsReportSpec{}
	this.Model = model
	this.Params = params
	return &this
}

// NewTransactionsReportSpecWithDefaults instantiates a new TransactionsReportSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionsReportSpecWithDefaults() *TransactionsReportSpec {
	this := TransactionsReportSpec{}
	return &this
}

// GetModel returns the Model field value
func (o *TransactionsReportSpec) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *TransactionsReportSpec) GetModelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *TransactionsReportSpec) SetModel(v string) {
	o.Model = v
}

// GetParams returns the Params field value
func (o *TransactionsReportSpec) GetParams() TransactionsReportSpecParams {
	if o == nil {
		var ret TransactionsReportSpecParams
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *TransactionsReportSpec) GetParamsOk() (*TransactionsReportSpecParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Params, true
}

// SetParams sets field value
func (o *TransactionsReportSpec) SetParams(v TransactionsReportSpecParams) {
	o.Params = v
}

func (o TransactionsReportSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["model"] = o.Model
	}
	if true {
		toSerialize["params"] = o.Params
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionsReportSpec struct {
	value *TransactionsReportSpec
	isSet bool
}

func (v NullableTransactionsReportSpec) Get() *TransactionsReportSpec {
	return v.value
}

func (v *NullableTransactionsReportSpec) Set(val *TransactionsReportSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionsReportSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionsReportSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionsReportSpec(val *TransactionsReportSpec) *NullableTransactionsReportSpec {
	return &NullableTransactionsReportSpec{value: val, isSet: true}
}

func (v NullableTransactionsReportSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionsReportSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


