/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// DigitalWalletDomain Domain name for a digital wallet.
type DigitalWalletDomain struct {
	// The domain name that a digital wallet can be used on. To use a digital wallet on a website, the domain of the site is required to be in this list.
	DomainName string `json:"domain_name"`
}

// NewDigitalWalletDomain instantiates a new DigitalWalletDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDigitalWalletDomain(domainName string) *DigitalWalletDomain {
	this := DigitalWalletDomain{}
	this.DomainName = domainName
	return &this
}

// NewDigitalWalletDomainWithDefaults instantiates a new DigitalWalletDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDigitalWalletDomainWithDefaults() *DigitalWalletDomain {
	this := DigitalWalletDomain{}
	return &this
}

// GetDomainName returns the DomainName field value
func (o *DigitalWalletDomain) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletDomain) GetDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *DigitalWalletDomain) SetDomainName(v string) {
	o.DomainName = v
}

func (o DigitalWalletDomain) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["domain_name"] = o.DomainName
	}
	return json.Marshal(toSerialize)
}

type NullableDigitalWalletDomain struct {
	value *DigitalWalletDomain
	isSet bool
}

func (v NullableDigitalWalletDomain) Get() *DigitalWalletDomain {
	return v.value
}

func (v *NullableDigitalWalletDomain) Set(val *DigitalWalletDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableDigitalWalletDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableDigitalWalletDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDigitalWalletDomain(val *DigitalWalletDomain) *NullableDigitalWalletDomain {
	return &NullableDigitalWalletDomain{value: val, isSet: true}
}

func (v NullableDigitalWalletDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDigitalWalletDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


