/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// GiftCardServiceUpdateRequest Request body for updating a gift card service.
type GiftCardServiceUpdateRequest struct {
	// A custom name for the gift card service. This will be shown in the Admin UI.
	DisplayName *string `json:"display_name,omitempty"`
	// A list of fields, each containing a key-value pair for each field defined by the definition for this gift card service.
	Fields *[]GiftCardServiceUpdateRequestFields `json:"fields,omitempty"`
	// Defines if this service is currently active or not.
	Active *bool `json:"active,omitempty"`
}

// NewGiftCardServiceUpdateRequest instantiates a new GiftCardServiceUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGiftCardServiceUpdateRequest() *GiftCardServiceUpdateRequest {
	this := GiftCardServiceUpdateRequest{}
	return &this
}

// NewGiftCardServiceUpdateRequestWithDefaults instantiates a new GiftCardServiceUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGiftCardServiceUpdateRequestWithDefaults() *GiftCardServiceUpdateRequest {
	this := GiftCardServiceUpdateRequest{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *GiftCardServiceUpdateRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardServiceUpdateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GiftCardServiceUpdateRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *GiftCardServiceUpdateRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *GiftCardServiceUpdateRequest) GetFields() []GiftCardServiceUpdateRequestFields {
	if o == nil || o.Fields == nil {
		var ret []GiftCardServiceUpdateRequestFields
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardServiceUpdateRequest) GetFieldsOk() (*[]GiftCardServiceUpdateRequestFields, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *GiftCardServiceUpdateRequest) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []GiftCardServiceUpdateRequestFields and assigns it to the Fields field.
func (o *GiftCardServiceUpdateRequest) SetFields(v []GiftCardServiceUpdateRequestFields) {
	o.Fields = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GiftCardServiceUpdateRequest) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GiftCardServiceUpdateRequest) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GiftCardServiceUpdateRequest) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *GiftCardServiceUpdateRequest) SetActive(v bool) {
	o.Active = &v
}

func (o GiftCardServiceUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	return json.Marshal(toSerialize)
}

type NullableGiftCardServiceUpdateRequest struct {
	value *GiftCardServiceUpdateRequest
	isSet bool
}

func (v NullableGiftCardServiceUpdateRequest) Get() *GiftCardServiceUpdateRequest {
	return v.value
}

func (v *NullableGiftCardServiceUpdateRequest) Set(val *GiftCardServiceUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGiftCardServiceUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGiftCardServiceUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGiftCardServiceUpdateRequest(val *GiftCardServiceUpdateRequest) *NullableGiftCardServiceUpdateRequest {
	return &NullableGiftCardServiceUpdateRequest{value: val, isSet: true}
}

func (v NullableGiftCardServiceUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGiftCardServiceUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


