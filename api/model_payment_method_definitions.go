/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// PaymentMethodDefinitions A list of available payment method definitions.
type PaymentMethodDefinitions struct {
	Items *[]PaymentMethodDefinition `json:"items,omitempty"`
}

// NewPaymentMethodDefinitions instantiates a new PaymentMethodDefinitions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentMethodDefinitions() *PaymentMethodDefinitions {
	this := PaymentMethodDefinitions{}
	return &this
}

// NewPaymentMethodDefinitionsWithDefaults instantiates a new PaymentMethodDefinitions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentMethodDefinitionsWithDefaults() *PaymentMethodDefinitions {
	this := PaymentMethodDefinitions{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *PaymentMethodDefinitions) GetItems() []PaymentMethodDefinition {
	if o == nil || o.Items == nil {
		var ret []PaymentMethodDefinition
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentMethodDefinitions) GetItemsOk() (*[]PaymentMethodDefinition, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *PaymentMethodDefinitions) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []PaymentMethodDefinition and assigns it to the Items field.
func (o *PaymentMethodDefinitions) SetItems(v []PaymentMethodDefinition) {
	o.Items = &v
}

func (o PaymentMethodDefinitions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentMethodDefinitions struct {
	value *PaymentMethodDefinitions
	isSet bool
}

func (v NullablePaymentMethodDefinitions) Get() *PaymentMethodDefinitions {
	return v.value
}

func (v *NullablePaymentMethodDefinitions) Set(val *PaymentMethodDefinitions) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentMethodDefinitions) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentMethodDefinitions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentMethodDefinitions(val *PaymentMethodDefinitions) *NullablePaymentMethodDefinitions {
	return &NullablePaymentMethodDefinitions{value: val, isSet: true}
}

func (v NullablePaymentMethodDefinitions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentMethodDefinitions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


