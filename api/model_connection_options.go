/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptions struct for ConnectionOptions
type ConnectionOptions struct {
	CybersourceCard NullableConnectionOptionsCybersourceCard `json:"cybersource-card,omitempty"`
	CybersourceKcp NullableConnectionOptionsCybersourceKcp `json:"cybersource-kcp,omitempty"`
	CybersourceIdeal NullableConnectionOptionsCybersourceIdeal `json:"cybersource-ideal,omitempty"`
	CybersourceAntiFraud NullableConnectionOptionsCybersourceAntiFraud `json:"cybersource-anti-fraud,omitempty"`
	GivingblockGivingblock NullableConnectionOptionsGivingblockGivingblock `json:"givingblock-givingblock,omitempty"`
	ForterAntiFraud NullableConnectionOptionsForterAntiFraud `json:"forter-anti-fraud,omitempty"`
	AdyenCard NullableConnectionOptionsAdyenCard `json:"adyen-card,omitempty"`
	AdyenSepa NullableConnectionOptionsAdyenSepa `json:"adyen-sepa,omitempty"`
	PaypalPaypal NullableConnectionOptionsPaypalPaypal `json:"paypal-paypal,omitempty"`
	PaypalPaypalpaylater NullableConnectionOptionsPaypalPaypal `json:"paypal-paypalpaylater,omitempty"`
	PowertranzCard NullableConnectionOptionsPowertranzCard `json:"powertranz-card,omitempty"`
	StripeCard NullableConnectionOptionsStripeCard `json:"stripe-card,omitempty"`
	FiservCard NullableConnectionOptionsFiservCard `json:"fiserv-card,omitempty"`
}

// NewConnectionOptions instantiates a new ConnectionOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptions() *ConnectionOptions {
	this := ConnectionOptions{}
	return &this
}

// NewConnectionOptionsWithDefaults instantiates a new ConnectionOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsWithDefaults() *ConnectionOptions {
	this := ConnectionOptions{}
	return &this
}

// GetCybersourceCard returns the CybersourceCard field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetCybersourceCard() ConnectionOptionsCybersourceCard {
	if o == nil || o.CybersourceCard.Get() == nil {
		var ret ConnectionOptionsCybersourceCard
		return ret
	}
	return *o.CybersourceCard.Get()
}

// GetCybersourceCardOk returns a tuple with the CybersourceCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetCybersourceCardOk() (*ConnectionOptionsCybersourceCard, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CybersourceCard.Get(), o.CybersourceCard.IsSet()
}

// HasCybersourceCard returns a boolean if a field has been set.
func (o *ConnectionOptions) HasCybersourceCard() bool {
	if o != nil && o.CybersourceCard.IsSet() {
		return true
	}

	return false
}

// SetCybersourceCard gets a reference to the given NullableConnectionOptionsCybersourceCard and assigns it to the CybersourceCard field.
func (o *ConnectionOptions) SetCybersourceCard(v ConnectionOptionsCybersourceCard) {
	o.CybersourceCard.Set(&v)
}
// SetCybersourceCardNil sets the value for CybersourceCard to be an explicit nil
func (o *ConnectionOptions) SetCybersourceCardNil() {
	o.CybersourceCard.Set(nil)
}

// UnsetCybersourceCard ensures that no value is present for CybersourceCard, not even an explicit nil
func (o *ConnectionOptions) UnsetCybersourceCard() {
	o.CybersourceCard.Unset()
}

// GetCybersourceKcp returns the CybersourceKcp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetCybersourceKcp() ConnectionOptionsCybersourceKcp {
	if o == nil || o.CybersourceKcp.Get() == nil {
		var ret ConnectionOptionsCybersourceKcp
		return ret
	}
	return *o.CybersourceKcp.Get()
}

// GetCybersourceKcpOk returns a tuple with the CybersourceKcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetCybersourceKcpOk() (*ConnectionOptionsCybersourceKcp, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CybersourceKcp.Get(), o.CybersourceKcp.IsSet()
}

// HasCybersourceKcp returns a boolean if a field has been set.
func (o *ConnectionOptions) HasCybersourceKcp() bool {
	if o != nil && o.CybersourceKcp.IsSet() {
		return true
	}

	return false
}

// SetCybersourceKcp gets a reference to the given NullableConnectionOptionsCybersourceKcp and assigns it to the CybersourceKcp field.
func (o *ConnectionOptions) SetCybersourceKcp(v ConnectionOptionsCybersourceKcp) {
	o.CybersourceKcp.Set(&v)
}
// SetCybersourceKcpNil sets the value for CybersourceKcp to be an explicit nil
func (o *ConnectionOptions) SetCybersourceKcpNil() {
	o.CybersourceKcp.Set(nil)
}

// UnsetCybersourceKcp ensures that no value is present for CybersourceKcp, not even an explicit nil
func (o *ConnectionOptions) UnsetCybersourceKcp() {
	o.CybersourceKcp.Unset()
}

// GetCybersourceIdeal returns the CybersourceIdeal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetCybersourceIdeal() ConnectionOptionsCybersourceIdeal {
	if o == nil || o.CybersourceIdeal.Get() == nil {
		var ret ConnectionOptionsCybersourceIdeal
		return ret
	}
	return *o.CybersourceIdeal.Get()
}

// GetCybersourceIdealOk returns a tuple with the CybersourceIdeal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetCybersourceIdealOk() (*ConnectionOptionsCybersourceIdeal, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CybersourceIdeal.Get(), o.CybersourceIdeal.IsSet()
}

// HasCybersourceIdeal returns a boolean if a field has been set.
func (o *ConnectionOptions) HasCybersourceIdeal() bool {
	if o != nil && o.CybersourceIdeal.IsSet() {
		return true
	}

	return false
}

// SetCybersourceIdeal gets a reference to the given NullableConnectionOptionsCybersourceIdeal and assigns it to the CybersourceIdeal field.
func (o *ConnectionOptions) SetCybersourceIdeal(v ConnectionOptionsCybersourceIdeal) {
	o.CybersourceIdeal.Set(&v)
}
// SetCybersourceIdealNil sets the value for CybersourceIdeal to be an explicit nil
func (o *ConnectionOptions) SetCybersourceIdealNil() {
	o.CybersourceIdeal.Set(nil)
}

// UnsetCybersourceIdeal ensures that no value is present for CybersourceIdeal, not even an explicit nil
func (o *ConnectionOptions) UnsetCybersourceIdeal() {
	o.CybersourceIdeal.Unset()
}

// GetCybersourceAntiFraud returns the CybersourceAntiFraud field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetCybersourceAntiFraud() ConnectionOptionsCybersourceAntiFraud {
	if o == nil || o.CybersourceAntiFraud.Get() == nil {
		var ret ConnectionOptionsCybersourceAntiFraud
		return ret
	}
	return *o.CybersourceAntiFraud.Get()
}

// GetCybersourceAntiFraudOk returns a tuple with the CybersourceAntiFraud field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetCybersourceAntiFraudOk() (*ConnectionOptionsCybersourceAntiFraud, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CybersourceAntiFraud.Get(), o.CybersourceAntiFraud.IsSet()
}

// HasCybersourceAntiFraud returns a boolean if a field has been set.
func (o *ConnectionOptions) HasCybersourceAntiFraud() bool {
	if o != nil && o.CybersourceAntiFraud.IsSet() {
		return true
	}

	return false
}

// SetCybersourceAntiFraud gets a reference to the given NullableConnectionOptionsCybersourceAntiFraud and assigns it to the CybersourceAntiFraud field.
func (o *ConnectionOptions) SetCybersourceAntiFraud(v ConnectionOptionsCybersourceAntiFraud) {
	o.CybersourceAntiFraud.Set(&v)
}
// SetCybersourceAntiFraudNil sets the value for CybersourceAntiFraud to be an explicit nil
func (o *ConnectionOptions) SetCybersourceAntiFraudNil() {
	o.CybersourceAntiFraud.Set(nil)
}

// UnsetCybersourceAntiFraud ensures that no value is present for CybersourceAntiFraud, not even an explicit nil
func (o *ConnectionOptions) UnsetCybersourceAntiFraud() {
	o.CybersourceAntiFraud.Unset()
}

// GetGivingblockGivingblock returns the GivingblockGivingblock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetGivingblockGivingblock() ConnectionOptionsGivingblockGivingblock {
	if o == nil || o.GivingblockGivingblock.Get() == nil {
		var ret ConnectionOptionsGivingblockGivingblock
		return ret
	}
	return *o.GivingblockGivingblock.Get()
}

// GetGivingblockGivingblockOk returns a tuple with the GivingblockGivingblock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetGivingblockGivingblockOk() (*ConnectionOptionsGivingblockGivingblock, bool) {
	if o == nil  {
		return nil, false
	}
	return o.GivingblockGivingblock.Get(), o.GivingblockGivingblock.IsSet()
}

// HasGivingblockGivingblock returns a boolean if a field has been set.
func (o *ConnectionOptions) HasGivingblockGivingblock() bool {
	if o != nil && o.GivingblockGivingblock.IsSet() {
		return true
	}

	return false
}

// SetGivingblockGivingblock gets a reference to the given NullableConnectionOptionsGivingblockGivingblock and assigns it to the GivingblockGivingblock field.
func (o *ConnectionOptions) SetGivingblockGivingblock(v ConnectionOptionsGivingblockGivingblock) {
	o.GivingblockGivingblock.Set(&v)
}
// SetGivingblockGivingblockNil sets the value for GivingblockGivingblock to be an explicit nil
func (o *ConnectionOptions) SetGivingblockGivingblockNil() {
	o.GivingblockGivingblock.Set(nil)
}

// UnsetGivingblockGivingblock ensures that no value is present for GivingblockGivingblock, not even an explicit nil
func (o *ConnectionOptions) UnsetGivingblockGivingblock() {
	o.GivingblockGivingblock.Unset()
}

// GetForterAntiFraud returns the ForterAntiFraud field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetForterAntiFraud() ConnectionOptionsForterAntiFraud {
	if o == nil || o.ForterAntiFraud.Get() == nil {
		var ret ConnectionOptionsForterAntiFraud
		return ret
	}
	return *o.ForterAntiFraud.Get()
}

// GetForterAntiFraudOk returns a tuple with the ForterAntiFraud field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetForterAntiFraudOk() (*ConnectionOptionsForterAntiFraud, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ForterAntiFraud.Get(), o.ForterAntiFraud.IsSet()
}

// HasForterAntiFraud returns a boolean if a field has been set.
func (o *ConnectionOptions) HasForterAntiFraud() bool {
	if o != nil && o.ForterAntiFraud.IsSet() {
		return true
	}

	return false
}

// SetForterAntiFraud gets a reference to the given NullableConnectionOptionsForterAntiFraud and assigns it to the ForterAntiFraud field.
func (o *ConnectionOptions) SetForterAntiFraud(v ConnectionOptionsForterAntiFraud) {
	o.ForterAntiFraud.Set(&v)
}
// SetForterAntiFraudNil sets the value for ForterAntiFraud to be an explicit nil
func (o *ConnectionOptions) SetForterAntiFraudNil() {
	o.ForterAntiFraud.Set(nil)
}

// UnsetForterAntiFraud ensures that no value is present for ForterAntiFraud, not even an explicit nil
func (o *ConnectionOptions) UnsetForterAntiFraud() {
	o.ForterAntiFraud.Unset()
}

// GetAdyenCard returns the AdyenCard field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetAdyenCard() ConnectionOptionsAdyenCard {
	if o == nil || o.AdyenCard.Get() == nil {
		var ret ConnectionOptionsAdyenCard
		return ret
	}
	return *o.AdyenCard.Get()
}

// GetAdyenCardOk returns a tuple with the AdyenCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetAdyenCardOk() (*ConnectionOptionsAdyenCard, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AdyenCard.Get(), o.AdyenCard.IsSet()
}

// HasAdyenCard returns a boolean if a field has been set.
func (o *ConnectionOptions) HasAdyenCard() bool {
	if o != nil && o.AdyenCard.IsSet() {
		return true
	}

	return false
}

// SetAdyenCard gets a reference to the given NullableConnectionOptionsAdyenCard and assigns it to the AdyenCard field.
func (o *ConnectionOptions) SetAdyenCard(v ConnectionOptionsAdyenCard) {
	o.AdyenCard.Set(&v)
}
// SetAdyenCardNil sets the value for AdyenCard to be an explicit nil
func (o *ConnectionOptions) SetAdyenCardNil() {
	o.AdyenCard.Set(nil)
}

// UnsetAdyenCard ensures that no value is present for AdyenCard, not even an explicit nil
func (o *ConnectionOptions) UnsetAdyenCard() {
	o.AdyenCard.Unset()
}

// GetAdyenSepa returns the AdyenSepa field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetAdyenSepa() ConnectionOptionsAdyenSepa {
	if o == nil || o.AdyenSepa.Get() == nil {
		var ret ConnectionOptionsAdyenSepa
		return ret
	}
	return *o.AdyenSepa.Get()
}

// GetAdyenSepaOk returns a tuple with the AdyenSepa field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetAdyenSepaOk() (*ConnectionOptionsAdyenSepa, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AdyenSepa.Get(), o.AdyenSepa.IsSet()
}

// HasAdyenSepa returns a boolean if a field has been set.
func (o *ConnectionOptions) HasAdyenSepa() bool {
	if o != nil && o.AdyenSepa.IsSet() {
		return true
	}

	return false
}

// SetAdyenSepa gets a reference to the given NullableConnectionOptionsAdyenSepa and assigns it to the AdyenSepa field.
func (o *ConnectionOptions) SetAdyenSepa(v ConnectionOptionsAdyenSepa) {
	o.AdyenSepa.Set(&v)
}
// SetAdyenSepaNil sets the value for AdyenSepa to be an explicit nil
func (o *ConnectionOptions) SetAdyenSepaNil() {
	o.AdyenSepa.Set(nil)
}

// UnsetAdyenSepa ensures that no value is present for AdyenSepa, not even an explicit nil
func (o *ConnectionOptions) UnsetAdyenSepa() {
	o.AdyenSepa.Unset()
}

// GetPaypalPaypal returns the PaypalPaypal field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetPaypalPaypal() ConnectionOptionsPaypalPaypal {
	if o == nil || o.PaypalPaypal.Get() == nil {
		var ret ConnectionOptionsPaypalPaypal
		return ret
	}
	return *o.PaypalPaypal.Get()
}

// GetPaypalPaypalOk returns a tuple with the PaypalPaypal field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetPaypalPaypalOk() (*ConnectionOptionsPaypalPaypal, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PaypalPaypal.Get(), o.PaypalPaypal.IsSet()
}

// HasPaypalPaypal returns a boolean if a field has been set.
func (o *ConnectionOptions) HasPaypalPaypal() bool {
	if o != nil && o.PaypalPaypal.IsSet() {
		return true
	}

	return false
}

// SetPaypalPaypal gets a reference to the given NullableConnectionOptionsPaypalPaypal and assigns it to the PaypalPaypal field.
func (o *ConnectionOptions) SetPaypalPaypal(v ConnectionOptionsPaypalPaypal) {
	o.PaypalPaypal.Set(&v)
}
// SetPaypalPaypalNil sets the value for PaypalPaypal to be an explicit nil
func (o *ConnectionOptions) SetPaypalPaypalNil() {
	o.PaypalPaypal.Set(nil)
}

// UnsetPaypalPaypal ensures that no value is present for PaypalPaypal, not even an explicit nil
func (o *ConnectionOptions) UnsetPaypalPaypal() {
	o.PaypalPaypal.Unset()
}

// GetPaypalPaypalpaylater returns the PaypalPaypalpaylater field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetPaypalPaypalpaylater() ConnectionOptionsPaypalPaypal {
	if o == nil || o.PaypalPaypalpaylater.Get() == nil {
		var ret ConnectionOptionsPaypalPaypal
		return ret
	}
	return *o.PaypalPaypalpaylater.Get()
}

// GetPaypalPaypalpaylaterOk returns a tuple with the PaypalPaypalpaylater field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetPaypalPaypalpaylaterOk() (*ConnectionOptionsPaypalPaypal, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PaypalPaypalpaylater.Get(), o.PaypalPaypalpaylater.IsSet()
}

// HasPaypalPaypalpaylater returns a boolean if a field has been set.
func (o *ConnectionOptions) HasPaypalPaypalpaylater() bool {
	if o != nil && o.PaypalPaypalpaylater.IsSet() {
		return true
	}

	return false
}

// SetPaypalPaypalpaylater gets a reference to the given NullableConnectionOptionsPaypalPaypal and assigns it to the PaypalPaypalpaylater field.
func (o *ConnectionOptions) SetPaypalPaypalpaylater(v ConnectionOptionsPaypalPaypal) {
	o.PaypalPaypalpaylater.Set(&v)
}
// SetPaypalPaypalpaylaterNil sets the value for PaypalPaypalpaylater to be an explicit nil
func (o *ConnectionOptions) SetPaypalPaypalpaylaterNil() {
	o.PaypalPaypalpaylater.Set(nil)
}

// UnsetPaypalPaypalpaylater ensures that no value is present for PaypalPaypalpaylater, not even an explicit nil
func (o *ConnectionOptions) UnsetPaypalPaypalpaylater() {
	o.PaypalPaypalpaylater.Unset()
}

// GetPowertranzCard returns the PowertranzCard field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetPowertranzCard() ConnectionOptionsPowertranzCard {
	if o == nil || o.PowertranzCard.Get() == nil {
		var ret ConnectionOptionsPowertranzCard
		return ret
	}
	return *o.PowertranzCard.Get()
}

// GetPowertranzCardOk returns a tuple with the PowertranzCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetPowertranzCardOk() (*ConnectionOptionsPowertranzCard, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PowertranzCard.Get(), o.PowertranzCard.IsSet()
}

// HasPowertranzCard returns a boolean if a field has been set.
func (o *ConnectionOptions) HasPowertranzCard() bool {
	if o != nil && o.PowertranzCard.IsSet() {
		return true
	}

	return false
}

// SetPowertranzCard gets a reference to the given NullableConnectionOptionsPowertranzCard and assigns it to the PowertranzCard field.
func (o *ConnectionOptions) SetPowertranzCard(v ConnectionOptionsPowertranzCard) {
	o.PowertranzCard.Set(&v)
}
// SetPowertranzCardNil sets the value for PowertranzCard to be an explicit nil
func (o *ConnectionOptions) SetPowertranzCardNil() {
	o.PowertranzCard.Set(nil)
}

// UnsetPowertranzCard ensures that no value is present for PowertranzCard, not even an explicit nil
func (o *ConnectionOptions) UnsetPowertranzCard() {
	o.PowertranzCard.Unset()
}

// GetStripeCard returns the StripeCard field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetStripeCard() ConnectionOptionsStripeCard {
	if o == nil || o.StripeCard.Get() == nil {
		var ret ConnectionOptionsStripeCard
		return ret
	}
	return *o.StripeCard.Get()
}

// GetStripeCardOk returns a tuple with the StripeCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetStripeCardOk() (*ConnectionOptionsStripeCard, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StripeCard.Get(), o.StripeCard.IsSet()
}

// HasStripeCard returns a boolean if a field has been set.
func (o *ConnectionOptions) HasStripeCard() bool {
	if o != nil && o.StripeCard.IsSet() {
		return true
	}

	return false
}

// SetStripeCard gets a reference to the given NullableConnectionOptionsStripeCard and assigns it to the StripeCard field.
func (o *ConnectionOptions) SetStripeCard(v ConnectionOptionsStripeCard) {
	o.StripeCard.Set(&v)
}
// SetStripeCardNil sets the value for StripeCard to be an explicit nil
func (o *ConnectionOptions) SetStripeCardNil() {
	o.StripeCard.Set(nil)
}

// UnsetStripeCard ensures that no value is present for StripeCard, not even an explicit nil
func (o *ConnectionOptions) UnsetStripeCard() {
	o.StripeCard.Unset()
}

// GetFiservCard returns the FiservCard field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetFiservCard() ConnectionOptionsFiservCard {
	if o == nil || o.FiservCard.Get() == nil {
		var ret ConnectionOptionsFiservCard
		return ret
	}
	return *o.FiservCard.Get()
}

// GetFiservCardOk returns a tuple with the FiservCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetFiservCardOk() (*ConnectionOptionsFiservCard, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FiservCard.Get(), o.FiservCard.IsSet()
}

// HasFiservCard returns a boolean if a field has been set.
func (o *ConnectionOptions) HasFiservCard() bool {
	if o != nil && o.FiservCard.IsSet() {
		return true
	}

	return false
}

// SetFiservCard gets a reference to the given NullableConnectionOptionsFiservCard and assigns it to the FiservCard field.
func (o *ConnectionOptions) SetFiservCard(v ConnectionOptionsFiservCard) {
	o.FiservCard.Set(&v)
}
// SetFiservCardNil sets the value for FiservCard to be an explicit nil
func (o *ConnectionOptions) SetFiservCardNil() {
	o.FiservCard.Set(nil)
}

// UnsetFiservCard ensures that no value is present for FiservCard, not even an explicit nil
func (o *ConnectionOptions) UnsetFiservCard() {
	o.FiservCard.Unset()
}

func (o ConnectionOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CybersourceCard.IsSet() {
		toSerialize["cybersource-card"] = o.CybersourceCard.Get()
	}
	if o.CybersourceKcp.IsSet() {
		toSerialize["cybersource-kcp"] = o.CybersourceKcp.Get()
	}
	if o.CybersourceIdeal.IsSet() {
		toSerialize["cybersource-ideal"] = o.CybersourceIdeal.Get()
	}
	if o.CybersourceAntiFraud.IsSet() {
		toSerialize["cybersource-anti-fraud"] = o.CybersourceAntiFraud.Get()
	}
	if o.GivingblockGivingblock.IsSet() {
		toSerialize["givingblock-givingblock"] = o.GivingblockGivingblock.Get()
	}
	if o.ForterAntiFraud.IsSet() {
		toSerialize["forter-anti-fraud"] = o.ForterAntiFraud.Get()
	}
	if o.AdyenCard.IsSet() {
		toSerialize["adyen-card"] = o.AdyenCard.Get()
	}
	if o.AdyenSepa.IsSet() {
		toSerialize["adyen-sepa"] = o.AdyenSepa.Get()
	}
	if o.PaypalPaypal.IsSet() {
		toSerialize["paypal-paypal"] = o.PaypalPaypal.Get()
	}
	if o.PaypalPaypalpaylater.IsSet() {
		toSerialize["paypal-paypalpaylater"] = o.PaypalPaypalpaylater.Get()
	}
	if o.PowertranzCard.IsSet() {
		toSerialize["powertranz-card"] = o.PowertranzCard.Get()
	}
	if o.StripeCard.IsSet() {
		toSerialize["stripe-card"] = o.StripeCard.Get()
	}
	if o.FiservCard.IsSet() {
		toSerialize["fiserv-card"] = o.FiservCard.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptions struct {
	value *ConnectionOptions
	isSet bool
}

func (v NullableConnectionOptions) Get() *ConnectionOptions {
	return v.value
}

func (v *NullableConnectionOptions) Set(val *ConnectionOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptions(val *ConnectionOptions) *NullableConnectionOptions {
	return &NullableConnectionOptions{value: val, isSet: true}
}

func (v NullableConnectionOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


