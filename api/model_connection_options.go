/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptions struct for ConnectionOptions
type ConnectionOptions struct {
	CybersourceAntiFraud NullableConnectionOptionsCybersourceAntiFraud `json:"cybersource-anti-fraud,omitempty"`
	ForterAntiFraud NullableConnectionOptionsForterAntiFraud `json:"forter-anti-fraud,omitempty"`
	AdyenCard NullableConnectionOptionsAdyenCard `json:"adyen-card,omitempty"`
}

// NewConnectionOptions instantiates a new ConnectionOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptions() *ConnectionOptions {
	this := ConnectionOptions{}
	return &this
}

// NewConnectionOptionsWithDefaults instantiates a new ConnectionOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsWithDefaults() *ConnectionOptions {
	this := ConnectionOptions{}
	return &this
}

// GetCybersourceAntiFraud returns the CybersourceAntiFraud field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetCybersourceAntiFraud() ConnectionOptionsCybersourceAntiFraud {
	if o == nil || o.CybersourceAntiFraud.Get() == nil {
		var ret ConnectionOptionsCybersourceAntiFraud
		return ret
	}
	return *o.CybersourceAntiFraud.Get()
}

// GetCybersourceAntiFraudOk returns a tuple with the CybersourceAntiFraud field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetCybersourceAntiFraudOk() (*ConnectionOptionsCybersourceAntiFraud, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CybersourceAntiFraud.Get(), o.CybersourceAntiFraud.IsSet()
}

// HasCybersourceAntiFraud returns a boolean if a field has been set.
func (o *ConnectionOptions) HasCybersourceAntiFraud() bool {
	if o != nil && o.CybersourceAntiFraud.IsSet() {
		return true
	}

	return false
}

// SetCybersourceAntiFraud gets a reference to the given NullableConnectionOptionsCybersourceAntiFraud and assigns it to the CybersourceAntiFraud field.
func (o *ConnectionOptions) SetCybersourceAntiFraud(v ConnectionOptionsCybersourceAntiFraud) {
	o.CybersourceAntiFraud.Set(&v)
}
// SetCybersourceAntiFraudNil sets the value for CybersourceAntiFraud to be an explicit nil
func (o *ConnectionOptions) SetCybersourceAntiFraudNil() {
	o.CybersourceAntiFraud.Set(nil)
}

// UnsetCybersourceAntiFraud ensures that no value is present for CybersourceAntiFraud, not even an explicit nil
func (o *ConnectionOptions) UnsetCybersourceAntiFraud() {
	o.CybersourceAntiFraud.Unset()
}

// GetForterAntiFraud returns the ForterAntiFraud field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetForterAntiFraud() ConnectionOptionsForterAntiFraud {
	if o == nil || o.ForterAntiFraud.Get() == nil {
		var ret ConnectionOptionsForterAntiFraud
		return ret
	}
	return *o.ForterAntiFraud.Get()
}

// GetForterAntiFraudOk returns a tuple with the ForterAntiFraud field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetForterAntiFraudOk() (*ConnectionOptionsForterAntiFraud, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ForterAntiFraud.Get(), o.ForterAntiFraud.IsSet()
}

// HasForterAntiFraud returns a boolean if a field has been set.
func (o *ConnectionOptions) HasForterAntiFraud() bool {
	if o != nil && o.ForterAntiFraud.IsSet() {
		return true
	}

	return false
}

// SetForterAntiFraud gets a reference to the given NullableConnectionOptionsForterAntiFraud and assigns it to the ForterAntiFraud field.
func (o *ConnectionOptions) SetForterAntiFraud(v ConnectionOptionsForterAntiFraud) {
	o.ForterAntiFraud.Set(&v)
}
// SetForterAntiFraudNil sets the value for ForterAntiFraud to be an explicit nil
func (o *ConnectionOptions) SetForterAntiFraudNil() {
	o.ForterAntiFraud.Set(nil)
}

// UnsetForterAntiFraud ensures that no value is present for ForterAntiFraud, not even an explicit nil
func (o *ConnectionOptions) UnsetForterAntiFraud() {
	o.ForterAntiFraud.Unset()
}

// GetAdyenCard returns the AdyenCard field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptions) GetAdyenCard() ConnectionOptionsAdyenCard {
	if o == nil || o.AdyenCard.Get() == nil {
		var ret ConnectionOptionsAdyenCard
		return ret
	}
	return *o.AdyenCard.Get()
}

// GetAdyenCardOk returns a tuple with the AdyenCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptions) GetAdyenCardOk() (*ConnectionOptionsAdyenCard, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AdyenCard.Get(), o.AdyenCard.IsSet()
}

// HasAdyenCard returns a boolean if a field has been set.
func (o *ConnectionOptions) HasAdyenCard() bool {
	if o != nil && o.AdyenCard.IsSet() {
		return true
	}

	return false
}

// SetAdyenCard gets a reference to the given NullableConnectionOptionsAdyenCard and assigns it to the AdyenCard field.
func (o *ConnectionOptions) SetAdyenCard(v ConnectionOptionsAdyenCard) {
	o.AdyenCard.Set(&v)
}
// SetAdyenCardNil sets the value for AdyenCard to be an explicit nil
func (o *ConnectionOptions) SetAdyenCardNil() {
	o.AdyenCard.Set(nil)
}

// UnsetAdyenCard ensures that no value is present for AdyenCard, not even an explicit nil
func (o *ConnectionOptions) UnsetAdyenCard() {
	o.AdyenCard.Unset()
}

func (o ConnectionOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CybersourceAntiFraud.IsSet() {
		toSerialize["cybersource-anti-fraud"] = o.CybersourceAntiFraud.Get()
	}
	if o.ForterAntiFraud.IsSet() {
		toSerialize["forter-anti-fraud"] = o.ForterAntiFraud.Get()
	}
	if o.AdyenCard.IsSet() {
		toSerialize["adyen-card"] = o.AdyenCard.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptions struct {
	value *ConnectionOptions
	isSet bool
}

func (v NullableConnectionOptions) Get() *ConnectionOptions {
	return v.value
}

func (v *NullableConnectionOptions) Set(val *ConnectionOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptions(val *ConnectionOptions) *NullableConnectionOptions {
	return &NullableConnectionOptions{value: val, isSet: true}
}

func (v NullableConnectionOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


