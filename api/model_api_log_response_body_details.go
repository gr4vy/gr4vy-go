/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ApiLogResponseBodyDetails Details of the log entry, stack trace and endpoint.
type ApiLogResponseBodyDetails struct {
	// Log's pointer.
	Pointer *string `json:"pointer,omitempty"`
	// Detailed message on the log entry.
	Message *string `json:"message,omitempty"`
	// Location on where the error happened.
	Location *string `json:"location,omitempty"`
	// Detailed error type that is specified in the log entry.
	Type *string `json:"type,omitempty"`
}

// NewApiLogResponseBodyDetails instantiates a new ApiLogResponseBodyDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiLogResponseBodyDetails() *ApiLogResponseBodyDetails {
	this := ApiLogResponseBodyDetails{}
	return &this
}

// NewApiLogResponseBodyDetailsWithDefaults instantiates a new ApiLogResponseBodyDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiLogResponseBodyDetailsWithDefaults() *ApiLogResponseBodyDetails {
	this := ApiLogResponseBodyDetails{}
	return &this
}

// GetPointer returns the Pointer field value if set, zero value otherwise.
func (o *ApiLogResponseBodyDetails) GetPointer() string {
	if o == nil || o.Pointer == nil {
		var ret string
		return ret
	}
	return *o.Pointer
}

// GetPointerOk returns a tuple with the Pointer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLogResponseBodyDetails) GetPointerOk() (*string, bool) {
	if o == nil || o.Pointer == nil {
		return nil, false
	}
	return o.Pointer, true
}

// HasPointer returns a boolean if a field has been set.
func (o *ApiLogResponseBodyDetails) HasPointer() bool {
	if o != nil && o.Pointer != nil {
		return true
	}

	return false
}

// SetPointer gets a reference to the given string and assigns it to the Pointer field.
func (o *ApiLogResponseBodyDetails) SetPointer(v string) {
	o.Pointer = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ApiLogResponseBodyDetails) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLogResponseBodyDetails) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ApiLogResponseBodyDetails) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ApiLogResponseBodyDetails) SetMessage(v string) {
	o.Message = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *ApiLogResponseBodyDetails) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLogResponseBodyDetails) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *ApiLogResponseBodyDetails) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *ApiLogResponseBodyDetails) SetLocation(v string) {
	o.Location = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiLogResponseBodyDetails) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLogResponseBodyDetails) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiLogResponseBodyDetails) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApiLogResponseBodyDetails) SetType(v string) {
	o.Type = &v
}

func (o ApiLogResponseBodyDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pointer != nil {
		toSerialize["pointer"] = o.Pointer
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableApiLogResponseBodyDetails struct {
	value *ApiLogResponseBodyDetails
	isSet bool
}

func (v NullableApiLogResponseBodyDetails) Get() *ApiLogResponseBodyDetails {
	return v.value
}

func (v *NullableApiLogResponseBodyDetails) Set(val *ApiLogResponseBodyDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableApiLogResponseBodyDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableApiLogResponseBodyDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiLogResponseBodyDetails(val *ApiLogResponseBodyDetails) *NullableApiLogResponseBodyDetails {
	return &NullableApiLogResponseBodyDetails{value: val, isSet: true}
}

func (v NullableApiLogResponseBodyDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiLogResponseBodyDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


