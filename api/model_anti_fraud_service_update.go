/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// AntiFraudServiceUpdate A request to update an anti-fraud service.
type AntiFraudServiceUpdate struct {
	// The name of the Anti-Fraud service provider. During update request, this value is used for validation only but the underlying service can not be changed for an existing service.
	AntiFraudServiceDefinitionId string `json:"anti_fraud_service_definition_id"`
	// A unique name for this anti-fraud service which is used in the Gr4vy admin panel to give a anti-fraud Service a human readable name.
	DisplayName *string `json:"display_name,omitempty"`
	// Defines if this service is currently active or not. There can only be one active service at any time. When updating a service to active, the current active service will be deactivated.
	Active *bool `json:"active,omitempty"`
	// Defines if this service needs to handle the review status from anti-fraud responses with a proper review workflow. If not, the review status will be treated as any other one.
	ReviewsEnabled *bool `json:"reviews_enabled,omitempty"`
	// A list of fields, each containing a key-value pair for each field defined by the definition for this anti-fraud service e.g. for Sift `api_key` must be sent within this field when creating the service.  For updates, only the fields sent here will be updated, existing ones will not be affected if not present.
	Fields *[]AntiFraudServiceUpdateFields `json:"fields,omitempty"`
}

// NewAntiFraudServiceUpdate instantiates a new AntiFraudServiceUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAntiFraudServiceUpdate(antiFraudServiceDefinitionId string) *AntiFraudServiceUpdate {
	this := AntiFraudServiceUpdate{}
	this.AntiFraudServiceDefinitionId = antiFraudServiceDefinitionId
	var active bool = true
	this.Active = &active
	var reviewsEnabled bool = false
	this.ReviewsEnabled = &reviewsEnabled
	return &this
}

// NewAntiFraudServiceUpdateWithDefaults instantiates a new AntiFraudServiceUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAntiFraudServiceUpdateWithDefaults() *AntiFraudServiceUpdate {
	this := AntiFraudServiceUpdate{}
	var active bool = true
	this.Active = &active
	var reviewsEnabled bool = false
	this.ReviewsEnabled = &reviewsEnabled
	return &this
}

// GetAntiFraudServiceDefinitionId returns the AntiFraudServiceDefinitionId field value
func (o *AntiFraudServiceUpdate) GetAntiFraudServiceDefinitionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AntiFraudServiceDefinitionId
}

// GetAntiFraudServiceDefinitionIdOk returns a tuple with the AntiFraudServiceDefinitionId field value
// and a boolean to check if the value has been set.
func (o *AntiFraudServiceUpdate) GetAntiFraudServiceDefinitionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AntiFraudServiceDefinitionId, true
}

// SetAntiFraudServiceDefinitionId sets field value
func (o *AntiFraudServiceUpdate) SetAntiFraudServiceDefinitionId(v string) {
	o.AntiFraudServiceDefinitionId = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AntiFraudServiceUpdate) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudServiceUpdate) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AntiFraudServiceUpdate) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AntiFraudServiceUpdate) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *AntiFraudServiceUpdate) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudServiceUpdate) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *AntiFraudServiceUpdate) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *AntiFraudServiceUpdate) SetActive(v bool) {
	o.Active = &v
}

// GetReviewsEnabled returns the ReviewsEnabled field value if set, zero value otherwise.
func (o *AntiFraudServiceUpdate) GetReviewsEnabled() bool {
	if o == nil || o.ReviewsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ReviewsEnabled
}

// GetReviewsEnabledOk returns a tuple with the ReviewsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudServiceUpdate) GetReviewsEnabledOk() (*bool, bool) {
	if o == nil || o.ReviewsEnabled == nil {
		return nil, false
	}
	return o.ReviewsEnabled, true
}

// HasReviewsEnabled returns a boolean if a field has been set.
func (o *AntiFraudServiceUpdate) HasReviewsEnabled() bool {
	if o != nil && o.ReviewsEnabled != nil {
		return true
	}

	return false
}

// SetReviewsEnabled gets a reference to the given bool and assigns it to the ReviewsEnabled field.
func (o *AntiFraudServiceUpdate) SetReviewsEnabled(v bool) {
	o.ReviewsEnabled = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *AntiFraudServiceUpdate) GetFields() []AntiFraudServiceUpdateFields {
	if o == nil || o.Fields == nil {
		var ret []AntiFraudServiceUpdateFields
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AntiFraudServiceUpdate) GetFieldsOk() (*[]AntiFraudServiceUpdateFields, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *AntiFraudServiceUpdate) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []AntiFraudServiceUpdateFields and assigns it to the Fields field.
func (o *AntiFraudServiceUpdate) SetFields(v []AntiFraudServiceUpdateFields) {
	o.Fields = &v
}

func (o AntiFraudServiceUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["anti_fraud_service_definition_id"] = o.AntiFraudServiceDefinitionId
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.ReviewsEnabled != nil {
		toSerialize["reviews_enabled"] = o.ReviewsEnabled
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	return json.Marshal(toSerialize)
}

type NullableAntiFraudServiceUpdate struct {
	value *AntiFraudServiceUpdate
	isSet bool
}

func (v NullableAntiFraudServiceUpdate) Get() *AntiFraudServiceUpdate {
	return v.value
}

func (v *NullableAntiFraudServiceUpdate) Set(val *AntiFraudServiceUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAntiFraudServiceUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAntiFraudServiceUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAntiFraudServiceUpdate(val *AntiFraudServiceUpdate) *NullableAntiFraudServiceUpdate {
	return &NullableAntiFraudServiceUpdate{value: val, isSet: true}
}

func (v NullableAntiFraudServiceUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAntiFraudServiceUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


