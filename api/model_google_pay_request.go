/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// GooglePayRequest Details for a Google Pay payment method.
type GooglePayRequest struct {
	// `googlepay`.
	Method string `json:"method"`
	// The encrypted (opaque) token returned by the Google Pay API that represents a payment method.
	Token map[string]interface{} `json:"token"`
	AssuranceDetails NullableGooglePayRequestAssuranceDetails `json:"assurance_details,omitempty"`
	// Name of the card holder.
	CardHolderName NullableString `json:"card_holder_name,omitempty"`
	// We strongly recommend providing a `redirect_url` either when 3-D Secure is enabled and `three_d_secure_data` is not provided, or when using connections where 3DS is enabled. This value will be appended with both a transaction ID and status (e.g. `https://example.com/callback?gr4vy_transaction_id=123 &gr4vy_transaction_status=capture_succeeded`) after 3-D Secure has completed. For those cases, if the value is not present, the transaction will be marked as failed.
	RedirectUrl NullableString `json:"redirect_url,omitempty"`
}

// NewGooglePayRequest instantiates a new GooglePayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGooglePayRequest(method string, token map[string]interface{}) *GooglePayRequest {
	this := GooglePayRequest{}
	this.Method = method
	this.Token = token
	return &this
}

// NewGooglePayRequestWithDefaults instantiates a new GooglePayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGooglePayRequestWithDefaults() *GooglePayRequest {
	this := GooglePayRequest{}
	return &this
}

// GetMethod returns the Method field value
func (o *GooglePayRequest) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *GooglePayRequest) GetMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *GooglePayRequest) SetMethod(v string) {
	o.Method = v
}

// GetToken returns the Token field value
func (o *GooglePayRequest) GetToken() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *GooglePayRequest) GetTokenOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *GooglePayRequest) SetToken(v map[string]interface{}) {
	o.Token = v
}

// GetAssuranceDetails returns the AssuranceDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GooglePayRequest) GetAssuranceDetails() GooglePayRequestAssuranceDetails {
	if o == nil || o.AssuranceDetails.Get() == nil {
		var ret GooglePayRequestAssuranceDetails
		return ret
	}
	return *o.AssuranceDetails.Get()
}

// GetAssuranceDetailsOk returns a tuple with the AssuranceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GooglePayRequest) GetAssuranceDetailsOk() (*GooglePayRequestAssuranceDetails, bool) {
	if o == nil  {
		return nil, false
	}
	return o.AssuranceDetails.Get(), o.AssuranceDetails.IsSet()
}

// HasAssuranceDetails returns a boolean if a field has been set.
func (o *GooglePayRequest) HasAssuranceDetails() bool {
	if o != nil && o.AssuranceDetails.IsSet() {
		return true
	}

	return false
}

// SetAssuranceDetails gets a reference to the given NullableGooglePayRequestAssuranceDetails and assigns it to the AssuranceDetails field.
func (o *GooglePayRequest) SetAssuranceDetails(v GooglePayRequestAssuranceDetails) {
	o.AssuranceDetails.Set(&v)
}
// SetAssuranceDetailsNil sets the value for AssuranceDetails to be an explicit nil
func (o *GooglePayRequest) SetAssuranceDetailsNil() {
	o.AssuranceDetails.Set(nil)
}

// UnsetAssuranceDetails ensures that no value is present for AssuranceDetails, not even an explicit nil
func (o *GooglePayRequest) UnsetAssuranceDetails() {
	o.AssuranceDetails.Unset()
}

// GetCardHolderName returns the CardHolderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GooglePayRequest) GetCardHolderName() string {
	if o == nil || o.CardHolderName.Get() == nil {
		var ret string
		return ret
	}
	return *o.CardHolderName.Get()
}

// GetCardHolderNameOk returns a tuple with the CardHolderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GooglePayRequest) GetCardHolderNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CardHolderName.Get(), o.CardHolderName.IsSet()
}

// HasCardHolderName returns a boolean if a field has been set.
func (o *GooglePayRequest) HasCardHolderName() bool {
	if o != nil && o.CardHolderName.IsSet() {
		return true
	}

	return false
}

// SetCardHolderName gets a reference to the given NullableString and assigns it to the CardHolderName field.
func (o *GooglePayRequest) SetCardHolderName(v string) {
	o.CardHolderName.Set(&v)
}
// SetCardHolderNameNil sets the value for CardHolderName to be an explicit nil
func (o *GooglePayRequest) SetCardHolderNameNil() {
	o.CardHolderName.Set(nil)
}

// UnsetCardHolderName ensures that no value is present for CardHolderName, not even an explicit nil
func (o *GooglePayRequest) UnsetCardHolderName() {
	o.CardHolderName.Unset()
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GooglePayRequest) GetRedirectUrl() string {
	if o == nil || o.RedirectUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.RedirectUrl.Get()
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GooglePayRequest) GetRedirectUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RedirectUrl.Get(), o.RedirectUrl.IsSet()
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *GooglePayRequest) HasRedirectUrl() bool {
	if o != nil && o.RedirectUrl.IsSet() {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given NullableString and assigns it to the RedirectUrl field.
func (o *GooglePayRequest) SetRedirectUrl(v string) {
	o.RedirectUrl.Set(&v)
}
// SetRedirectUrlNil sets the value for RedirectUrl to be an explicit nil
func (o *GooglePayRequest) SetRedirectUrlNil() {
	o.RedirectUrl.Set(nil)
}

// UnsetRedirectUrl ensures that no value is present for RedirectUrl, not even an explicit nil
func (o *GooglePayRequest) UnsetRedirectUrl() {
	o.RedirectUrl.Unset()
}

func (o GooglePayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["method"] = o.Method
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if o.AssuranceDetails.IsSet() {
		toSerialize["assurance_details"] = o.AssuranceDetails.Get()
	}
	if o.CardHolderName.IsSet() {
		toSerialize["card_holder_name"] = o.CardHolderName.Get()
	}
	if o.RedirectUrl.IsSet() {
		toSerialize["redirect_url"] = o.RedirectUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGooglePayRequest struct {
	value *GooglePayRequest
	isSet bool
}

func (v NullableGooglePayRequest) Get() *GooglePayRequest {
	return v.value
}

func (v *NullableGooglePayRequest) Set(val *GooglePayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGooglePayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGooglePayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGooglePayRequest(val *GooglePayRequest) *NullableGooglePayRequest {
	return &NullableGooglePayRequest{value: val, isSet: true}
}

func (v NullableGooglePayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGooglePayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


