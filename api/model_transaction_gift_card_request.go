/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// TransactionGiftCardRequest Create a transaction with this gift card.
type TransactionGiftCardRequest struct {
	// The ID of the gift card to check a balance for. Required if `number` is not set.
	Id *string `json:"id,omitempty"`
	// The 16-19 digit number for this gift card. Required if `id` is not set.
	Number *string `json:"number,omitempty"`
	// The PIN for this gift card. Required if `number` is set.
	Pin *string `json:"pin,omitempty"`
	// The monetary amount to charge for this gift card, in the smallest currency unit for the given currency, for example `1299` cents to create an authorization for `$12.99`.  All gift card amounts are subtracted from the total transaction amount. The remainder is charged to the provided `payment_method`.
	Amount int32 `json:"amount"`
}

// NewTransactionGiftCardRequest instantiates a new TransactionGiftCardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionGiftCardRequest(amount int32) *TransactionGiftCardRequest {
	this := TransactionGiftCardRequest{}
	this.Amount = amount
	return &this
}

// NewTransactionGiftCardRequestWithDefaults instantiates a new TransactionGiftCardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionGiftCardRequestWithDefaults() *TransactionGiftCardRequest {
	this := TransactionGiftCardRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TransactionGiftCardRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGiftCardRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TransactionGiftCardRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TransactionGiftCardRequest) SetId(v string) {
	o.Id = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *TransactionGiftCardRequest) GetNumber() string {
	if o == nil || o.Number == nil {
		var ret string
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGiftCardRequest) GetNumberOk() (*string, bool) {
	if o == nil || o.Number == nil {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *TransactionGiftCardRequest) HasNumber() bool {
	if o != nil && o.Number != nil {
		return true
	}

	return false
}

// SetNumber gets a reference to the given string and assigns it to the Number field.
func (o *TransactionGiftCardRequest) SetNumber(v string) {
	o.Number = &v
}

// GetPin returns the Pin field value if set, zero value otherwise.
func (o *TransactionGiftCardRequest) GetPin() string {
	if o == nil || o.Pin == nil {
		var ret string
		return ret
	}
	return *o.Pin
}

// GetPinOk returns a tuple with the Pin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionGiftCardRequest) GetPinOk() (*string, bool) {
	if o == nil || o.Pin == nil {
		return nil, false
	}
	return o.Pin, true
}

// HasPin returns a boolean if a field has been set.
func (o *TransactionGiftCardRequest) HasPin() bool {
	if o != nil && o.Pin != nil {
		return true
	}

	return false
}

// SetPin gets a reference to the given string and assigns it to the Pin field.
func (o *TransactionGiftCardRequest) SetPin(v string) {
	o.Pin = &v
}

// GetAmount returns the Amount field value
func (o *TransactionGiftCardRequest) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransactionGiftCardRequest) GetAmountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransactionGiftCardRequest) SetAmount(v int32) {
	o.Amount = v
}

func (o TransactionGiftCardRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Number != nil {
		toSerialize["number"] = o.Number
	}
	if o.Pin != nil {
		toSerialize["pin"] = o.Pin
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionGiftCardRequest struct {
	value *TransactionGiftCardRequest
	isSet bool
}

func (v NullableTransactionGiftCardRequest) Get() *TransactionGiftCardRequest {
	return v.value
}

func (v *NullableTransactionGiftCardRequest) Set(val *TransactionGiftCardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionGiftCardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionGiftCardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionGiftCardRequest(val *TransactionGiftCardRequest) *NullableTransactionGiftCardRequest {
	return &NullableTransactionGiftCardRequest{value: val, isSet: true}
}

func (v NullableTransactionGiftCardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionGiftCardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


