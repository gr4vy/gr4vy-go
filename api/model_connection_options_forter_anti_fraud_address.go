/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptionsForterAntiFraudAddress Address details for the beneficiary.
type ConnectionOptionsForterAntiFraudAddress struct {
	// Country, two-letter ISO 3166-1 alpha 2 country code.
	Country string `json:"country"`
	// Street-level address. Required when full address details are available.
	Address1 NullableString `json:"address1,omitempty"`
	// Unit-level address.
	Address2 NullableString `json:"address2,omitempty"`
	// Zipcode.
	Zip NullableString `json:"zip,omitempty"`
	// Top-level administrative subdivision - state/province/department/etc. Can be either abbreviated format or full name (NY/New York).
	Region NullableString `json:"region,omitempty"`
	// Company name.
	Company NullableString `json:"company,omitempty"`
	// City. Required when full address details are available.
	City NullableString `json:"city,omitempty"`
}

// NewConnectionOptionsForterAntiFraudAddress instantiates a new ConnectionOptionsForterAntiFraudAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptionsForterAntiFraudAddress(country string) *ConnectionOptionsForterAntiFraudAddress {
	this := ConnectionOptionsForterAntiFraudAddress{}
	this.Country = country
	return &this
}

// NewConnectionOptionsForterAntiFraudAddressWithDefaults instantiates a new ConnectionOptionsForterAntiFraudAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsForterAntiFraudAddressWithDefaults() *ConnectionOptionsForterAntiFraudAddress {
	this := ConnectionOptionsForterAntiFraudAddress{}
	return &this
}

// GetCountry returns the Country field value
func (o *ConnectionOptionsForterAntiFraudAddress) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *ConnectionOptionsForterAntiFraudAddress) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *ConnectionOptionsForterAntiFraudAddress) SetCountry(v string) {
	o.Country = v
}

// GetAddress1 returns the Address1 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsForterAntiFraudAddress) GetAddress1() string {
	if o == nil || o.Address1.Get() == nil {
		var ret string
		return ret
	}
	return *o.Address1.Get()
}

// GetAddress1Ok returns a tuple with the Address1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsForterAntiFraudAddress) GetAddress1Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Address1.Get(), o.Address1.IsSet()
}

// HasAddress1 returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudAddress) HasAddress1() bool {
	if o != nil && o.Address1.IsSet() {
		return true
	}

	return false
}

// SetAddress1 gets a reference to the given NullableString and assigns it to the Address1 field.
func (o *ConnectionOptionsForterAntiFraudAddress) SetAddress1(v string) {
	o.Address1.Set(&v)
}
// SetAddress1Nil sets the value for Address1 to be an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) SetAddress1Nil() {
	o.Address1.Set(nil)
}

// UnsetAddress1 ensures that no value is present for Address1, not even an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) UnsetAddress1() {
	o.Address1.Unset()
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsForterAntiFraudAddress) GetAddress2() string {
	if o == nil || o.Address2.Get() == nil {
		var ret string
		return ret
	}
	return *o.Address2.Get()
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsForterAntiFraudAddress) GetAddress2Ok() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Address2.Get(), o.Address2.IsSet()
}

// HasAddress2 returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudAddress) HasAddress2() bool {
	if o != nil && o.Address2.IsSet() {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given NullableString and assigns it to the Address2 field.
func (o *ConnectionOptionsForterAntiFraudAddress) SetAddress2(v string) {
	o.Address2.Set(&v)
}
// SetAddress2Nil sets the value for Address2 to be an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) SetAddress2Nil() {
	o.Address2.Set(nil)
}

// UnsetAddress2 ensures that no value is present for Address2, not even an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) UnsetAddress2() {
	o.Address2.Unset()
}

// GetZip returns the Zip field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsForterAntiFraudAddress) GetZip() string {
	if o == nil || o.Zip.Get() == nil {
		var ret string
		return ret
	}
	return *o.Zip.Get()
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsForterAntiFraudAddress) GetZipOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Zip.Get(), o.Zip.IsSet()
}

// HasZip returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudAddress) HasZip() bool {
	if o != nil && o.Zip.IsSet() {
		return true
	}

	return false
}

// SetZip gets a reference to the given NullableString and assigns it to the Zip field.
func (o *ConnectionOptionsForterAntiFraudAddress) SetZip(v string) {
	o.Zip.Set(&v)
}
// SetZipNil sets the value for Zip to be an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) SetZipNil() {
	o.Zip.Set(nil)
}

// UnsetZip ensures that no value is present for Zip, not even an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) UnsetZip() {
	o.Zip.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsForterAntiFraudAddress) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsForterAntiFraudAddress) GetRegionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudAddress) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *ConnectionOptionsForterAntiFraudAddress) SetRegion(v string) {
	o.Region.Set(&v)
}
// SetRegionNil sets the value for Region to be an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) UnsetRegion() {
	o.Region.Unset()
}

// GetCompany returns the Company field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsForterAntiFraudAddress) GetCompany() string {
	if o == nil || o.Company.Get() == nil {
		var ret string
		return ret
	}
	return *o.Company.Get()
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsForterAntiFraudAddress) GetCompanyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Company.Get(), o.Company.IsSet()
}

// HasCompany returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudAddress) HasCompany() bool {
	if o != nil && o.Company.IsSet() {
		return true
	}

	return false
}

// SetCompany gets a reference to the given NullableString and assigns it to the Company field.
func (o *ConnectionOptionsForterAntiFraudAddress) SetCompany(v string) {
	o.Company.Set(&v)
}
// SetCompanyNil sets the value for Company to be an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) SetCompanyNil() {
	o.Company.Set(nil)
}

// UnsetCompany ensures that no value is present for Company, not even an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) UnsetCompany() {
	o.Company.Unset()
}

// GetCity returns the City field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsForterAntiFraudAddress) GetCity() string {
	if o == nil || o.City.Get() == nil {
		var ret string
		return ret
	}
	return *o.City.Get()
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsForterAntiFraudAddress) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.City.Get(), o.City.IsSet()
}

// HasCity returns a boolean if a field has been set.
func (o *ConnectionOptionsForterAntiFraudAddress) HasCity() bool {
	if o != nil && o.City.IsSet() {
		return true
	}

	return false
}

// SetCity gets a reference to the given NullableString and assigns it to the City field.
func (o *ConnectionOptionsForterAntiFraudAddress) SetCity(v string) {
	o.City.Set(&v)
}
// SetCityNil sets the value for City to be an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) SetCityNil() {
	o.City.Set(nil)
}

// UnsetCity ensures that no value is present for City, not even an explicit nil
func (o *ConnectionOptionsForterAntiFraudAddress) UnsetCity() {
	o.City.Unset()
}

func (o ConnectionOptionsForterAntiFraudAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["country"] = o.Country
	}
	if o.Address1.IsSet() {
		toSerialize["address1"] = o.Address1.Get()
	}
	if o.Address2.IsSet() {
		toSerialize["address2"] = o.Address2.Get()
	}
	if o.Zip.IsSet() {
		toSerialize["zip"] = o.Zip.Get()
	}
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	if o.Company.IsSet() {
		toSerialize["company"] = o.Company.Get()
	}
	if o.City.IsSet() {
		toSerialize["city"] = o.City.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptionsForterAntiFraudAddress struct {
	value *ConnectionOptionsForterAntiFraudAddress
	isSet bool
}

func (v NullableConnectionOptionsForterAntiFraudAddress) Get() *ConnectionOptionsForterAntiFraudAddress {
	return v.value
}

func (v *NullableConnectionOptionsForterAntiFraudAddress) Set(val *ConnectionOptionsForterAntiFraudAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptionsForterAntiFraudAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptionsForterAntiFraudAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptionsForterAntiFraudAddress(val *ConnectionOptionsForterAntiFraudAddress) *NullableConnectionOptionsForterAntiFraudAddress {
	return &NullableConnectionOptionsForterAntiFraudAddress{value: val, isSet: true}
}

func (v NullableConnectionOptionsForterAntiFraudAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptionsForterAntiFraudAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


