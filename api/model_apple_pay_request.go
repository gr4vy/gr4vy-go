/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ApplePayRequest Details for a Apple Pay payment method.
type ApplePayRequest struct {
	// `applepay`.
	Method string `json:"method"`
	// The encrypted (opaque) token that was passed to the `onpaymentauthorized` callback by the Apple Pay integration.
	Token map[string]interface{} `json:"token"`
	// Last 4 digits of the PAN for identification purposes.
	CardSuffix NullableString `json:"card_suffix,omitempty"`
	// The scheme/brand of the card.
	CardScheme NullableString `json:"card_scheme,omitempty"`
	// The type of card.
	CardType NullableString `json:"card_type,omitempty"`
}

// NewApplePayRequest instantiates a new ApplePayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplePayRequest(method string, token map[string]interface{}) *ApplePayRequest {
	this := ApplePayRequest{}
	this.Method = method
	this.Token = token
	return &this
}

// NewApplePayRequestWithDefaults instantiates a new ApplePayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplePayRequestWithDefaults() *ApplePayRequest {
	this := ApplePayRequest{}
	return &this
}

// GetMethod returns the Method field value
func (o *ApplePayRequest) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *ApplePayRequest) GetMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *ApplePayRequest) SetMethod(v string) {
	o.Method = v
}

// GetToken returns the Token field value
func (o *ApplePayRequest) GetToken() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ApplePayRequest) GetTokenOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ApplePayRequest) SetToken(v map[string]interface{}) {
	o.Token = v
}

// GetCardSuffix returns the CardSuffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplePayRequest) GetCardSuffix() string {
	if o == nil || o.CardSuffix.Get() == nil {
		var ret string
		return ret
	}
	return *o.CardSuffix.Get()
}

// GetCardSuffixOk returns a tuple with the CardSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplePayRequest) GetCardSuffixOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CardSuffix.Get(), o.CardSuffix.IsSet()
}

// HasCardSuffix returns a boolean if a field has been set.
func (o *ApplePayRequest) HasCardSuffix() bool {
	if o != nil && o.CardSuffix.IsSet() {
		return true
	}

	return false
}

// SetCardSuffix gets a reference to the given NullableString and assigns it to the CardSuffix field.
func (o *ApplePayRequest) SetCardSuffix(v string) {
	o.CardSuffix.Set(&v)
}
// SetCardSuffixNil sets the value for CardSuffix to be an explicit nil
func (o *ApplePayRequest) SetCardSuffixNil() {
	o.CardSuffix.Set(nil)
}

// UnsetCardSuffix ensures that no value is present for CardSuffix, not even an explicit nil
func (o *ApplePayRequest) UnsetCardSuffix() {
	o.CardSuffix.Unset()
}

// GetCardScheme returns the CardScheme field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplePayRequest) GetCardScheme() string {
	if o == nil || o.CardScheme.Get() == nil {
		var ret string
		return ret
	}
	return *o.CardScheme.Get()
}

// GetCardSchemeOk returns a tuple with the CardScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplePayRequest) GetCardSchemeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CardScheme.Get(), o.CardScheme.IsSet()
}

// HasCardScheme returns a boolean if a field has been set.
func (o *ApplePayRequest) HasCardScheme() bool {
	if o != nil && o.CardScheme.IsSet() {
		return true
	}

	return false
}

// SetCardScheme gets a reference to the given NullableString and assigns it to the CardScheme field.
func (o *ApplePayRequest) SetCardScheme(v string) {
	o.CardScheme.Set(&v)
}
// SetCardSchemeNil sets the value for CardScheme to be an explicit nil
func (o *ApplePayRequest) SetCardSchemeNil() {
	o.CardScheme.Set(nil)
}

// UnsetCardScheme ensures that no value is present for CardScheme, not even an explicit nil
func (o *ApplePayRequest) UnsetCardScheme() {
	o.CardScheme.Unset()
}

// GetCardType returns the CardType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApplePayRequest) GetCardType() string {
	if o == nil || o.CardType.Get() == nil {
		var ret string
		return ret
	}
	return *o.CardType.Get()
}

// GetCardTypeOk returns a tuple with the CardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApplePayRequest) GetCardTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.CardType.Get(), o.CardType.IsSet()
}

// HasCardType returns a boolean if a field has been set.
func (o *ApplePayRequest) HasCardType() bool {
	if o != nil && o.CardType.IsSet() {
		return true
	}

	return false
}

// SetCardType gets a reference to the given NullableString and assigns it to the CardType field.
func (o *ApplePayRequest) SetCardType(v string) {
	o.CardType.Set(&v)
}
// SetCardTypeNil sets the value for CardType to be an explicit nil
func (o *ApplePayRequest) SetCardTypeNil() {
	o.CardType.Set(nil)
}

// UnsetCardType ensures that no value is present for CardType, not even an explicit nil
func (o *ApplePayRequest) UnsetCardType() {
	o.CardType.Unset()
}

func (o ApplePayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["method"] = o.Method
	}
	if true {
		toSerialize["token"] = o.Token
	}
	if o.CardSuffix.IsSet() {
		toSerialize["card_suffix"] = o.CardSuffix.Get()
	}
	if o.CardScheme.IsSet() {
		toSerialize["card_scheme"] = o.CardScheme.Get()
	}
	if o.CardType.IsSet() {
		toSerialize["card_type"] = o.CardType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableApplePayRequest struct {
	value *ApplePayRequest
	isSet bool
}

func (v NullableApplePayRequest) Get() *ApplePayRequest {
	return v.value
}

func (v *NullableApplePayRequest) Set(val *ApplePayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplePayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplePayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplePayRequest(val *ApplePayRequest) *NullableApplePayRequest {
	return &NullableApplePayRequest{value: val, isSet: true}
}

func (v NullableApplePayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplePayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


