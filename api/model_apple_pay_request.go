/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ApplePayRequest Details for a Apple Pay payment method.
type ApplePayRequest struct {
	// `applepay`.
	Method string `json:"method"`
	// The encrypted (opaque) token that was passed to the `onpaymentauthorized` callback by the Apple Pay integration.
	Token map[string]interface{} `json:"token"`
}

// NewApplePayRequest instantiates a new ApplePayRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplePayRequest(method string, token map[string]interface{}) *ApplePayRequest {
	this := ApplePayRequest{}
	this.Method = method
	this.Token = token
	return &this
}

// NewApplePayRequestWithDefaults instantiates a new ApplePayRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplePayRequestWithDefaults() *ApplePayRequest {
	this := ApplePayRequest{}
	return &this
}

// GetMethod returns the Method field value
func (o *ApplePayRequest) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *ApplePayRequest) GetMethodOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *ApplePayRequest) SetMethod(v string) {
	o.Method = v
}

// GetToken returns the Token field value
func (o *ApplePayRequest) GetToken() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *ApplePayRequest) GetTokenOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *ApplePayRequest) SetToken(v map[string]interface{}) {
	o.Token = v
}

func (o ApplePayRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["method"] = o.Method
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableApplePayRequest struct {
	value *ApplePayRequest
	isSet bool
}

func (v NullableApplePayRequest) Get() *ApplePayRequest {
	return v.value
}

func (v *NullableApplePayRequest) Set(val *ApplePayRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplePayRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplePayRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplePayRequest(val *ApplePayRequest) *NullableApplePayRequest {
	return &NullableApplePayRequest{value: val, isSet: true}
}

func (v NullableApplePayRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplePayRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


