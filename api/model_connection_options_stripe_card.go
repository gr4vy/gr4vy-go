/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// ConnectionOptionsStripeCard Additional options to be passed through to Stripe when processing transactions.
type ConnectionOptionsStripeCard struct {
	// Defines if Stripe should automatically fail the payment if it requires two-factor authentication from the user.
	ErrorOnRequiresAction *bool `json:"error_on_requires_action,omitempty"`
	StripeConnect NullableConnectionOptionsStripeCardStripeConnect `json:"stripe_connect,omitempty"`
}

// NewConnectionOptionsStripeCard instantiates a new ConnectionOptionsStripeCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionOptionsStripeCard() *ConnectionOptionsStripeCard {
	this := ConnectionOptionsStripeCard{}
	var errorOnRequiresAction bool = false
	this.ErrorOnRequiresAction = &errorOnRequiresAction
	return &this
}

// NewConnectionOptionsStripeCardWithDefaults instantiates a new ConnectionOptionsStripeCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionOptionsStripeCardWithDefaults() *ConnectionOptionsStripeCard {
	this := ConnectionOptionsStripeCard{}
	var errorOnRequiresAction bool = false
	this.ErrorOnRequiresAction = &errorOnRequiresAction
	return &this
}

// GetErrorOnRequiresAction returns the ErrorOnRequiresAction field value if set, zero value otherwise.
func (o *ConnectionOptionsStripeCard) GetErrorOnRequiresAction() bool {
	if o == nil || o.ErrorOnRequiresAction == nil {
		var ret bool
		return ret
	}
	return *o.ErrorOnRequiresAction
}

// GetErrorOnRequiresActionOk returns a tuple with the ErrorOnRequiresAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionOptionsStripeCard) GetErrorOnRequiresActionOk() (*bool, bool) {
	if o == nil || o.ErrorOnRequiresAction == nil {
		return nil, false
	}
	return o.ErrorOnRequiresAction, true
}

// HasErrorOnRequiresAction returns a boolean if a field has been set.
func (o *ConnectionOptionsStripeCard) HasErrorOnRequiresAction() bool {
	if o != nil && o.ErrorOnRequiresAction != nil {
		return true
	}

	return false
}

// SetErrorOnRequiresAction gets a reference to the given bool and assigns it to the ErrorOnRequiresAction field.
func (o *ConnectionOptionsStripeCard) SetErrorOnRequiresAction(v bool) {
	o.ErrorOnRequiresAction = &v
}

// GetStripeConnect returns the StripeConnect field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConnectionOptionsStripeCard) GetStripeConnect() ConnectionOptionsStripeCardStripeConnect {
	if o == nil || o.StripeConnect.Get() == nil {
		var ret ConnectionOptionsStripeCardStripeConnect
		return ret
	}
	return *o.StripeConnect.Get()
}

// GetStripeConnectOk returns a tuple with the StripeConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConnectionOptionsStripeCard) GetStripeConnectOk() (*ConnectionOptionsStripeCardStripeConnect, bool) {
	if o == nil  {
		return nil, false
	}
	return o.StripeConnect.Get(), o.StripeConnect.IsSet()
}

// HasStripeConnect returns a boolean if a field has been set.
func (o *ConnectionOptionsStripeCard) HasStripeConnect() bool {
	if o != nil && o.StripeConnect.IsSet() {
		return true
	}

	return false
}

// SetStripeConnect gets a reference to the given NullableConnectionOptionsStripeCardStripeConnect and assigns it to the StripeConnect field.
func (o *ConnectionOptionsStripeCard) SetStripeConnect(v ConnectionOptionsStripeCardStripeConnect) {
	o.StripeConnect.Set(&v)
}
// SetStripeConnectNil sets the value for StripeConnect to be an explicit nil
func (o *ConnectionOptionsStripeCard) SetStripeConnectNil() {
	o.StripeConnect.Set(nil)
}

// UnsetStripeConnect ensures that no value is present for StripeConnect, not even an explicit nil
func (o *ConnectionOptionsStripeCard) UnsetStripeConnect() {
	o.StripeConnect.Unset()
}

func (o ConnectionOptionsStripeCard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorOnRequiresAction != nil {
		toSerialize["error_on_requires_action"] = o.ErrorOnRequiresAction
	}
	if o.StripeConnect.IsSet() {
		toSerialize["stripe_connect"] = o.StripeConnect.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableConnectionOptionsStripeCard struct {
	value *ConnectionOptionsStripeCard
	isSet bool
}

func (v NullableConnectionOptionsStripeCard) Get() *ConnectionOptionsStripeCard {
	return v.value
}

func (v *NullableConnectionOptionsStripeCard) Set(val *ConnectionOptionsStripeCard) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionOptionsStripeCard) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionOptionsStripeCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionOptionsStripeCard(val *ConnectionOptionsStripeCard) *NullableConnectionOptionsStripeCard {
	return &NullableConnectionOptionsStripeCard{value: val, isSet: true}
}

func (v NullableConnectionOptionsStripeCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionOptionsStripeCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


