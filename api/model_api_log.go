/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
	"time"
)

// ApiLog A log of an error that happened in the API call.
type ApiLog struct {
	// `api-log`.
	Type *string `json:"type,omitempty"`
	// The ID of the API log entry.
	Id *string `json:"id,omitempty"`
	// The http request method that generated the log entry.
	RequestMethod *string `json:"request_method,omitempty"`
	// The http request URL which trigged the error log.
	RequestUrl *string `json:"request_url,omitempty"`
	// The date and time that the request was received.
	RequestReceivedAt *time.Time `json:"request_received_at,omitempty"`
	// The http request status code.
	ResponseStatusCode *float32 `json:"response_status_code,omitempty"`
	ResponseBody *ApiLogResponseBody `json:"response_body,omitempty"`
	// date-time of when the response was sent.
	ResponseSentAt *time.Time `json:"response_sent_at,omitempty"`
}

// NewApiLog instantiates a new ApiLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiLog() *ApiLog {
	this := ApiLog{}
	return &this
}

// NewApiLogWithDefaults instantiates a new ApiLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiLogWithDefaults() *ApiLog {
	this := ApiLog{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApiLog) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLog) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApiLog) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApiLog) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiLog) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLog) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiLog) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiLog) SetId(v string) {
	o.Id = &v
}

// GetRequestMethod returns the RequestMethod field value if set, zero value otherwise.
func (o *ApiLog) GetRequestMethod() string {
	if o == nil || o.RequestMethod == nil {
		var ret string
		return ret
	}
	return *o.RequestMethod
}

// GetRequestMethodOk returns a tuple with the RequestMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLog) GetRequestMethodOk() (*string, bool) {
	if o == nil || o.RequestMethod == nil {
		return nil, false
	}
	return o.RequestMethod, true
}

// HasRequestMethod returns a boolean if a field has been set.
func (o *ApiLog) HasRequestMethod() bool {
	if o != nil && o.RequestMethod != nil {
		return true
	}

	return false
}

// SetRequestMethod gets a reference to the given string and assigns it to the RequestMethod field.
func (o *ApiLog) SetRequestMethod(v string) {
	o.RequestMethod = &v
}

// GetRequestUrl returns the RequestUrl field value if set, zero value otherwise.
func (o *ApiLog) GetRequestUrl() string {
	if o == nil || o.RequestUrl == nil {
		var ret string
		return ret
	}
	return *o.RequestUrl
}

// GetRequestUrlOk returns a tuple with the RequestUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLog) GetRequestUrlOk() (*string, bool) {
	if o == nil || o.RequestUrl == nil {
		return nil, false
	}
	return o.RequestUrl, true
}

// HasRequestUrl returns a boolean if a field has been set.
func (o *ApiLog) HasRequestUrl() bool {
	if o != nil && o.RequestUrl != nil {
		return true
	}

	return false
}

// SetRequestUrl gets a reference to the given string and assigns it to the RequestUrl field.
func (o *ApiLog) SetRequestUrl(v string) {
	o.RequestUrl = &v
}

// GetRequestReceivedAt returns the RequestReceivedAt field value if set, zero value otherwise.
func (o *ApiLog) GetRequestReceivedAt() time.Time {
	if o == nil || o.RequestReceivedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.RequestReceivedAt
}

// GetRequestReceivedAtOk returns a tuple with the RequestReceivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLog) GetRequestReceivedAtOk() (*time.Time, bool) {
	if o == nil || o.RequestReceivedAt == nil {
		return nil, false
	}
	return o.RequestReceivedAt, true
}

// HasRequestReceivedAt returns a boolean if a field has been set.
func (o *ApiLog) HasRequestReceivedAt() bool {
	if o != nil && o.RequestReceivedAt != nil {
		return true
	}

	return false
}

// SetRequestReceivedAt gets a reference to the given time.Time and assigns it to the RequestReceivedAt field.
func (o *ApiLog) SetRequestReceivedAt(v time.Time) {
	o.RequestReceivedAt = &v
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise.
func (o *ApiLog) GetResponseStatusCode() float32 {
	if o == nil || o.ResponseStatusCode == nil {
		var ret float32
		return ret
	}
	return *o.ResponseStatusCode
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLog) GetResponseStatusCodeOk() (*float32, bool) {
	if o == nil || o.ResponseStatusCode == nil {
		return nil, false
	}
	return o.ResponseStatusCode, true
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *ApiLog) HasResponseStatusCode() bool {
	if o != nil && o.ResponseStatusCode != nil {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given float32 and assigns it to the ResponseStatusCode field.
func (o *ApiLog) SetResponseStatusCode(v float32) {
	o.ResponseStatusCode = &v
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise.
func (o *ApiLog) GetResponseBody() ApiLogResponseBody {
	if o == nil || o.ResponseBody == nil {
		var ret ApiLogResponseBody
		return ret
	}
	return *o.ResponseBody
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLog) GetResponseBodyOk() (*ApiLogResponseBody, bool) {
	if o == nil || o.ResponseBody == nil {
		return nil, false
	}
	return o.ResponseBody, true
}

// HasResponseBody returns a boolean if a field has been set.
func (o *ApiLog) HasResponseBody() bool {
	if o != nil && o.ResponseBody != nil {
		return true
	}

	return false
}

// SetResponseBody gets a reference to the given ApiLogResponseBody and assigns it to the ResponseBody field.
func (o *ApiLog) SetResponseBody(v ApiLogResponseBody) {
	o.ResponseBody = &v
}

// GetResponseSentAt returns the ResponseSentAt field value if set, zero value otherwise.
func (o *ApiLog) GetResponseSentAt() time.Time {
	if o == nil || o.ResponseSentAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ResponseSentAt
}

// GetResponseSentAtOk returns a tuple with the ResponseSentAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLog) GetResponseSentAtOk() (*time.Time, bool) {
	if o == nil || o.ResponseSentAt == nil {
		return nil, false
	}
	return o.ResponseSentAt, true
}

// HasResponseSentAt returns a boolean if a field has been set.
func (o *ApiLog) HasResponseSentAt() bool {
	if o != nil && o.ResponseSentAt != nil {
		return true
	}

	return false
}

// SetResponseSentAt gets a reference to the given time.Time and assigns it to the ResponseSentAt field.
func (o *ApiLog) SetResponseSentAt(v time.Time) {
	o.ResponseSentAt = &v
}

func (o ApiLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.RequestMethod != nil {
		toSerialize["request_method"] = o.RequestMethod
	}
	if o.RequestUrl != nil {
		toSerialize["request_url"] = o.RequestUrl
	}
	if o.RequestReceivedAt != nil {
		toSerialize["request_received_at"] = o.RequestReceivedAt
	}
	if o.ResponseStatusCode != nil {
		toSerialize["response_status_code"] = o.ResponseStatusCode
	}
	if o.ResponseBody != nil {
		toSerialize["response_body"] = o.ResponseBody
	}
	if o.ResponseSentAt != nil {
		toSerialize["response_sent_at"] = o.ResponseSentAt
	}
	return json.Marshal(toSerialize)
}

type NullableApiLog struct {
	value *ApiLog
	isSet bool
}

func (v NullableApiLog) Get() *ApiLog {
	return v.value
}

func (v *NullableApiLog) Set(val *ApiLog) {
	v.value = val
	v.isSet = true
}

func (v NullableApiLog) IsSet() bool {
	return v.isSet
}

func (v *NullableApiLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiLog(val *ApiLog) *NullableApiLog {
	return &NullableApiLog{value: val, isSet: true}
}

func (v NullableApiLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


