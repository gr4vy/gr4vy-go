/*
 * Gr4vy API
 *
 * Welcome to the Gr4vy API reference documentation. Our API is still very much a work in product and subject to change.
 *
 * API version: 1.1.0-beta
 * Contact: code@gr4vy.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Openapi

import (
	"encoding/json"
)

// APIKeyPairUpdate A request to update an API key-pair.
type APIKeyPairUpdate struct {
	// A name for this key-pair which is used in the Gr4vy admin panel to give the key-pair a human readable name.
	DisplayName string `json:"display_name"`
}

// NewAPIKeyPairUpdate instantiates a new APIKeyPairUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIKeyPairUpdate(displayName string) *APIKeyPairUpdate {
	this := APIKeyPairUpdate{}
	this.DisplayName = displayName
	return &this
}

// NewAPIKeyPairUpdateWithDefaults instantiates a new APIKeyPairUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIKeyPairUpdateWithDefaults() *APIKeyPairUpdate {
	this := APIKeyPairUpdate{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *APIKeyPairUpdate) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *APIKeyPairUpdate) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *APIKeyPairUpdate) SetDisplayName(v string) {
	o.DisplayName = v
}

func (o APIKeyPairUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["display_name"] = o.DisplayName
	}
	return json.Marshal(toSerialize)
}

type NullableAPIKeyPairUpdate struct {
	value *APIKeyPairUpdate
	isSet bool
}

func (v NullableAPIKeyPairUpdate) Get() *APIKeyPairUpdate {
	return v.value
}

func (v *NullableAPIKeyPairUpdate) Set(val *APIKeyPairUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIKeyPairUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIKeyPairUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIKeyPairUpdate(val *APIKeyPairUpdate) *NullableAPIKeyPairUpdate {
	return &NullableAPIKeyPairUpdate{value: val, isSet: true}
}

func (v NullableAPIKeyPairUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIKeyPairUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


