// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
	"time"
)

// PaymentLinkPaymentSource - The payment source for the payment link.
type PaymentLinkPaymentSource string

const (
	PaymentLinkPaymentSourceEcommerce   PaymentLinkPaymentSource = "ecommerce"
	PaymentLinkPaymentSourceMoto        PaymentLinkPaymentSource = "moto"
	PaymentLinkPaymentSourceRecurring   PaymentLinkPaymentSource = "recurring"
	PaymentLinkPaymentSourceInstallment PaymentLinkPaymentSource = "installment"
	PaymentLinkPaymentSourceCardOnFile  PaymentLinkPaymentSource = "card_on_file"
)

func (e PaymentLinkPaymentSource) ToPointer() *PaymentLinkPaymentSource {
	return &e
}

type PaymentLink struct {
	// The unique identifier for the payment link.
	ID string `json:"id"`
	// Always `payment-link`.
	type_ *string `const:"payment-link" json:"type"`
	// The URL for the payment link.
	URL string `json:"url"`
	// The expiration date and time for the payment link.
	ExpiresAt *time.Time `json:"expires_at,omitempty"`
	// The merchant reference for the payment link.
	ExternalIdentifier *string `json:"external_identifier,omitempty"`
	// The statement descriptor for the payment link.
	StatementDescriptor *StatementDescriptor `json:"statement_descriptor,omitempty"`
	// The locale for the payment link.
	Locale *string `json:"locale,omitempty"`
	// The merchant's display name.
	MerchantName *string `json:"merchant_name,omitempty"`
	// The merchant's website URL.
	MerchantURL *string `json:"merchant_url,omitempty"`
	// The merchant's banner image URL.
	MerchantBannerURL *string `json:"merchant_banner_url,omitempty"`
	// The merchant's brand color.
	MerchantColor *string `json:"merchant_color,omitempty"`
	// A message from the merchant.
	MerchantMessage *string `json:"merchant_message,omitempty"`
	// URL to the merchant's terms and conditions.
	MerchantTermsAndConditionsURL *string `json:"merchant_terms_and_conditions_url,omitempty"`
	// URL to the merchant's favicon.
	MerchantFaviconURL *string `json:"merchant_favicon_url,omitempty"`
	// The amount for the payment link.
	Amount int64 `json:"amount"`
	// The country code for the payment link.
	Country string `json:"country"`
	// The currency code for the payment link.
	Currency string            `json:"currency"`
	Intent   TransactionIntent `json:"intent"`
	// The return URL after payment completion.
	ReturnURL *string `json:"return_url,omitempty"`
	// The cart items for the payment link.
	CartItems []CartItem `json:"cart_items"`
	// Arbitrary metadata for the payment link.
	Metadata map[string]any `json:"metadata,omitempty"`
	// The payment source for the payment link.
	PaymentSource PaymentLinkPaymentSource `json:"payment_source"`
	// The date and time the payment link was created.
	CreatedAt time.Time `json:"created_at"`
	// The date and time the payment link was last updated.
	UpdatedAt time.Time         `json:"updated_at"`
	Status    PaymentLinkStatus `json:"status"`
	// The buyer associated with the payment link.
	Buyer *TransactionBuyer `json:"buyer,omitempty"`
	// The shipping details for the payment link.
	ShippingDetails *ShippingDetails `json:"shipping_details,omitempty"`
}

func (p PaymentLink) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PaymentLink) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PaymentLink) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PaymentLink) GetType() *string {
	return types.String("payment-link")
}

func (o *PaymentLink) GetURL() string {
	if o == nil {
		return ""
	}
	return o.URL
}

func (o *PaymentLink) GetExpiresAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ExpiresAt
}

func (o *PaymentLink) GetExternalIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.ExternalIdentifier
}

func (o *PaymentLink) GetStatementDescriptor() *StatementDescriptor {
	if o == nil {
		return nil
	}
	return o.StatementDescriptor
}

func (o *PaymentLink) GetLocale() *string {
	if o == nil {
		return nil
	}
	return o.Locale
}

func (o *PaymentLink) GetMerchantName() *string {
	if o == nil {
		return nil
	}
	return o.MerchantName
}

func (o *PaymentLink) GetMerchantURL() *string {
	if o == nil {
		return nil
	}
	return o.MerchantURL
}

func (o *PaymentLink) GetMerchantBannerURL() *string {
	if o == nil {
		return nil
	}
	return o.MerchantBannerURL
}

func (o *PaymentLink) GetMerchantColor() *string {
	if o == nil {
		return nil
	}
	return o.MerchantColor
}

func (o *PaymentLink) GetMerchantMessage() *string {
	if o == nil {
		return nil
	}
	return o.MerchantMessage
}

func (o *PaymentLink) GetMerchantTermsAndConditionsURL() *string {
	if o == nil {
		return nil
	}
	return o.MerchantTermsAndConditionsURL
}

func (o *PaymentLink) GetMerchantFaviconURL() *string {
	if o == nil {
		return nil
	}
	return o.MerchantFaviconURL
}

func (o *PaymentLink) GetAmount() int64 {
	if o == nil {
		return 0
	}
	return o.Amount
}

func (o *PaymentLink) GetCountry() string {
	if o == nil {
		return ""
	}
	return o.Country
}

func (o *PaymentLink) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *PaymentLink) GetIntent() TransactionIntent {
	if o == nil {
		return TransactionIntent("")
	}
	return o.Intent
}

func (o *PaymentLink) GetReturnURL() *string {
	if o == nil {
		return nil
	}
	return o.ReturnURL
}

func (o *PaymentLink) GetCartItems() []CartItem {
	if o == nil {
		return nil
	}
	return o.CartItems
}

func (o *PaymentLink) GetMetadata() map[string]any {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *PaymentLink) GetPaymentSource() PaymentLinkPaymentSource {
	if o == nil {
		return PaymentLinkPaymentSource("")
	}
	return o.PaymentSource
}

func (o *PaymentLink) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *PaymentLink) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *PaymentLink) GetStatus() PaymentLinkStatus {
	if o == nil {
		return PaymentLinkStatus("")
	}
	return o.Status
}

func (o *PaymentLink) GetBuyer() *TransactionBuyer {
	if o == nil {
		return nil
	}
	return o.Buyer
}

func (o *PaymentLink) GetShippingDetails() *ShippingDetails {
	if o == nil {
		return nil
	}
	return o.ShippingDetails
}
