// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type InstrumentType string

const (
	InstrumentTypePan           InstrumentType = "pan"
	InstrumentTypeCardToken     InstrumentType = "card_token"
	InstrumentTypeRedirect      InstrumentType = "redirect"
	InstrumentTypeRedirectToken InstrumentType = "redirect_token"
	InstrumentTypeGooglepay     InstrumentType = "googlepay"
	InstrumentTypeApplepay      InstrumentType = "applepay"
	InstrumentTypeNetworkToken  InstrumentType = "network_token"
)

func (e InstrumentType) ToPointer() *InstrumentType {
	return &e
}
func (e *InstrumentType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pan":
		fallthrough
	case "card_token":
		fallthrough
	case "redirect":
		fallthrough
	case "redirect_token":
		fallthrough
	case "googlepay":
		fallthrough
	case "applepay":
		fallthrough
	case "network_token":
		*e = InstrumentType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstrumentType: %v", v)
	}
}
