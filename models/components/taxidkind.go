// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type TaxIDKind string

const (
	TaxIDKindAeTrn    TaxIDKind = "ae.trn"
	TaxIDKindAuAbn    TaxIDKind = "au.abn"
	TaxIDKindArDni    TaxIDKind = "ar.dni"
	TaxIDKindArCuil   TaxIDKind = "ar.cuil"
	TaxIDKindArCuit   TaxIDKind = "ar.cuit"
	TaxIDKindBrCnpj   TaxIDKind = "br.cnpj"
	TaxIDKindBrCpf    TaxIDKind = "br.cpf"
	TaxIDKindCaBn     TaxIDKind = "ca.bn"
	TaxIDKindCaGstHst TaxIDKind = "ca.gst_hst"
	TaxIDKindCaPstBc  TaxIDKind = "ca.pst_bc"
	TaxIDKindCaPstMb  TaxIDKind = "ca.pst_mb"
	TaxIDKindCaPstSk  TaxIDKind = "ca.pst_sk"
	TaxIDKindCaQst    TaxIDKind = "ca.qst"
	TaxIDKindChVat    TaxIDKind = "ch.vat"
	TaxIDKindClTin    TaxIDKind = "cl.tin"
	TaxIDKindCoItin   TaxIDKind = "co.itin"
	TaxIDKindCoNit    TaxIDKind = "co.nit"
	TaxIDKindEsCif    TaxIDKind = "es.cif"
	TaxIDKindEuVat    TaxIDKind = "eu.vat"
	TaxIDKindGbVat    TaxIDKind = "gb.vat"
	TaxIDKindHkBr     TaxIDKind = "hk.br"
	TaxIDKindIDNik    TaxIDKind = "id.nik"
	TaxIDKindIDNpwp   TaxIDKind = "id.npwp"
	TaxIDKindInGst    TaxIDKind = "in.gst"
	TaxIDKindJpCn     TaxIDKind = "jp.cn"
	TaxIDKindJpRn     TaxIDKind = "jp.rn"
	TaxIDKindKrBrn    TaxIDKind = "kr.brn"
	TaxIDKindLiUID    TaxIDKind = "li.uid"
	TaxIDKindMxCurp   TaxIDKind = "mx.curp"
	TaxIDKindMxRfc    TaxIDKind = "mx.rfc"
	TaxIDKindMyFrp    TaxIDKind = "my.frp"
	TaxIDKindMyItn    TaxIDKind = "my.itn"
	TaxIDKindMyNric   TaxIDKind = "my.nric"
	TaxIDKindMySst    TaxIDKind = "my.sst"
	TaxIDKindNoVat    TaxIDKind = "no.vat"
	TaxIDKindNzGst    TaxIDKind = "nz.gst"
	TaxIDKindPeRuc    TaxIDKind = "pe.ruc"
	TaxIDKindPhTin    TaxIDKind = "ph.tin"
	TaxIDKindRuInn    TaxIDKind = "ru.inn"
	TaxIDKindRuKpp    TaxIDKind = "ru.kpp"
	TaxIDKindSaVat    TaxIDKind = "sa.vat"
	TaxIDKindSgGst    TaxIDKind = "sg.gst"
	TaxIDKindSgUen    TaxIDKind = "sg.uen"
	TaxIDKindThID     TaxIDKind = "th.id"
	TaxIDKindThVat    TaxIDKind = "th.vat"
	TaxIDKindTwVat    TaxIDKind = "tw.vat"
	TaxIDKindUsEin    TaxIDKind = "us.ein"
	TaxIDKindZaVat    TaxIDKind = "za.vat"
	TaxIDKindBoCi     TaxIDKind = "bo.ci"
	TaxIDKindUyRut    TaxIDKind = "uy.rut"
	TaxIDKindUyCi     TaxIDKind = "uy.ci"
)

func (e TaxIDKind) ToPointer() *TaxIDKind {
	return &e
}
func (e *TaxIDKind) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ae.trn":
		fallthrough
	case "au.abn":
		fallthrough
	case "ar.dni":
		fallthrough
	case "ar.cuil":
		fallthrough
	case "ar.cuit":
		fallthrough
	case "br.cnpj":
		fallthrough
	case "br.cpf":
		fallthrough
	case "ca.bn":
		fallthrough
	case "ca.gst_hst":
		fallthrough
	case "ca.pst_bc":
		fallthrough
	case "ca.pst_mb":
		fallthrough
	case "ca.pst_sk":
		fallthrough
	case "ca.qst":
		fallthrough
	case "ch.vat":
		fallthrough
	case "cl.tin":
		fallthrough
	case "co.itin":
		fallthrough
	case "co.nit":
		fallthrough
	case "es.cif":
		fallthrough
	case "eu.vat":
		fallthrough
	case "gb.vat":
		fallthrough
	case "hk.br":
		fallthrough
	case "id.nik":
		fallthrough
	case "id.npwp":
		fallthrough
	case "in.gst":
		fallthrough
	case "jp.cn":
		fallthrough
	case "jp.rn":
		fallthrough
	case "kr.brn":
		fallthrough
	case "li.uid":
		fallthrough
	case "mx.curp":
		fallthrough
	case "mx.rfc":
		fallthrough
	case "my.frp":
		fallthrough
	case "my.itn":
		fallthrough
	case "my.nric":
		fallthrough
	case "my.sst":
		fallthrough
	case "no.vat":
		fallthrough
	case "nz.gst":
		fallthrough
	case "pe.ruc":
		fallthrough
	case "ph.tin":
		fallthrough
	case "ru.inn":
		fallthrough
	case "ru.kpp":
		fallthrough
	case "sa.vat":
		fallthrough
	case "sg.gst":
		fallthrough
	case "sg.uen":
		fallthrough
	case "th.id":
		fallthrough
	case "th.vat":
		fallthrough
	case "tw.vat":
		fallthrough
	case "us.ein":
		fallthrough
	case "za.vat":
		fallthrough
	case "bo.ci":
		fallthrough
	case "uy.rut":
		fallthrough
	case "uy.ci":
		*e = TaxIDKind(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaxIDKind: %v", v)
	}
}
