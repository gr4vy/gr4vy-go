// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
)

// StatementDescriptor - Information to show the user on their payments statement
type StatementDescriptor struct {
	// Reflects your doing business as (DBA) name.
	Name *string `json:"name,omitempty"`
	// A short description about the purchase.
	Description *string `json:"description,omitempty"`
	// The merchant's city to be displayed in a statement descriptor.
	City *string `json:"city,omitempty"`
	// The 2-letter ISO country code of the merchant to be displayed in a statement descriptor.
	Country *string `json:"country,omitempty"`
	// The value in the phone number field of a customer's statement which should be formatted according to the E164 number standard.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// The merchant's URL to be displayed in a statement descriptor.
	URL *string `json:"url,omitempty"`
	// The merchant's postal code or zip code.
	PostalCode *string `json:"postal_code,omitempty"`
}

func (s StatementDescriptor) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *StatementDescriptor) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (s *StatementDescriptor) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *StatementDescriptor) GetDescription() *string {
	if s == nil {
		return nil
	}
	return s.Description
}

func (s *StatementDescriptor) GetCity() *string {
	if s == nil {
		return nil
	}
	return s.City
}

func (s *StatementDescriptor) GetCountry() *string {
	if s == nil {
		return nil
	}
	return s.Country
}

func (s *StatementDescriptor) GetPhoneNumber() *string {
	if s == nil {
		return nil
	}
	return s.PhoneNumber
}

func (s *StatementDescriptor) GetURL() *string {
	if s == nil {
		return nil
	}
	return s.URL
}

func (s *StatementDescriptor) GetPostalCode() *string {
	if s == nil {
		return nil
	}
	return s.PostalCode
}
