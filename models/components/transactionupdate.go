// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type TransactionUpdate struct {
	// An external identifier that can be used to match the transaction against your own records.
	ExternalIdentifier *string `json:"external_identifier,omitempty"`
	// Additional information about the transaction stored as key-value pairs. If provided, the whole value will be overridden.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Allows for passing optional configuration per connection to take advantage of connection specific features. When provided, the data is only passed to the target connection type to prevent sharing configuration across connections. Please note that each of the keys this object are in kebab-case, for example `cybersource-anti-fraud` as they represent the ID of the connector. All the other keys will be snake case, for example `merchant_defined_data` or camel case to match an external API that the connector uses. If provided, the whole value will be overridden.
	ConnectionOptions *TransactionConnectionOptions `json:"connection_options,omitempty"`
}

func (t *TransactionUpdate) GetExternalIdentifier() *string {
	if t == nil {
		return nil
	}
	return t.ExternalIdentifier
}

func (t *TransactionUpdate) GetMetadata() map[string]string {
	if t == nil {
		return nil
	}
	return t.Metadata
}

func (t *TransactionUpdate) GetConnectionOptions() *TransactionConnectionOptions {
	if t == nil {
		return nil
	}
	return t.ConnectionOptions
}
