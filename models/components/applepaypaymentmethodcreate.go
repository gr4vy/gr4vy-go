// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
)

// ApplePayPaymentMethodCreate - Create an Apple Pay transaction with a device or merchant token.
type ApplePayPaymentMethodCreate struct {
	// The external identifier of the buyer to create a payment for.
	BuyerExternalIdentifier *string `json:"buyer_external_identifier,omitempty"`
	// The ID of the buyer to retrieve billing details for.
	BuyerID *string `json:"buyer_id,omitempty"`
	// The card holder name associated to the original card for the token.
	CardholderName *string `json:"cardholder_name,omitempty"`
	// The URL to redirect a user back to after the complete 3DS in browser.
	RedirectURL *string `json:"redirect_url,omitempty"`
	// The last 4 digits of the original card used to generate the token.
	CardSuffix *string `json:"card_suffix,omitempty"`
	// The original card scheme for which the token was generated.
	CardScheme *string `json:"card_scheme,omitempty"`
	// The payment scheme of the card.
	CardType *string `json:"card_type,omitempty"`
	// Always `applepay`
	method string `const:"applepay" json:"method"`
	// The opaque token as received from the Apple Pay JS library. This format may change between JS library versions.
	Token map[string]any `json:"token"`
}

func (a ApplePayPaymentMethodCreate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ApplePayPaymentMethodCreate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"method", "token"}); err != nil {
		return err
	}
	return nil
}

func (a *ApplePayPaymentMethodCreate) GetBuyerExternalIdentifier() *string {
	if a == nil {
		return nil
	}
	return a.BuyerExternalIdentifier
}

func (a *ApplePayPaymentMethodCreate) GetBuyerID() *string {
	if a == nil {
		return nil
	}
	return a.BuyerID
}

func (a *ApplePayPaymentMethodCreate) GetCardholderName() *string {
	if a == nil {
		return nil
	}
	return a.CardholderName
}

func (a *ApplePayPaymentMethodCreate) GetRedirectURL() *string {
	if a == nil {
		return nil
	}
	return a.RedirectURL
}

func (a *ApplePayPaymentMethodCreate) GetCardSuffix() *string {
	if a == nil {
		return nil
	}
	return a.CardSuffix
}

func (a *ApplePayPaymentMethodCreate) GetCardScheme() *string {
	if a == nil {
		return nil
	}
	return a.CardScheme
}

func (a *ApplePayPaymentMethodCreate) GetCardType() *string {
	if a == nil {
		return nil
	}
	return a.CardType
}

func (a *ApplePayPaymentMethodCreate) GetMethod() string {
	return "applepay"
}

func (a *ApplePayPaymentMethodCreate) GetToken() map[string]any {
	if a == nil {
		return map[string]any{}
	}
	return a.Token
}
