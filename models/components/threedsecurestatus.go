// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ThreeDSecureStatus string

const (
	ThreeDSecureStatusSetupError ThreeDSecureStatus = "setup_error"
	ThreeDSecureStatusError      ThreeDSecureStatus = "error"
	ThreeDSecureStatusDeclined   ThreeDSecureStatus = "declined"
	ThreeDSecureStatusCancelled  ThreeDSecureStatus = "cancelled"
	ThreeDSecureStatusComplete   ThreeDSecureStatus = "complete"
)

func (e ThreeDSecureStatus) ToPointer() *ThreeDSecureStatus {
	return &e
}
func (e *ThreeDSecureStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "setup_error":
		fallthrough
	case "error":
		fallthrough
	case "declined":
		fallthrough
	case "cancelled":
		fallthrough
	case "complete":
		*e = ThreeDSecureStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ThreeDSecureStatus: %v", v)
	}
}
