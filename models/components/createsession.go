// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

// CreateSession - The session data received from the payment service.
type CreateSession struct {
	// Always `payment-service-session`.
	type_  *string             `const:"payment-service-session" json:"type"`
	Status CreateSessionStatus `json:"status"`
	// A generic error code that may be returned when the session could not be generated.
	Code *string `json:"code,omitempty"`
	// The HTTP status code received from the payment service.
	StatusCode *int64 `json:"status_code,omitempty"`
	// The JSON response body received from the payment service.
	ResponseBody map[string]any `json:"response_body,omitempty"`
}

func (c CreateSession) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateSession) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateSession) GetType() *string {
	return types.String("payment-service-session")
}

func (o *CreateSession) GetStatus() CreateSessionStatus {
	if o == nil {
		return CreateSessionStatus("")
	}
	return o.Status
}

func (o *CreateSession) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *CreateSession) GetStatusCode() *int64 {
	if o == nil {
		return nil
	}
	return o.StatusCode
}

func (o *CreateSession) GetResponseBody() map[string]any {
	if o == nil {
		return nil
	}
	return o.ResponseBody
}
