// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

// CheckoutSessionWithURLPaymentMethodCreate - Create a payment with a checkout session ID (and an optional URL for 3DS).
type CheckoutSessionWithURLPaymentMethodCreate struct {
	// Always `checkout-session`
	method *string `const:"checkout-session" json:"method"`
	// The ID for the checkout session.
	ID string `json:"id"`
	// The merchant reference that can be used to match the payment method against your own records.
	ExternalIdentifier *string `json:"external_identifier,omitempty"`
	// The `id` of a stored buyer to use Use this instead of the `buyer_external_identifier`.
	BuyerID *string `json:"buyer_id,omitempty"`
	// The `external_identifier` of a stored buyer to use. Use this instead of the `buyer_id`.
	BuyerExternalIdentifier *string `json:"buyer_external_identifier,omitempty"`
	// The URL to redirect a user back to after the complete 3DS in browser.
	RedirectURL *string `json:"redirect_url,omitempty"`
}

func (c CheckoutSessionWithURLPaymentMethodCreate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CheckoutSessionWithURLPaymentMethodCreate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *CheckoutSessionWithURLPaymentMethodCreate) GetMethod() *string {
	return types.String("checkout-session")
}

func (o *CheckoutSessionWithURLPaymentMethodCreate) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CheckoutSessionWithURLPaymentMethodCreate) GetExternalIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.ExternalIdentifier
}

func (o *CheckoutSessionWithURLPaymentMethodCreate) GetBuyerID() *string {
	if o == nil {
		return nil
	}
	return o.BuyerID
}

func (o *CheckoutSessionWithURLPaymentMethodCreate) GetBuyerExternalIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.BuyerExternalIdentifier
}

func (o *CheckoutSessionWithURLPaymentMethodCreate) GetRedirectURL() *string {
	if o == nil {
		return nil
	}
	return o.RedirectURL
}
