// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

type AuditLogEntryUser struct {
	// Always `user`.
	type_ *string `const:"user" json:"type"`
	// The ID of the user.
	ID *string `json:"id,omitempty"`
	// The name of the user.
	Name string `json:"name"`
	// The email address for this user.
	EmailAddress *string `json:"email_address,omitempty"`
	// Whether this is a Gr4vy staff user.
	IsStaff bool       `json:"is_staff"`
	Status  UserStatus `json:"status"`
}

func (a AuditLogEntryUser) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AuditLogEntryUser) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"name", "is_staff", "status"}); err != nil {
		return err
	}
	return nil
}

func (o *AuditLogEntryUser) GetType() *string {
	return types.String("user")
}

func (o *AuditLogEntryUser) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *AuditLogEntryUser) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AuditLogEntryUser) GetEmailAddress() *string {
	if o == nil {
		return nil
	}
	return o.EmailAddress
}

func (o *AuditLogEntryUser) GetIsStaff() bool {
	if o == nil {
		return false
	}
	return o.IsStaff
}

func (o *AuditLogEntryUser) GetStatus() UserStatus {
	if o == nil {
		return UserStatus("")
	}
	return o.Status
}
