// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

type TransactionPaymentService struct {
	// Always `payment-service`.
	type_ *string `const:"payment-service" json:"type"`
	// The ID for the payment-service.
	ID string `json:"id"`
	// The definition ID of the service used to process this payment.
	PaymentServiceDefinitionID string `json:"payment_service_definition_id"`
	Method                     Method `json:"method"`
	// The display name for the payment service.
	DisplayName string `json:"display_name"`
}

func (t TransactionPaymentService) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TransactionPaymentService) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TransactionPaymentService) GetType() *string {
	return types.String("payment-service")
}

func (o *TransactionPaymentService) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TransactionPaymentService) GetPaymentServiceDefinitionID() string {
	if o == nil {
		return ""
	}
	return o.PaymentServiceDefinitionID
}

func (o *TransactionPaymentService) GetMethod() Method {
	if o == nil {
		return Method("")
	}
	return o.Method
}

func (o *TransactionPaymentService) GetDisplayName() string {
	if o == nil {
		return ""
	}
	return o.DisplayName
}
