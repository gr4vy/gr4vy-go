// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
	"time"
)

// Settlement - A settlement record for a transaction.
type Settlement struct {
	// Always 'settlement'.
	type_ *string `const:"settlement" json:"type"`
	// The unique identifier for the settlement.
	ID string `json:"id"`
	// The merchant account this settlement belongs to.
	MerchantAccountID string `json:"merchant_account_id"`
	// The date and time the settlement was created, in ISO 8601 format.
	CreatedAt time.Time `json:"created_at"`
	// The date and time the settlement was last updated, in ISO 8601 format.
	UpdatedAt time.Time `json:"updated_at"`
	// The date and time the settlement was posted, in ISO 8601 format.
	PostedAt time.Time `json:"posted_at"`
	// The date and time the settlement was ingested, in ISO 8601 format.
	IngestedAt time.Time `json:"ingested_at"`
	// ISO 4217 currency code for the settlement.
	Currency string `json:"currency"`
	// The total settled amount in the smallest currency unit (e.g. cents).
	Amount int64 `json:"amount"`
	// The exchange rate used for settlement, if applicable.
	ExchangeRate *float64 `json:"exchange_rate,omitempty"`
	// The commission amount deducted in the smallest currency unit.
	Commission int64 `json:"commission"`
	// The interchange fee, if applicable, in the smallest currency unit.
	Interchange *int64 `json:"interchange,omitempty"`
	// The markup fee, if applicable, in the smallest currency unit.
	Markup *int64 `json:"markup,omitempty"`
	// The scheme fee, if applicable, in the smallest currency unit.
	SchemeFee *int64 `json:"scheme_fee,omitempty"`
	// The report ID from the payment service.
	PaymentServiceReportID string `json:"payment_service_report_id"`
	// List of file IDs for the payment service report.
	PaymentServiceReportFileIds []string `json:"payment_service_report_file_ids"`
	// The transaction this settlement is associated with.
	TransactionID string `json:"transaction_id"`
}

func (s Settlement) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *Settlement) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Settlement) GetType() *string {
	return types.String("settlement")
}

func (o *Settlement) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Settlement) GetMerchantAccountID() string {
	if o == nil {
		return ""
	}
	return o.MerchantAccountID
}

func (o *Settlement) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Settlement) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *Settlement) GetPostedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.PostedAt
}

func (o *Settlement) GetIngestedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.IngestedAt
}

func (o *Settlement) GetCurrency() string {
	if o == nil {
		return ""
	}
	return o.Currency
}

func (o *Settlement) GetAmount() int64 {
	if o == nil {
		return 0
	}
	return o.Amount
}

func (o *Settlement) GetExchangeRate() *float64 {
	if o == nil {
		return nil
	}
	return o.ExchangeRate
}

func (o *Settlement) GetCommission() int64 {
	if o == nil {
		return 0
	}
	return o.Commission
}

func (o *Settlement) GetInterchange() *int64 {
	if o == nil {
		return nil
	}
	return o.Interchange
}

func (o *Settlement) GetMarkup() *int64 {
	if o == nil {
		return nil
	}
	return o.Markup
}

func (o *Settlement) GetSchemeFee() *int64 {
	if o == nil {
		return nil
	}
	return o.SchemeFee
}

func (o *Settlement) GetPaymentServiceReportID() string {
	if o == nil {
		return ""
	}
	return o.PaymentServiceReportID
}

func (o *Settlement) GetPaymentServiceReportFileIds() []string {
	if o == nil {
		return []string{}
	}
	return o.PaymentServiceReportFileIds
}

func (o *Settlement) GetTransactionID() string {
	if o == nil {
		return ""
	}
	return o.TransactionID
}
