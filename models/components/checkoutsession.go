// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
	"time"
)

type CheckoutSession struct {
	// An array of cart items that represents the line items of a transaction.
	CartItems []CartItem `json:"cart_items,omitempty"`
	// Any additional information about the transaction that you would like to store as key-value pairs. This data is passed to payment service providers that support it.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Provide buyer details for the transaction. No buyer resource will be created on Gr4vy when used.
	Buyer *GuestBuyerOutput `json:"buyer,omitempty"`
	// The airline addendum data which describes the airline booking associated with this transaction.
	Airline *Airline `json:"airline,omitempty"`
	// Always `checkout-session`
	type_ *string `const:"checkout-session" json:"type"`
	// The ID for the checkout session.
	ID string `json:"id"`
	// The date and time when this checkout session expires.
	ExpiresAt time.Time `json:"expires_at"`
	// Information about the payment method stored on the checkout session.
	PaymentMethod *CheckoutSessionPaymentMethod `json:"payment_method,omitempty"`
}

func (c CheckoutSession) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CheckoutSession) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"id", "expires_at"}); err != nil {
		return err
	}
	return nil
}

func (o *CheckoutSession) GetCartItems() []CartItem {
	if o == nil {
		return nil
	}
	return o.CartItems
}

func (o *CheckoutSession) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *CheckoutSession) GetBuyer() *GuestBuyerOutput {
	if o == nil {
		return nil
	}
	return o.Buyer
}

func (o *CheckoutSession) GetAirline() *Airline {
	if o == nil {
		return nil
	}
	return o.Airline
}

func (o *CheckoutSession) GetType() *string {
	return types.String("checkout-session")
}

func (o *CheckoutSession) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CheckoutSession) GetExpiresAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ExpiresAt
}

func (o *CheckoutSession) GetPaymentMethod() *CheckoutSessionPaymentMethod {
	if o == nil {
		return nil
	}
	return o.PaymentMethod
}
