// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
)

type CheckoutSessionUpdate struct {
	// An array of cart items that represents the line items of a transaction.
	CartItems []CartItem `json:"cart_items,omitempty"`
	// Any additional information about the transaction that you would like to store as key-value pairs. This data is passed to payment service providers that support it.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Provide buyer details for the transaction. No buyer resource will be created on Gr4vy when used.
	Buyer *GuestBuyerInput `json:"buyer,omitempty"`
	// The airline addendum data which describes the airline booking associated with this transaction.
	Airline   *Airline `json:"airline,omitempty"`
	ExpiresIn *float64 `default:"3600" json:"expires_in"`
}

func (c CheckoutSessionUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CheckoutSessionUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *CheckoutSessionUpdate) GetCartItems() []CartItem {
	if o == nil {
		return nil
	}
	return o.CartItems
}

func (o *CheckoutSessionUpdate) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *CheckoutSessionUpdate) GetBuyer() *GuestBuyerInput {
	if o == nil {
		return nil
	}
	return o.Buyer
}

func (o *CheckoutSessionUpdate) GetAirline() *Airline {
	if o == nil {
		return nil
	}
	return o.Airline
}

func (o *CheckoutSessionUpdate) GetExpiresIn() *float64 {
	if o == nil {
		return nil
	}
	return o.ExpiresIn
}
