// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

type TransactionStatusSummary struct {
	// Always `transaction`.
	type_ *string `const:"transaction" json:"type"`
	// The ID for the transaction.
	ID     string            `json:"id"`
	Status TransactionStatus `json:"status"`
}

func (t TransactionStatusSummary) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TransactionStatusSummary) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TransactionStatusSummary) GetType() *string {
	return types.String("transaction")
}

func (o *TransactionStatusSummary) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TransactionStatusSummary) GetStatus() TransactionStatus {
	if o == nil {
		return TransactionStatus("")
	}
	return o.Status
}
