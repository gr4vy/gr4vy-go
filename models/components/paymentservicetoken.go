// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
	"time"
)

type PaymentServiceToken struct {
	// Always `payment-service-token`.
	type_ *string `const:"payment-service-token" json:"type"`
	// The ID for the payment service token.
	ID string `json:"id"`
	// The optional URL that the buyer needs to be redirected to to further authorize the token creation.
	ApprovalURL *string `json:"approval_url,omitempty"`
	// The ID of the payment method used to generate this token
	PaymentMethodID string `json:"payment_method_id"`
	// The ID of the payment method used to generate this token.
	PaymentServiceID string              `json:"payment_service_id"`
	Status           PaymentMethodStatus `json:"status"`
	// The token value. Will be present if succeeded.
	Token *string `json:"token,omitempty"`
	// The date and time when this payment service token was first created in our system.
	CreatedAt time.Time `json:"created_at"`
	// The date and time when this payment service token was last updated in our system.
	UpdatedAt time.Time `json:"updated_at"`
}

func (p PaymentServiceToken) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PaymentServiceToken) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"id", "payment_method_id", "payment_service_id", "status", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (p *PaymentServiceToken) GetType() *string {
	return types.Pointer("payment-service-token")
}

func (p *PaymentServiceToken) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

func (p *PaymentServiceToken) GetApprovalURL() *string {
	if p == nil {
		return nil
	}
	return p.ApprovalURL
}

func (p *PaymentServiceToken) GetPaymentMethodID() string {
	if p == nil {
		return ""
	}
	return p.PaymentMethodID
}

func (p *PaymentServiceToken) GetPaymentServiceID() string {
	if p == nil {
		return ""
	}
	return p.PaymentServiceID
}

func (p *PaymentServiceToken) GetStatus() PaymentMethodStatus {
	if p == nil {
		return PaymentMethodStatus("")
	}
	return p.Status
}

func (p *PaymentServiceToken) GetToken() *string {
	if p == nil {
		return nil
	}
	return p.Token
}

func (p *PaymentServiceToken) GetCreatedAt() time.Time {
	if p == nil {
		return time.Time{}
	}
	return p.CreatedAt
}

func (p *PaymentServiceToken) GetUpdatedAt() time.Time {
	if p == nil {
		return time.Time{}
	}
	return p.UpdatedAt
}
