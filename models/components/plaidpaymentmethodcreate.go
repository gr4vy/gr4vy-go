// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

// PlaidPaymentMethodCreate - Plaid Payment Method
//
// Plaid Payment Method to use in a transaction.
type PlaidPaymentMethodCreate struct {
	// Always `plaid`.
	method *string `const:"plaid" json:"method"`
	// The public token obtained after using Plaid Link.
	Token string `json:"token"`
	// The Plaid account ID corresponding to the end-user account. If not provided will be fetched from Plaid API expecting to only have one.
	AccountID *string `json:"account_id,omitempty"`
	// The ID of the Plaid payment service related to the provided public token. If not provided will be fetched from the currently active expecting to have a single one.
	PaymentServiceID *string `json:"payment_service_id,omitempty"`
	// The ID of the buyer to attach the method to.
	BuyerID *string `json:"buyer_id,omitempty"`
	// The merchant reference for this payment method.
	BuyerExternalIdentifier *string `json:"buyer_external_identifier,omitempty"`
}

func (p PlaidPaymentMethodCreate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PlaidPaymentMethodCreate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"token"}); err != nil {
		return err
	}
	return nil
}

func (p *PlaidPaymentMethodCreate) GetMethod() *string {
	return types.Pointer("plaid")
}

func (p *PlaidPaymentMethodCreate) GetToken() string {
	if p == nil {
		return ""
	}
	return p.Token
}

func (p *PlaidPaymentMethodCreate) GetAccountID() *string {
	if p == nil {
		return nil
	}
	return p.AccountID
}

func (p *PlaidPaymentMethodCreate) GetPaymentServiceID() *string {
	if p == nil {
		return nil
	}
	return p.PaymentServiceID
}

func (p *PlaidPaymentMethodCreate) GetBuyerID() *string {
	if p == nil {
		return nil
	}
	return p.BuyerID
}

func (p *PlaidPaymentMethodCreate) GetBuyerExternalIdentifier() *string {
	if p == nil {
		return nil
	}
	return p.BuyerExternalIdentifier
}
