// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

type ReportSummary struct {
	// Always `report`.
	type_ *string `const:"report" json:"type"`
	// The unique ID for the report.
	ID string `json:"id"`
	// The merchant account ID this report belongs to.
	MerchantAccountID string `json:"merchant_account_id"`
	// The name of the report.
	Name string `json:"name"`
	// The ID of the user who created the report.
	CreatorID *string `json:"creator_id,omitempty"`
	// The display name of the report creator.
	CreatorDisplayName *string `json:"creator_display_name,omitempty"`
	// The type of the report creator.
	CreatorType *ReportCreatorType `json:"creator_type,omitempty"`
}

func (r ReportSummary) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *ReportSummary) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, []string{"id", "merchant_account_id", "name"}); err != nil {
		return err
	}
	return nil
}

func (r *ReportSummary) GetType() *string {
	return types.Pointer("report")
}

func (r *ReportSummary) GetID() string {
	if r == nil {
		return ""
	}
	return r.ID
}

func (r *ReportSummary) GetMerchantAccountID() string {
	if r == nil {
		return ""
	}
	return r.MerchantAccountID
}

func (r *ReportSummary) GetName() string {
	if r == nil {
		return ""
	}
	return r.Name
}

func (r *ReportSummary) GetCreatorID() *string {
	if r == nil {
		return nil
	}
	return r.CreatorID
}

func (r *ReportSummary) GetCreatorDisplayName() *string {
	if r == nil {
		return nil
	}
	return r.CreatorDisplayName
}

func (r *ReportSummary) GetCreatorType() *ReportCreatorType {
	if r == nil {
		return nil
	}
	return r.CreatorType
}
