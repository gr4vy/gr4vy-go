// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
)

type TransactionEvents struct {
	// A list of items returned for this request.
	Items []TransactionEventOutput `json:"items"`
	// The number of items for this page.
	Limit *int64 `default:"20" json:"limit"`
	// The cursor pointing at the next page of items.
	NextCursor *string `json:"next_cursor,omitempty"`
	// The cursor pointing at the previous page of items.
	PreviousCursor *string `json:"previous_cursor,omitempty"`
}

func (t TransactionEvents) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TransactionEvents) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, []string{"items"}); err != nil {
		return err
	}
	return nil
}

func (t *TransactionEvents) GetItems() []TransactionEventOutput {
	if t == nil {
		return []TransactionEventOutput{}
	}
	return t.Items
}

func (t *TransactionEvents) GetLimit() *int64 {
	if t == nil {
		return nil
	}
	return t.Limit
}

func (t *TransactionEvents) GetNextCursor() *string {
	if t == nil {
		return nil
	}
	return t.NextCursor
}

func (t *TransactionEvents) GetPreviousCursor() *string {
	if t == nil {
		return nil
	}
	return t.PreviousCursor
}
