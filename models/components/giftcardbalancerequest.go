// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/gr4vy/gr4vy-go/internal/utils"
)

type ItemType string

const (
	ItemTypeGiftCardRequest       ItemType = "GiftCardRequest"
	ItemTypeGiftCardStoredRequest ItemType = "GiftCardStoredRequest"
)

type Item struct {
	GiftCardRequest       *GiftCardRequest       `queryParam:"inline,name=item"`
	GiftCardStoredRequest *GiftCardStoredRequest `queryParam:"inline,name=item"`

	Type ItemType
}

func CreateItemGiftCardRequest(giftCardRequest GiftCardRequest) Item {
	typ := ItemTypeGiftCardRequest

	return Item{
		GiftCardRequest: &giftCardRequest,
		Type:            typ,
	}
}

func CreateItemGiftCardStoredRequest(giftCardStoredRequest GiftCardStoredRequest) Item {
	typ := ItemTypeGiftCardStoredRequest

	return Item{
		GiftCardStoredRequest: &giftCardStoredRequest,
		Type:                  typ,
	}
}

func (u *Item) UnmarshalJSON(data []byte) error {

	var giftCardRequest GiftCardRequest = GiftCardRequest{}
	if err := utils.UnmarshalJSON(data, &giftCardRequest, "", true, nil); err == nil {
		u.GiftCardRequest = &giftCardRequest
		u.Type = ItemTypeGiftCardRequest
		return nil
	}

	var giftCardStoredRequest GiftCardStoredRequest = GiftCardStoredRequest{}
	if err := utils.UnmarshalJSON(data, &giftCardStoredRequest, "", true, nil); err == nil {
		u.GiftCardStoredRequest = &giftCardStoredRequest
		u.Type = ItemTypeGiftCardStoredRequest
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Item", string(data))
}

func (u Item) MarshalJSON() ([]byte, error) {
	if u.GiftCardRequest != nil {
		return utils.MarshalJSON(u.GiftCardRequest, "", true)
	}

	if u.GiftCardStoredRequest != nil {
		return utils.MarshalJSON(u.GiftCardStoredRequest, "", true)
	}

	return nil, errors.New("could not marshal union type Item: all fields are null")
}

type GiftCardBalanceRequest struct {
	// A list of gift cards to request a balance for.
	Items []Item `json:"items"`
}

func (g *GiftCardBalanceRequest) GetItems() []Item {
	if g == nil {
		return []Item{}
	}
	return g.Items
}
