// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
	"time"
)

type NetworkToken struct {
	// Always `network-token`.
	type_ *string `const:"network-token" json:"type"`
	// The ID for the network token.
	ID string `json:"id"`
	// The expiration date for the network token.
	ExpirationDate string `json:"expiration_date"`
	// The ID of the payment method used to generate this token
	PaymentMethodID string             `json:"payment_method_id"`
	Status          NetworkTokenStatus `json:"status"`
	// The token value. Will be present if succeeded.
	Token string `json:"token"`
	// The date and time when this network token was first created in our system.
	CreatedAt time.Time `json:"created_at"`
	// The date and time when this network token was last updated in our system.
	UpdatedAt time.Time `json:"updated_at"`
}

func (n NetworkToken) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *NetworkToken) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *NetworkToken) GetType() *string {
	return types.String("network-token")
}

func (o *NetworkToken) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *NetworkToken) GetExpirationDate() string {
	if o == nil {
		return ""
	}
	return o.ExpirationDate
}

func (o *NetworkToken) GetPaymentMethodID() string {
	if o == nil {
		return ""
	}
	return o.PaymentMethodID
}

func (o *NetworkToken) GetStatus() NetworkTokenStatus {
	if o == nil {
		return NetworkTokenStatus("")
	}
	return o.Status
}

func (o *NetworkToken) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *NetworkToken) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *NetworkToken) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
