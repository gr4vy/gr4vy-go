// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type RefundStatus string

const (
	RefundStatusProcessing RefundStatus = "processing"
	RefundStatusSucceeded  RefundStatus = "succeeded"
	RefundStatusFailed     RefundStatus = "failed"
	RefundStatusDeclined   RefundStatus = "declined"
	RefundStatusVoided     RefundStatus = "voided"
)

func (e RefundStatus) ToPointer() *RefundStatus {
	return &e
}
func (e *RefundStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "processing":
		fallthrough
	case "succeeded":
		fallthrough
	case "failed":
		fallthrough
	case "declined":
		fallthrough
	case "voided":
		*e = RefundStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RefundStatus: %v", v)
	}
}
