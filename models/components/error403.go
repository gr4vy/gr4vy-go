// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

type Error403 struct {
	// Always `error`.
	type_ *string `const:"error" json:"type"`
	// Always `forbidden`
	Code *string `default:"forbidden" json:"code"`
	// Always `403`.
	Status *int64 `default:"403" json:"status"`
	// A human readable message that provides more context to the error.
	Message *string `default:"Invalid credentials" json:"message"`
	// A list of details that further ellaborate on the error.
	Details []ErrorDetail `json:"details,omitempty"`
}

func (e Error403) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *Error403) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *Error403) GetType() *string {
	return types.String("error")
}

func (o *Error403) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *Error403) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *Error403) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *Error403) GetDetails() []ErrorDetail {
	if o == nil {
		return nil
	}
	return o.Details
}
