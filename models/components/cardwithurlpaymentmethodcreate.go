// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

// CardWithURLPaymentMethodCreate - Create a transaction with raw card details
type CardWithURLPaymentMethodCreate struct {
	// The expiration date of the card, formatted `MM/YY`.
	ExpirationDate string `json:"expiration_date"`
	// The 13-19 digit number for this card.
	Number string `json:"number"`
	// The external identifier of the buyer to attach the method to.
	BuyerExternalIdentifier *string `json:"buyer_external_identifier,omitempty"`
	// The ID of the buyer to attach the method to.
	BuyerID *string `json:"buyer_id,omitempty"`
	// The merchant reference for this payment method.
	ExternalIdentifier *string `json:"external_identifier,omitempty"`
	// The type of the card used
	CardType *string `json:"card_type,omitempty"`
	// Always `card`
	method *string `const:"card" json:"method"`
	// The 3 or 4 digit security code often found on the card. This often referred to as the CVV or CVD.
	SecurityCode *string `json:"security_code,omitempty"`
	// The URL to redirect a user back to after the complete 3DS in browser.
	RedirectURL *string `json:"redirect_url,omitempty"`
}

func (c CardWithURLPaymentMethodCreate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CardWithURLPaymentMethodCreate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *CardWithURLPaymentMethodCreate) GetExpirationDate() string {
	if o == nil {
		return ""
	}
	return o.ExpirationDate
}

func (o *CardWithURLPaymentMethodCreate) GetNumber() string {
	if o == nil {
		return ""
	}
	return o.Number
}

func (o *CardWithURLPaymentMethodCreate) GetBuyerExternalIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.BuyerExternalIdentifier
}

func (o *CardWithURLPaymentMethodCreate) GetBuyerID() *string {
	if o == nil {
		return nil
	}
	return o.BuyerID
}

func (o *CardWithURLPaymentMethodCreate) GetExternalIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.ExternalIdentifier
}

func (o *CardWithURLPaymentMethodCreate) GetCardType() *string {
	if o == nil {
		return nil
	}
	return o.CardType
}

func (o *CardWithURLPaymentMethodCreate) GetMethod() *string {
	return types.String("card")
}

func (o *CardWithURLPaymentMethodCreate) GetSecurityCode() *string {
	if o == nil {
		return nil
	}
	return o.SecurityCode
}

func (o *CardWithURLPaymentMethodCreate) GetRedirectURL() *string {
	if o == nil {
		return nil
	}
	return o.RedirectURL
}
