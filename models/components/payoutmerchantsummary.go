// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/types"
)

// PayoutMerchantSummary
//
// Represents a summary of a merchant.
type PayoutMerchantSummary struct {
	// Always `merchant`.
	type_ *string `const:"merchant" json:"type"`
	// The name of the merchant.
	Name string `json:"name"`
	// Unique value which identifies a merchant for processing transactions, also known as a MID.
	IdentificationNumber string `json:"identification_number"`
	// The phone number for the merchant which should be formatted according to the E164 number standard.
	PhoneNumber string `json:"phone_number"`
	// Merchant website URL.
	URL string `json:"url"`
	// Value to explain charges or payments on bank statements.
	StatementDescriptor *string `json:"statement_descriptor,omitempty"`
	// Merchant classification for the type of goods or services it provides.
	MerchantCategoryCode string `json:"merchant_category_code"`
	// The address for the merchant.
	Address *Address `json:"address,omitempty"`
}

func (p PayoutMerchantSummary) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PayoutMerchantSummary) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"name", "identification_number", "phone_number", "url", "merchant_category_code"}); err != nil {
		return err
	}
	return nil
}

func (p *PayoutMerchantSummary) GetType() *string {
	return types.Pointer("merchant")
}

func (p *PayoutMerchantSummary) GetName() string {
	if p == nil {
		return ""
	}
	return p.Name
}

func (p *PayoutMerchantSummary) GetIdentificationNumber() string {
	if p == nil {
		return ""
	}
	return p.IdentificationNumber
}

func (p *PayoutMerchantSummary) GetPhoneNumber() string {
	if p == nil {
		return ""
	}
	return p.PhoneNumber
}

func (p *PayoutMerchantSummary) GetURL() string {
	if p == nil {
		return ""
	}
	return p.URL
}

func (p *PayoutMerchantSummary) GetStatementDescriptor() *string {
	if p == nil {
		return nil
	}
	return p.StatementDescriptor
}

func (p *PayoutMerchantSummary) GetMerchantCategoryCode() string {
	if p == nil {
		return ""
	}
	return p.MerchantCategoryCode
}

func (p *PayoutMerchantSummary) GetAddress() *Address {
	if p == nil {
		return nil
	}
	return p.Address
}
