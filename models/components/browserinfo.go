// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// UserDevice - The platform that is being used to access the website.
type UserDevice string

const (
	UserDeviceDesktop UserDevice = "desktop"
	UserDeviceMobile  UserDevice = "mobile"
)

func (e UserDevice) ToPointer() *UserDevice {
	return &e
}
func (e *UserDevice) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "desktop":
		fallthrough
	case "mobile":
		*e = UserDevice(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserDevice: %v", v)
	}
}

// BrowserInfo - Merchant provided browser info
type BrowserInfo struct {
	JavascriptEnabled bool   `json:"javascript_enabled"`
	JavaEnabled       bool   `json:"java_enabled"`
	Language          string `json:"language"`
	ColorDepth        int64  `json:"color_depth"`
	ScreenHeight      int64  `json:"screen_height"`
	ScreenWidth       int64  `json:"screen_width"`
	TimeZoneOffset    int64  `json:"time_zone_offset"`
	// Exact content of the HTTP user-agent header.
	UserAgent string `json:"user_agent"`
	// The platform that is being used to access the website.
	UserDevice UserDevice `json:"user_device"`
	// The Accept header of the request from the buyer's browser.
	AcceptHeader *string `json:"accept_header,omitempty"`
}

func (o *BrowserInfo) GetJavascriptEnabled() bool {
	if o == nil {
		return false
	}
	return o.JavascriptEnabled
}

func (o *BrowserInfo) GetJavaEnabled() bool {
	if o == nil {
		return false
	}
	return o.JavaEnabled
}

func (o *BrowserInfo) GetLanguage() string {
	if o == nil {
		return ""
	}
	return o.Language
}

func (o *BrowserInfo) GetColorDepth() int64 {
	if o == nil {
		return 0
	}
	return o.ColorDepth
}

func (o *BrowserInfo) GetScreenHeight() int64 {
	if o == nil {
		return 0
	}
	return o.ScreenHeight
}

func (o *BrowserInfo) GetScreenWidth() int64 {
	if o == nil {
		return 0
	}
	return o.ScreenWidth
}

func (o *BrowserInfo) GetTimeZoneOffset() int64 {
	if o == nil {
		return 0
	}
	return o.TimeZoneOffset
}

func (o *BrowserInfo) GetUserAgent() string {
	if o == nil {
		return ""
	}
	return o.UserAgent
}

func (o *BrowserInfo) GetUserDevice() UserDevice {
	if o == nil {
		return UserDevice("")
	}
	return o.UserDevice
}

func (o *BrowserInfo) GetAcceptHeader() *string {
	if o == nil {
		return nil
	}
	return o.AcceptHeader
}
