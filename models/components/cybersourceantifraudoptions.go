// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type CybersourceAntiFraudOptions struct {
	// A list of merchant defined data to be passed to the Cybersource Decision Manager API. Each key needs to be a numeric string.
	MerchantDefinedData map[string]string `json:"merchant_defined_data,omitempty"`
	// The merchant ID to use for this transaction. This requires a meta key to be set up for use with Cybersource Decision Manager, and this overrides the connector configuration.
	MetaKeyMerchantID *string `json:"meta_key_merchant_id,omitempty"`
	// The shipping method for this transaction.
	ShippingMethod *string `json:"shipping_method,omitempty"`
}

func (c *CybersourceAntiFraudOptions) GetMerchantDefinedData() map[string]string {
	if c == nil {
		return nil
	}
	return c.MerchantDefinedData
}

func (c *CybersourceAntiFraudOptions) GetMetaKeyMerchantID() *string {
	if c == nil {
		return nil
	}
	return c.MetaKeyMerchantID
}

func (c *CybersourceAntiFraudOptions) GetShippingMethod() *string {
	if c == nil {
		return nil
	}
	return c.ShippingMethod
}
