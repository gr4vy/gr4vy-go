// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/models/components"
)

type ListPaymentMethodsGlobals struct {
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (l *ListPaymentMethodsGlobals) GetMerchantAccountID() *string {
	if l == nil {
		return nil
	}
	return l.MerchantAccountID
}

type ListPaymentMethodsRequest struct {
	// A pointer to the page of results to return.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of items that are at returned.
	Limit *int64 `default:"20" queryParam:"style=form,explode=true,name=limit"`
	// The ID of the buyer to filter payment methods by.
	BuyerID *string `queryParam:"style=form,explode=true,name=buyer_id"`
	// The external identifier of the buyer to filter payment methods by.
	BuyerExternalIdentifier *string                          `queryParam:"style=form,explode=true,name=buyer_external_identifier"`
	Status                  []components.PaymentMethodStatus `queryParam:"style=form,explode=true,name=status"`
	// The external identifier of the payment method to filter by.
	ExternalIdentifier *string `queryParam:"style=form,explode=true,name=external_identifier"`
	// The ID of the merchant account to use for this request.
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (l ListPaymentMethodsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPaymentMethodsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListPaymentMethodsRequest) GetCursor() *string {
	if l == nil {
		return nil
	}
	return l.Cursor
}

func (l *ListPaymentMethodsRequest) GetLimit() *int64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

func (l *ListPaymentMethodsRequest) GetBuyerID() *string {
	if l == nil {
		return nil
	}
	return l.BuyerID
}

func (l *ListPaymentMethodsRequest) GetBuyerExternalIdentifier() *string {
	if l == nil {
		return nil
	}
	return l.BuyerExternalIdentifier
}

func (l *ListPaymentMethodsRequest) GetStatus() []components.PaymentMethodStatus {
	if l == nil {
		return nil
	}
	return l.Status
}

func (l *ListPaymentMethodsRequest) GetExternalIdentifier() *string {
	if l == nil {
		return nil
	}
	return l.ExternalIdentifier
}

func (l *ListPaymentMethodsRequest) GetMerchantAccountID() *string {
	if l == nil {
		return nil
	}
	return l.MerchantAccountID
}

type ListPaymentMethodsResponse struct {
	Result components.PaymentMethods

	Next func() (*ListPaymentMethodsResponse, error)
}

func (l *ListPaymentMethodsResponse) GetResult() components.PaymentMethods {
	if l == nil {
		return components.PaymentMethods{}
	}
	return l.Result
}
