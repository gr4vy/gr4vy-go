// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/models/components"
)

type UpdateBuyerGlobals struct {
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (o *UpdateBuyerGlobals) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

type UpdateBuyerRequest struct {
	// The ID of the buyer to edit.
	BuyerID          string   `pathParam:"style=simple,explode=false,name=buyer_id"`
	TimeoutInSeconds *float64 `default:"1" queryParam:"style=form,explode=true,name=timeout_in_seconds"`
	// The ID of the merchant account to use for this request.
	MerchantAccountID *string                `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
	BuyerUpdate       components.BuyerUpdate `request:"mediaType=application/json"`
}

func (u UpdateBuyerRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateBuyerRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *UpdateBuyerRequest) GetBuyerID() string {
	if o == nil {
		return ""
	}
	return o.BuyerID
}

func (o *UpdateBuyerRequest) GetTimeoutInSeconds() *float64 {
	if o == nil {
		return nil
	}
	return o.TimeoutInSeconds
}

func (o *UpdateBuyerRequest) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

func (o *UpdateBuyerRequest) GetBuyerUpdate() components.BuyerUpdate {
	if o == nil {
		return components.BuyerUpdate{}
	}
	return o.BuyerUpdate
}

type UpdateBuyerResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	Buyer *components.Buyer
}

func (o *UpdateBuyerResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateBuyerResponse) GetBuyer() *components.Buyer {
	if o == nil {
		return nil
	}
	return o.Buyer
}
