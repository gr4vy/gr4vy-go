// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/models/components"
	"github.com/gr4vy/gr4vy-go/types"
)

type ListBuyerPaymentMethodsGlobals struct {
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (o *ListBuyerPaymentMethodsGlobals) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

// OrderBy - The direction to sort the payment methods in.
type OrderBy string

const (
	OrderByAsc  OrderBy = "asc"
	OrderByDesc OrderBy = "desc"
)

func (e OrderBy) ToPointer() *OrderBy {
	return &e
}

type ListBuyerPaymentMethodsRequest struct {
	// The ID of the buyer to query payment methods for.
	BuyerID *string `queryParam:"style=form,explode=true,name=buyer_id"`
	// The external identifier of the buyer to query payment methods for.
	BuyerExternalIdentifier *string `queryParam:"style=form,explode=true,name=buyer_external_identifier"`
	// The field to sort the payment methods by.
	sortBy *string `const:"last_used_at" queryParam:"style=form,explode=true,name=sort_by"`
	// The direction to sort the payment methods in.
	OrderBy *OrderBy `default:"desc" queryParam:"style=form,explode=true,name=order_by"`
	// The country code to filter payment methods by. This only applies to payment methods with a `country` value.
	Country *string `queryParam:"style=form,explode=true,name=country"`
	// The currency code to filter payment methods by. This only applies to payment methods with a `currency` value.
	Currency *string `queryParam:"style=form,explode=true,name=currency"`
	// The ID of the merchant account to use for this request.
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (l ListBuyerPaymentMethodsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListBuyerPaymentMethodsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListBuyerPaymentMethodsRequest) GetBuyerID() *string {
	if o == nil {
		return nil
	}
	return o.BuyerID
}

func (o *ListBuyerPaymentMethodsRequest) GetBuyerExternalIdentifier() *string {
	if o == nil {
		return nil
	}
	return o.BuyerExternalIdentifier
}

func (o *ListBuyerPaymentMethodsRequest) GetSortBy() *string {
	return types.String("last_used_at")
}

func (o *ListBuyerPaymentMethodsRequest) GetOrderBy() *OrderBy {
	if o == nil {
		return nil
	}
	return o.OrderBy
}

func (o *ListBuyerPaymentMethodsRequest) GetCountry() *string {
	if o == nil {
		return nil
	}
	return o.Country
}

func (o *ListBuyerPaymentMethodsRequest) GetCurrency() *string {
	if o == nil {
		return nil
	}
	return o.Currency
}

func (o *ListBuyerPaymentMethodsRequest) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

type ListBuyerPaymentMethodsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	CollectionNoCursorPaymentMethodSummary *components.CollectionNoCursorPaymentMethodSummary
}

func (o *ListBuyerPaymentMethodsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListBuyerPaymentMethodsResponse) GetCollectionNoCursorPaymentMethodSummary() *components.CollectionNoCursorPaymentMethodSummary {
	if o == nil {
		return nil
	}
	return o.CollectionNoCursorPaymentMethodSummary
}
