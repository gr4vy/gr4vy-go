// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/models/components"
)

type ListPayoutsRequest struct {
	// A pointer to the page of results to return.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of items that are at returned.
	Limit *int64 `default:"20" queryParam:"style=form,explode=true,name=limit"`
	// The ID of the merchant account to use for this request.
	XGr4vyMerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (l ListPayoutsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPayoutsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListPayoutsRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *ListPayoutsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListPayoutsRequest) GetXGr4vyMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.XGr4vyMerchantAccountID
}

type ListPayoutsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	CollectionPayoutSummary *components.CollectionPayoutSummary

	Next func() (*ListPayoutsResponse, error)
}

func (o *ListPayoutsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListPayoutsResponse) GetCollectionPayoutSummary() *components.CollectionPayoutSummary {
	if o == nil {
		return nil
	}
	return o.CollectionPayoutSummary
}
