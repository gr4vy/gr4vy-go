// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/models/components"
)

type CreateTransactionRefundGlobals struct {
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (o *CreateTransactionRefundGlobals) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

type CreateTransactionRefundRequest struct {
	TransactionID    string   `pathParam:"style=simple,explode=false,name=transaction_id"`
	TimeoutInSeconds *float64 `default:"1" queryParam:"style=form,explode=true,name=timeout_in_seconds"`
	// The ID of the merchant account to use for this request.
	MerchantAccountID       *string                            `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
	TransactionRefundCreate components.TransactionRefundCreate `request:"mediaType=application/json"`
}

func (c CreateTransactionRefundRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CreateTransactionRefundRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CreateTransactionRefundRequest) GetTransactionID() string {
	if o == nil {
		return ""
	}
	return o.TransactionID
}

func (o *CreateTransactionRefundRequest) GetTimeoutInSeconds() *float64 {
	if o == nil {
		return nil
	}
	return o.TimeoutInSeconds
}

func (o *CreateTransactionRefundRequest) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

func (o *CreateTransactionRefundRequest) GetTransactionRefundCreate() components.TransactionRefundCreate {
	if o == nil {
		return components.TransactionRefundCreate{}
	}
	return o.TransactionRefundCreate
}

type CreateTransactionRefundResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	Refund *components.Refund
}

func (o *CreateTransactionRefundResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateTransactionRefundResponse) GetRefund() *components.Refund {
	if o == nil {
		return nil
	}
	return o.Refund
}
