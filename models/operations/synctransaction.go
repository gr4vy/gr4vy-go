// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/models/components"
)

type SyncTransactionRequest struct {
	TransactionID    string   `pathParam:"style=simple,explode=false,name=transaction_id"`
	TimeoutInSeconds *float64 `default:"1" queryParam:"style=form,explode=true,name=timeout_in_seconds"`
	// The ID of the merchant account to use for this request.
	XGr4vyMerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (s SyncTransactionRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SyncTransactionRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SyncTransactionRequest) GetTransactionID() string {
	if o == nil {
		return ""
	}
	return o.TransactionID
}

func (o *SyncTransactionRequest) GetTimeoutInSeconds() *float64 {
	if o == nil {
		return nil
	}
	return o.TimeoutInSeconds
}

func (o *SyncTransactionRequest) GetXGr4vyMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.XGr4vyMerchantAccountID
}

type SyncTransactionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	Transaction *components.Transaction
}

func (o *SyncTransactionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SyncTransactionResponse) GetTransaction() *components.Transaction {
	if o == nil {
		return nil
	}
	return o.Transaction
}
