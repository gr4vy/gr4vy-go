// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/models/components"
)

type ListAuditLogsGlobals struct {
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (o *ListAuditLogsGlobals) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

type ListAuditLogsRequest struct {
	// A pointer to the page of results to return.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of items that are at returned.
	Limit *int64 `default:"20" queryParam:"style=form,explode=true,name=limit"`
	// Filters the results to only the items for which the `audit-log` has an `action` that matches this value.
	Action *components.AuditLogAction `queryParam:"style=form,explode=true,name=action"`
	// Filters the results to only the items for which the `user` has an `id` that matches this value.
	UserID *string `queryParam:"style=form,explode=true,name=user_id"`
	// Filters the results to only the items for which the `audit-log` has a `resource` that matches this type value.
	ResourceType *string `queryParam:"style=form,explode=true,name=resource_type"`
	// The ID of the merchant account to use for this request.
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (l ListAuditLogsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListAuditLogsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *ListAuditLogsRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *ListAuditLogsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListAuditLogsRequest) GetAction() *components.AuditLogAction {
	if o == nil {
		return nil
	}
	return o.Action
}

func (o *ListAuditLogsRequest) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

func (o *ListAuditLogsRequest) GetResourceType() *string {
	if o == nil {
		return nil
	}
	return o.ResourceType
}

func (o *ListAuditLogsRequest) GetMerchantAccountID() *string {
	if o == nil {
		return nil
	}
	return o.MerchantAccountID
}

type ListAuditLogsResponse struct {
	Result components.AuditLogEntries

	Next func() (*ListAuditLogsResponse, error)
}

func (o *ListAuditLogsResponse) GetResult() components.AuditLogEntries {
	if o == nil {
		return components.AuditLogEntries{}
	}
	return o.Result
}
