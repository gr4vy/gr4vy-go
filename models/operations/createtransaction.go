// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gr4vy/gr4vy-go/models/components"
)

type CreateTransactionGlobals struct {
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (c *CreateTransactionGlobals) GetMerchantAccountID() *string {
	if c == nil {
		return nil
	}
	return c.MerchantAccountID
}

type CreateTransactionRequest struct {
	// The ID of the merchant account to use for this request.
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
	// A unique key that identifies this request. Providing this header will make this an idempotent request. We recommend using V4 UUIDs, or another random string with enough entropy to avoid collisions.
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
	// The IP address to forward from the customer. Use this when calling
	// our API from the server side to ensure the customer's address is
	// passed to downstream services, rather than your server IP.
	XForwardedFor     *string                      `header:"style=simple,explode=false,name=X-Forwarded-For"`
	TransactionCreate components.TransactionCreate `request:"mediaType=application/json"`
}

func (c *CreateTransactionRequest) GetMerchantAccountID() *string {
	if c == nil {
		return nil
	}
	return c.MerchantAccountID
}

func (c *CreateTransactionRequest) GetIdempotencyKey() *string {
	if c == nil {
		return nil
	}
	return c.IdempotencyKey
}

func (c *CreateTransactionRequest) GetXForwardedFor() *string {
	if c == nil {
		return nil
	}
	return c.XForwardedFor
}

func (c *CreateTransactionRequest) GetTransactionCreate() components.TransactionCreate {
	if c == nil {
		return components.TransactionCreate{}
	}
	return c.TransactionCreate
}
