// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/gr4vy/gr4vy-go/internal/utils"
	"github.com/gr4vy/gr4vy-go/models/components"
)

type ListPaymentServicesGlobals struct {
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (l *ListPaymentServicesGlobals) GetMerchantAccountID() *string {
	if l == nil {
		return nil
	}
	return l.MerchantAccountID
}

type ListPaymentServicesRequest struct {
	// Return any payment service for this method.
	Method *components.Method `queryParam:"style=form,explode=true,name=method"`
	// A pointer to the page of results to return.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The maximum number of items that are at returned.
	Limit *int64 `default:"20" queryParam:"style=form,explode=true,name=limit"`
	// Return any deleted payment service.
	Deleted *bool `queryParam:"style=form,explode=true,name=deleted"`
	// The ID of the merchant account to use for this request.
	MerchantAccountID *string `header:"style=simple,explode=false,name=x-gr4vy-merchant-account-id"`
}

func (l ListPaymentServicesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListPaymentServicesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListPaymentServicesRequest) GetMethod() *components.Method {
	if l == nil {
		return nil
	}
	return l.Method
}

func (l *ListPaymentServicesRequest) GetCursor() *string {
	if l == nil {
		return nil
	}
	return l.Cursor
}

func (l *ListPaymentServicesRequest) GetLimit() *int64 {
	if l == nil {
		return nil
	}
	return l.Limit
}

func (l *ListPaymentServicesRequest) GetDeleted() *bool {
	if l == nil {
		return nil
	}
	return l.Deleted
}

func (l *ListPaymentServicesRequest) GetMerchantAccountID() *string {
	if l == nil {
		return nil
	}
	return l.MerchantAccountID
}

type ListPaymentServicesResponse struct {
	Result components.PaymentServices

	Next func() (*ListPaymentServicesResponse, error)
}

func (l *ListPaymentServicesResponse) GetResult() components.PaymentServices {
	if l == nil {
		return components.PaymentServices{}
	}
	return l.Result
}
